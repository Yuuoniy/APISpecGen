[
    {
        "API": "omapdss_find_dss_of_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_find_compatible_node->omapdss_find_dss_of_node",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hns_dsaf_find_platform_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->hns_dsaf_find_platform_device",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rc_allocate_device",
        "SecOp": "rc_free_device",
        "hasUsage": true,
        "usageCount": 39,
        "depth": 1,
        "API_path": "device_initialize->rc_allocate_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "device_find_child_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "get_device->device_find_child_by_name",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rpi_firmware_get",
        "SecOp": "rpi_firmware_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rpi_firmware_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "edac_mc_alloc",
        "SecOp": "edac_mc_free",
        "hasUsage": true,
        "usageCount": 39,
        "depth": 1,
        "API_path": "device_initialize->edac_mc_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "of_phy_get",
        "SecOp": "of_phy_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->of_phy_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dfl_fpga_port_ops_get",
        "SecOp": "dfl_fpga_port_ops_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->dfl_fpga_port_ops_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "rcar_fcp_get",
        "SecOp": "rcar_fcp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->rcar_fcp_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfc_get_device",
        "SecOp": "nfc_put_device",
        "hasUsage": true,
        "usageCount": 19,
        "depth": 2,
        "API_path": "get_device->class_find_device->nfc_get_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rdma_user_mmap_entry_get",
        "SecOp": "rdma_user_mmap_entry_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rdma_user_mmap_entry_get_pgoff->rdma_user_mmap_entry_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_mdio_find_bus",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_of_node->of_mdio_find_bus",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "usb_get_phy",
        "SecOp": "usb_put_phy",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 1,
        "API_path": "get_device->usb_get_phy",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cpufreq_cpu_get",
        "SecOp": "cpufreq_cpu_put",
        "hasUsage": true,
        "usageCount": 23,
        "depth": 2,
        "API_path": "get_device->kobject_get->cpufreq_cpu_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_phy_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 5,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->fwnode_mdio_find_device->fwnode_phy_find_device->of_phy_find_device",
        "var_path": "arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hci_alloc_dev",
        "SecOp": "hci_free_dev",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->hci_alloc_dev_priv->hci_alloc_dev",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_dev_get",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "get_device->pci_dev_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ubi_get_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->ubi_get_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "xprt_switch_get",
        "SecOp": "xprt_switch_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->xprt_switch_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "i2c_get_adapter",
        "SecOp": "i2c_put_adapter",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 1,
        "API_path": "get_device->i2c_get_adapter",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iommu_group_get",
        "SecOp": "iommu_group_put",
        "hasUsage": true,
        "usageCount": 19,
        "depth": 2,
        "API_path": "get_device->kobject_get->iommu_group_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_irq_find_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_irq_find_parent",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wkup_m3_ipc_get",
        "SecOp": "wkup_m3_ipc_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->wkup_m3_ipc_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_matching_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 53,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_find_matching_node_and_match->of_find_matching_node",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_compatible_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 250,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_compatible_node",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_node_by_name",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 91,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_name",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_find_device_by_of_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_graph_get_endpoint_by_regs",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 34,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->of_get_parent->of_graph_parse_endpoint->of_graph_get_endpoint_by_regs",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_node_by_type",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 37,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_type",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "driver_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "get_device->driver_find_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_cpu_device_node_get",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 24,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_cpu_device_node_get",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_scan_single_device",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->pci_dev_get->pci_get_slot->pci_scan_single_device",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "agp_alloc_bridge",
        "SecOp": "agp_put_bridge",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->agp_alloc_bridge",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_mdio_bitbang",
        "SecOp": "free_mdio_bitbang",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mdiobus_alloc_size->mdiobus_alloc->alloc_mdio_bitbang",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pdev",
        "SecOp": "free_pdev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_pdev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "armpmu_alloc",
        "SecOp": "armpmu_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__armpmu_alloc->armpmu_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "atari_stram_alloc",
        "SecOp": "atari_stram_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->atari_stram_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bus_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 1,
        "API_path": "get_device->bus_find_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "chsc_get_next_subchannel",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->driver_find_device->chsc_get_next_subchannel",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_pm_opp_get_opp_table",
        "SecOp": "dev_pm_opp_put_opp_table",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->dev_pm_opp_get_opp_table",
        "var_path": "arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dma_fence_get_stub",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->dma_fence_get_stub",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drbd_find_resource",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->drbd_find_resource",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dw_mipi_dsi_rockchip_find_second",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->dw_mipi_dsi_rockchip_find_second",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "edac_device_alloc_ctl_info",
        "SecOp": "edac_device_free_ctl_info",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->edac_device_alloc_ctl_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fw_unit_get",
        "SecOp": "fw_unit_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->fw_unit_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hci_get_route",
        "SecOp": "hci_dev_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "get_device->hci_dev_hold->hci_get_route",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5e_tc_int_port_get",
        "SecOp": "mlx5e_tc_int_port_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->mlx5e_int_port_lookup->mlx5e_tc_int_port_get",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mmc_alloc_host",
        "SecOp": "mmc_free_host",
        "hasUsage": true,
        "usageCount": 32,
        "depth": 1,
        "API_path": "device_initialize->mmc_alloc_host",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "mtk_alloc_clk_data",
        "SecOp": "mtk_free_clk_data",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mtk_alloc_clk_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nf_ct_tmpl_alloc",
        "SecOp": "nf_ct_tmpl_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nf_ct_tmpl_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmem_cell_get",
        "SecOp": "nvmem_cell_put",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->__nvmem_device_get->of_nvmem_cell_get->nvmem_cell_get",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_device_by_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 47,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_matching_node_and_match",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_matching_node_and_match",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_node_by_path",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 144,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_opts_by_path->of_find_node_by_path",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_node_by_phandle",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_node_with_property",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_with_property",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_get_next_available_child",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_get_next_available_child",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_get_next_child",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 30,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->__of_get_next_child->of_get_next_child",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_get_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 90,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_get_parent",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_graph_get_next_endpoint",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 29,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->__of_get_next_child->of_get_next_child->of_graph_get_next_endpoint",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_graph_get_remote_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 32,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->of_graph_get_port_parent->of_graph_get_remote_port_parent->of_graph_get_remote_node",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_mdio_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->fwnode_mdio_find_device->of_mdio_find_device",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_node_get",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 49,
        "depth": 2,
        "API_path": "get_device->kobject_get->of_node_get",
        "var_path": "arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ovl_get_fh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_get_fh",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_store_saved_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_store_saved_state",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pmf_find_function",
        "SecOp": "pmf_put_function",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "try_module_get->pmf_get_function->pmf_find_function",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "sas_port_alloc_num",
        "SecOp": "sas_port_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "device_initialize->sas_port_alloc->sas_port_alloc_num",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "scsi_device_lookup_by_target",
        "SecOp": "scsi_device_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->scsi_device_get->scsi_device_lookup_by_target",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_host_lookup",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 19,
        "depth": 2,
        "API_path": "get_device->scsi_host_get->scsi_host_lookup",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "sync_file_get_fence",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->sync_file_get_fence",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tipc_aead_get",
        "SecOp": "tipc_aead_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->tipc_aead_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "typec_mux_get",
        "SecOp": "typec_mux_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->fwnode_typec_mux_get->typec_mux_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "rdma_user_mmap_entry_get_pgoff",
        "SecOp": "rdma_user_mmap_entry_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rdma_user_mmap_entry_get_pgoff",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bio_get",
        "SecOp": "bio_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "atomic_inc->bio_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "atomic_inc"
    },
    {
        "API": "usb_ep_alloc_request",
        "SecOp": "usb_ep_free_request",
        "hasUsage": true,
        "usageCount": 23,
        "depth": 6,
        "API_path": "kref_get->dma_fence_get->i915_request_get->__i915_request_create->i915_request_create->alloc_request->usb_ep_alloc_request",
        "var_path": "arg->retval->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kref_get"
    },
    {
        "API": "gpiod_get_optional",
        "SecOp": "gpiod_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 9,
        "API_path": "refcount_inc->kref_get->kobject_get->get_device->gpio_device_get->gpiod_request->gpiod_find_and_request->gpiod_get_index->gpiod_get_index_optional->gpiod_get_optional",
        "var_path": "arg->arg->retval->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "pci_get_device",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 26,
        "depth": 4,
        "API_path": "get_device->bus_find_device->pci_get_dev_by_id->pci_get_subsys->pci_get_device",
        "var_path": "arg->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_dev_get_first_match_dev",
        "SecOp": "acpi_dev_put",
        "hasUsage": true,
        "usageCount": 29,
        "depth": 3,
        "API_path": "get_device->bus_find_device->acpi_dev_get_next_match_dev->acpi_dev_get_first_match_dev",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "devfreq_recommended_opp",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 6,
        "API_path": "kref_get->dev_pm_opp_get->_opp_table_find_key->_find_key->_find_key_floor->dev_pm_opp_find_freq_floor_indexed->devfreq_recommended_opp",
        "var_path": "arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kref_get"
    },
    {
        "API": "dpll_device_get",
        "SecOp": "dpll_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->dpll_device_alloc->dpll_device_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_crtc_find",
        "SecOp": "drm_crtc_vblank_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kref_get_unless_zero->__drm_mode_object_find->drm_mode_object_find->drm_crtc_find",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kref_get_unless_zero"
    },
    {
        "API": "find_inode",
        "SecOp": "iput",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "atomic_inc->__iget->find_inode",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "atomic_inc"
    },
    {
        "API": "find_service_by_handle",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 1,
        "API_path": "kref_get_unless_zero->find_service_by_handle",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "kref_get_unless_zero"
    },
    {
        "API": "get_mtd_device_nm",
        "SecOp": "put_mtd_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->__get_mtd_device->get_mtd_device_nm",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_task_pid",
        "SecOp": "put_pid",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_pid->get_task_pid",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "j1939_session_skb_get_by_offset",
        "SecOp": "kfree_skb",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->skb_get->j1939_session_skb_get_by_offset",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "kobject_create_and_add",
        "SecOp": "kobject_put",
        "hasUsage": true,
        "usageCount": 56,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->kobject_create->kobject_create_and_add",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "machine__find_thread",
        "SecOp": "thread__put",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->thread__get->threads__find->__machine__findnew_thread->machine__find_thread",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mock_fence",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 1,
        "API_path": "kmalloc->mock_fence",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_reset_control_get_exclusive",
        "SecOp": "reset_control_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->__reset_control_get_internal->__of_reset_control_get->of_reset_control_get_exclusive",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "power_supply_get_by_name",
        "SecOp": "power_supply_put",
        "hasUsage": true,
        "usageCount": 26,
        "depth": 1,
        "API_path": "atomic_inc->power_supply_get_by_name",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "atomic_inc"
    },
    {
        "API": "prestera_bridge_create",
        "SecOp": "prestera_bridge_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->prestera_bridge_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sysfs_get_dirent",
        "SecOp": "sysfs_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 4,
        "API_path": "atomic_inc->kernfs_get->kernfs_find_and_get_ns->kernfs_find_and_get->sysfs_get_dirent",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "atomic_inc"
    },
    {
        "API": "xprt_switch_alloc",
        "SecOp": "xprt_switch_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->xprt_switch_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    }
]