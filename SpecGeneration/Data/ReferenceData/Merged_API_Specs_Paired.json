[
    {
        "API": "i2c_get_adapter",
        "SecOp": "i2c_put_adapter",
        "hasUsage": true,
        "usageCount": 19,
        "depth": 1,
        "API_path": "get_device->i2c_get_adapter",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "moxtet_alloc_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->moxtet_alloc_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "_zfcp_unit_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->_zfcp_unit_find",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "zfcp_unit_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->_zfcp_unit_find->zfcp_unit_find",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_xdomain_get",
        "SecOp": "tb_xdomain_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->tb_xdomain_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_xdomain_find_by_link_depth",
        "SecOp": "tb_xdomain_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->tb_xdomain_get->tb_xdomain_find_by_link_depth",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_xdomain_find_by_uuid",
        "SecOp": "tb_xdomain_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "get_device->tb_xdomain_get->tb_xdomain_find_by_uuid",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_xdomain_find_by_route",
        "SecOp": "tb_xdomain_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "get_device->tb_xdomain_get->tb_xdomain_find_by_route",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_xdomain_find_by_route_locked",
        "SecOp": "tb_xdomain_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->tb_xdomain_get->tb_xdomain_find_by_route->tb_xdomain_find_by_route_locked",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "usb_get_dev",
        "SecOp": "usb_put_dev",
        "hasUsage": true,
        "usageCount": 28,
        "depth": 1,
        "API_path": "get_device->usb_get_dev",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ubi_get_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->ubi_get_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_host_get",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->scsi_host_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_host_lookup",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 19,
        "depth": 2,
        "API_path": "get_device->scsi_host_get->scsi_host_lookup",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rproc_get_by_phandle",
        "SecOp": "rproc_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "get_device->rproc_get_by_phandle",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__pru_rproc_get",
        "SecOp": "rproc_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->rproc_get_by_phandle->__pru_rproc_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pruss_get",
        "SecOp": "pruss_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->pruss_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iio_trigger_acquire_by_name",
        "SecOp": "iio_trigger_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->iio_trigger_get->iio_trigger_acquire_by_name",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_phy_get",
        "SecOp": "of_phy_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->of_phy_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ap_get_qdev",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->ap_get_qdev",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_find_class",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->dev_find_class",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "device_find_child",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 18,
        "depth": 1,
        "API_path": "get_device->device_find_child",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_port_find_retimer",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child->tb_port_find_retimer",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iscsi_find_flashnode_sess",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child->iscsi_find_flashnode_sess",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scmi_child_dev_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child->scmi_child_dev_find",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iscsi_find_flashnode_conn",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "get_device->device_find_child->iscsi_find_flashnode_conn",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_spi_adap",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child->get_spi_adap",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cxl_find_nvdimm_bridge",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child->cxl_find_nvdimm_bridge",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rpmsg_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->device_find_child->rpmsg_find_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "device_find_any_child",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child->device_find_any_child",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ptp_ocp_find_flash",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->device_find_child->device_find_any_child->ptp_ocp_find_flash",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fsl_mc_device_lookup",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child->fsl_mc_device_lookup",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "typec_get_partner",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "get_device->device_find_child->typec_get_partner",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "efi_get_device_by_path",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->device_find_child->parse_pci_path->efi_get_device_by_path",
        "var_path": "arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_get_dev_root",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 30,
        "depth": 1,
        "API_path": "get_device->bus_get_dev_root",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_clt",
        "SecOp": "free_clt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_get_dev_root->get_device_parent->device_add->alloc_clt",
        "var_path": "arg->retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "w1_alloc_dev",
        "SecOp": "w1_free_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->bus_get_dev_root->get_device_parent->device_add->device_register->w1_alloc_dev",
        "var_path": "arg->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "parport_register_port",
        "SecOp": "parport_put_port",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "get_device->bus_get_dev_root->get_device_parent->device_add->device_register->parport_register_port",
        "var_path": "arg->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mt7915_pci_init_hif2",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->mt7915_pci_get_hif2->mt7915_pci_init_hif2",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fw_unit_get",
        "SecOp": "fw_unit_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->fw_unit_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "device_find_child_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "get_device->device_find_child_by_name",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ipu_bridge_get_ivsc_csi_dev",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child_by_name->ipu_bridge_get_ivsc_csi_dev",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cxl_find_region_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child_by_name->cxl_find_region_by_name",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_switch_find_by_route",
        "SecOp": "tb_switch_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "get_device->tb_switch_get->tb_switch_find_by_route",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rcar_fcp_get",
        "SecOp": "rcar_fcp_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->rcar_fcp_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "zfcp_get_port_by_wwpn",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "get_device->zfcp_get_port_by_wwpn",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ipmi_si_remove_by_data",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->ipmi_si_remove_by_data",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_and_get_file_info",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->find_and_get_file_info",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_memory_block_by_id",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->find_memory_block_by_id",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "lmb_to_memblock",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->find_memory_block_by_id->find_memory_block->lmb_to_memblock",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wkup_m3_ipc_get",
        "SecOp": "wkup_m3_ipc_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->wkup_m3_ipc_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rc_dev_get_from_fd",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "get_device->rc_dev_get_from_fd",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "usb_get_intf",
        "SecOp": "usb_put_intf",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->usb_get_intf",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ssb_device_get",
        "SecOp": "ssb_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->ssb_device_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 25,
        "depth": 1,
        "API_path": "get_device->bus_find_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_platform_device_find_by_companion",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_acpi_dev->acpi_platform_device_find_by_companion",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_spi_find_device_by_adev",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_acpi_dev->acpi_spi_find_device_by_adev",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wmi_find_device_by_guid",
        "SecOp": "wmi_device_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "get_device->bus_find_device->wmi_find_device_by_guid",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_switch_find_by_uuid",
        "SecOp": "tb_switch_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->bus_find_device->tb_switch_find_by_uuid",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_find_device_by_fwnode",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hns_dsaf_find_platform_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->hns_dsaf_find_platform_device",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fwnode_mdio_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->fwnode_mdio_find_device",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_mdio_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->fwnode_mdio_find_device->of_mdio_find_device",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_phy_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 5,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->fwnode_mdio_find_device->fwnode_phy_find_device->of_phy_find_device",
        "var_path": "arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "coresight_find_device_by_fwnode",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->coresight_find_device_by_fwnode",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scmdev_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->bus_find_device->scmdev_find",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_ccwdev_by_dev_id",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->bus_find_device->get_ccwdev_by_dev_id",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "platform_find_device_by_driver",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->bus_find_device->platform_find_device_by_driver",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "usbdev_lookup_by_devt",
        "SecOp": "usb_put_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_devt->usbdev_lookup_by_devt",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wmi_find_event_by_notify_id",
        "SecOp": "wmi_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->bus_find_device->wmi_find_event_by_notify_id",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_switch_find_by_link_depth",
        "SecOp": "tb_switch_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "get_device->bus_find_device->tb_switch_find_by_link_depth",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_find_device_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 21,
        "depth": 2,
        "API_path": "get_device->bus_find_device->bus_find_device_by_name",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "vio_find_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_name->vio_find_name->vio_find_node",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_cxl_port_at",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->__find_cxl_port->find_cxl_port_at",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_cxl_port",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->bus_find_device->__find_cxl_port->find_cxl_port",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cxl_pci_find_port",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->bus_find_device->__find_cxl_port->find_cxl_port->cxl_pci_find_port",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cxl_mem_find_port",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->__find_cxl_port->find_cxl_port->cxl_mem_find_port",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_lpss_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->bus_find_device->acpi_lpss_find_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_dev_get_first_match_dev",
        "SecOp": "acpi_dev_put",
        "hasUsage": true,
        "usageCount": 29,
        "depth": 3,
        "API_path": "get_device->bus_find_device->acpi_dev_get_next_match_dev->acpi_dev_get_first_match_dev",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_find_device_by_of_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_spi_device_by_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_spi_device_by_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_mipi_dsi_device_by_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_mipi_dsi_device_by_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wcd938x_sdw_device_get",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->wcd938x_sdw_device_get",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "qcom_pmic_get_base_usid",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->spmi_find_device_by_of_node->qcom_pmic_get_base_usid",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wcd939x_sdw_device_get",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->wcd939x_sdw_device_get",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_device_by_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 70,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dw_mipi_dsi_rockchip_find_second",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->dw_mipi_dsi_rockchip_find_second",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "xgbe_get_phy_pdev",
        "SecOp": "platform_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->xgbe_of_get_phy_pdev->xgbe_get_phy_pdev",
        "var_path": "arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mvneta_bm_get",
        "SecOp": "mvneta_bm_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->mvneta_bm_get",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scp_get",
        "SecOp": "scp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->scp_get",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "usb_of_get_companion_dev",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->usb_of_get_companion_dev",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_path_to_platform_device",
        "SecOp": "platform_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->of_path_to_platform_device",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mxic_ecc_get_pdev",
        "SecOp": "platform_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->mxic_ecc_get_pdev",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "usb_find_interface",
        "SecOp": "usb_autopm_put_interface",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->bus_find_device->usb_find_interface",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_subchannel_by_schid",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "get_device->bus_find_device->get_subchannel_by_schid",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_find_next_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->bus_find_device->bus_find_next_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "snr_uncore_get_mc_dev",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->bus_find_device->pci_get_dev_by_id->pci_get_subsys->pci_get_device->snr_uncore_get_mc_dev",
        "var_path": "arg->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_get_related_function",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->bus_find_device->pci_get_dev_by_id->pci_get_subsys->pci_get_device->pci_get_related_function",
        "var_path": "arg->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "omapdss_find_output_from_display",
        "SecOp": "omap_dss_put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->omap_dss_get_device->omapdss_find_output_from_display",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__dfl_fpga_cdev_find_port",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->__dfl_fpga_cdev_find_port",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_dev_get",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 1,
        "API_path": "get_device->pci_dev_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_p2pmem_find_many",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->pci_dev_get->pci_p2pmem_find_many",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_p2pmem_find",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->pci_dev_get->pci_p2pmem_find_many->pci_p2pmem_find",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_dpc_port_get",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->pci_dev_get->acpi_dpc_port_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iscsi_lookup_endpoint",
        "SecOp": "iscsi_put_endpoint",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 1,
        "API_path": "get_device->iscsi_lookup_endpoint",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_cxl_adapter",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->get_cxl_adapter",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mt7996_pci_init_hif2",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->mt7996_pci_get_hif2->mt7996_pci_init_hif2",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "driver_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "get_device->driver_find_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_ccwdev_by_busid",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->driver_find_device->driver_find_device_by_name->get_ccwdev_by_busid",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "driver_find_device_by_fwnode",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->driver_find_device->driver_find_device_by_fwnode",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "chsc_get_next_subchannel",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->driver_find_device->chsc_get_next_subchannel",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ubi_get_by_major",
        "SecOp": "ubi_put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->ubi_get_by_major",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "usb_get_phy",
        "SecOp": "usb_put_phy",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "get_device->usb_get_phy",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "spi_controller_get",
        "SecOp": "spi_controller_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "get_device->spi_controller_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "enclosure_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->enclosure_find",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_device_from_queue",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "get_device->scsi_device_from_queue",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hci_conn_get",
        "SecOp": "hci_conn_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->hci_conn_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "class_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 1,
        "API_path": "get_device->class_find_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfc_get_device",
        "SecOp": "nfc_put_device",
        "hasUsage": true,
        "usageCount": 21,
        "depth": 2,
        "API_path": "get_device->class_find_device->nfc_get_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "regulator_dev_lookup",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->class_find_device->regulator_lookup_by_name->regulator_dev_lookup",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fpga_region_class_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->class_find_device->fpga_region_class_find",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dfl_fme_region_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->fpga_region_class_find->dfl_fme_region_find",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_fpga_region_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->fpga_region_class_find->of_fpga_region_find",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wwan_dev_get_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->class_find_device->wwan_dev_get_by_name",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wwan_port_get_by_minor",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->class_find_device->wwan_port_get_by_minor",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "devm_of_find_backlight",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->class_find_device->of_find_backlight_by_node->of_find_backlight->devm_of_find_backlight",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "class_find_device_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "get_device->class_find_device->class_find_device_by_name",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wpan_phy_find",
        "SecOp": "wpan_phy_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_name->wpan_phy_find",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mdio_find_bus",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_name->mdio_find_bus",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_zcdndev_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_name->find_zcdndev_by_name",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "backlight_device_get_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_name->backlight_device_get_by_name",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "class_find_device_by_of_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "get_device->class_find_device->class_find_device_by_of_node",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_mdio_find_bus",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_of_node->of_mdio_find_bus",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_mux_chip_by_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_of_node->of_find_mux_chip_by_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_spi_controller_by_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_of_node->of_find_spi_controller_by_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wwan_dev_get_by_debugfs",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->class_find_device->wwan_dev_get_by_debugfs",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "class_find_device_by_devt",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->class_find_device->class_find_device_by_devt",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_zcdndev_by_devt",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_devt->find_zcdndev_by_devt",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wwan_dev_get_by_parent",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "get_device->class_find_device->wwan_dev_get_by_parent",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wwan_get_debugfs_dir",
        "SecOp": "wwan_put_debugfs_dir",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->wwan_dev_get_by_parent->wwan_get_debugfs_dir",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_ae",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->class_find_device->find_ae",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_spi_find_controller_by_adev",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->class_find_device->acpi_spi_find_controller_by_adev",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "sas_get_local_phy",
        "SecOp": "sas_put_local_phy",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 1,
        "API_path": "get_device->sas_get_local_phy",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "gb_control_get",
        "SecOp": "gb_control_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->gb_control_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_buf",
        "SecOp": "free_buf",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "get_device->alloc_buf",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__scsi_find_target",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->__scsi_find_target",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_alloc_target",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->__scsi_find_target->scsi_alloc_target",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_get_slot",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 38,
        "depth": 2,
        "API_path": "get_device->pci_dev_get->pci_get_slot",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_get_func0_dev",
        "SecOp": "pci_config_pm_runtime_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->pci_dev_get->pci_get_slot->pci_get_func0_dev",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_scan_single_device",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->pci_dev_get->pci_get_slot->pci_scan_single_device",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ptp_get",
        "SecOp": "ptp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->pci_dev_get->ptp_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bnx2i_alloc_hba",
        "SecOp": "bnx2i_free_hba",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->pci_dev_get->bnx2i_alloc_hba",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_device_lookup",
        "SecOp": "scsi_device_put",
        "hasUsage": true,
        "usageCount": 27,
        "depth": 2,
        "API_path": "get_device->scsi_device_get->scsi_device_lookup",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aac_lookup_safw_scsi_device",
        "SecOp": "aac_put_safw_scsi_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->scsi_device_get->scsi_device_lookup->aac_lookup_safw_scsi_device",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "zfcp_unit_sdev",
        "SecOp": "scsi_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->scsi_device_get->scsi_device_lookup->zfcp_unit_sdev",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_device_lookup_by_target",
        "SecOp": "scsi_device_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->scsi_device_get->scsi_device_lookup_by_target",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__scsi_add_device",
        "SecOp": "scsi_device_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->scsi_device_get->scsi_device_lookup_by_target->scsi_probe_and_add_lun->__scsi_add_device",
        "var_path": "arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_tape_get",
        "SecOp": "scsi_tape_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->scsi_device_get->scsi_tape_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nd_pfn_devinit",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->__nd_attach_ndns->nd_pfn_devinit",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__nd_btt_create",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->__nd_attach_ndns->__nd_btt_create",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tpm_find_get_ops",
        "SecOp": "tpm_put_ops",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "get_device->tpm_try_get_ops->tpm_find_get_ops",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fw_device_get_by_devt",
        "SecOp": "fw_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->fw_device_get->fw_device_get_by_devt",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kunit_device_register",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->bus_get_dev_root->get_device_parent->device_add->device_register->kunit_device_register_internal->kunit_device_register",
        "var_path": "arg->retval->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bnx2i_alloc_ep",
        "SecOp": "bnx2i_free_ep",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->bus_get_dev_root->get_device_parent->device_add->device_register->iscsi_create_endpoint->bnx2i_alloc_ep",
        "var_path": "arg->retval->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_i2c_register_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->bus_get_dev_root->get_device_parent->device_add->device_register->i2c_new_client_device->of_i2c_register_device",
        "var_path": "arg->retval->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvme_pci_alloc_dev",
        "SecOp": "nvme_free_host_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->bus_get_dev_root->get_device_parent->device_add->cdev_device_add->nvme_init_ctrl->nvme_pci_alloc_dev",
        "var_path": "arg->retval->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "sky2_init_netdev",
        "SecOp": "free_netdev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->of_get_mac_address_nvmem->of_get_mac_address->of_get_ethdev_address->sky2_init_netdev",
        "var_path": "arg->retval->retval->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_domain_alloc",
        "SecOp": "tb_domain_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->tb_domain_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "spi_alloc_master",
        "SecOp": "spi_controller_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "device_initialize->__spi_alloc_controller->spi_alloc_master",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "spi_alloc_target",
        "SecOp": "spi_controller_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "device_initialize->__spi_alloc_controller->spi_alloc_target",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "spi_alloc_host",
        "SecOp": "spi_controller_put",
        "hasUsage": true,
        "usageCount": 70,
        "depth": 2,
        "API_path": "device_initialize->__spi_alloc_controller->spi_alloc_host",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "spi_alloc_slave",
        "SecOp": "spi_controller_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->__spi_alloc_controller->spi_alloc_slave",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "memstick_alloc_host",
        "SecOp": "memstick_free_host",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "device_initialize->memstick_alloc_host",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "iscsi_alloc_session",
        "SecOp": "iscsi_free_session",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->iscsi_alloc_session",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "tb_switch_alloc",
        "SecOp": "tb_switch_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "device_initialize->tb_switch_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "alloc_switch",
        "SecOp": "tb_switch_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "device_initialize->tb_switch_alloc->alloc_switch",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "sas_port_alloc",
        "SecOp": "sas_port_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->sas_port_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "sas_port_alloc_num",
        "SecOp": "sas_port_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "device_initialize->sas_port_alloc->sas_port_alloc_num",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "gb_module_create",
        "SecOp": "gb_module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->gb_module_create",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "iio_device_alloc",
        "SecOp": "iio_device_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "device_initialize->iio_device_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "hsi_alloc_controller",
        "SecOp": "hsi_put_controller",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->hsi_alloc_controller",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "phy_device_create",
        "SecOp": "phy_device_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->phy_device_create",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "get_phy_device",
        "SecOp": "phy_device_free",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "device_initialize->phy_device_create->get_phy_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "mipi_dsi_device_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->mipi_dsi_device_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "intel_th_device_alloc",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->intel_th_device_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "serdev_controller_alloc",
        "SecOp": "serdev_controller_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->serdev_controller_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "ssam_device_alloc",
        "SecOp": "ssam_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->ssam_device_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "mmc_alloc_host",
        "SecOp": "mmc_free_host",
        "hasUsage": true,
        "usageCount": 33,
        "depth": 1,
        "API_path": "device_initialize->mmc_alloc_host",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "spi_alloc_device",
        "SecOp": "spi_dev_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "device_initialize->spi_alloc_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "of_register_spi_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->spi_alloc_device->of_register_spi_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "acpi_spi_device_alloc",
        "SecOp": "spi_dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "device_initialize->spi_alloc_device->acpi_spi_device_alloc",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "tpm_chip_alloc",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->tpm_chip_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "rproc_alloc",
        "SecOp": "rproc_free",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "device_initialize->rproc_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "devm_rproc_alloc",
        "SecOp": "stm32_rproc_free_mbox",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->rproc_alloc->devm_rproc_alloc",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "scp_rproc_init",
        "SecOp": "scp_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "device_initialize->rproc_alloc->devm_rproc_alloc->scp_rproc_init",
        "var_path": "arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "peci_controller_alloc",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->peci_controller_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "tifm_alloc_adapter",
        "SecOp": "tifm_free_adapter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->tifm_alloc_adapter",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "scsi_host_alloc",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 98,
        "depth": 1,
        "API_path": "device_initialize->scsi_host_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "NCR_700_detect",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "device_initialize->scsi_host_alloc->NCR_700_detect",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "hisi_sas_shost_alloc_pci",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->scsi_host_alloc->hisi_sas_shost_alloc_pci",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "iscsi_host_alloc",
        "SecOp": "iscsi_host_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "device_initialize->scsi_host_alloc->iscsi_host_alloc",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "hisi_sas_shost_alloc",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->scsi_host_alloc->hisi_sas_shost_alloc",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "beiscsi_hba_alloc",
        "SecOp": "beiscsi_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "device_initialize->scsi_host_alloc->iscsi_host_alloc->beiscsi_hba_alloc",
        "var_path": "arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "sas_phy_alloc",
        "SecOp": "sas_phy_free",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "device_initialize->sas_phy_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "get_or_create_srv",
        "SecOp": "put_srv",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->get_or_create_srv",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "__rbd_dev_create",
        "SecOp": "rbd_dev_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->__rbd_dev_create",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "rbd_dev_create",
        "SecOp": "rbd_free_disk",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->__rbd_dev_create->rbd_dev_create",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "mcp_host_alloc",
        "SecOp": "mcp_host_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->mcp_host_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "snd_soc_alloc_ac97_component",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->snd_soc_alloc_ac97_component",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "snd_soc_new_ac97_component",
        "SecOp": "snd_soc_free_ac97_component",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "device_initialize->snd_soc_alloc_ac97_component->snd_soc_new_ac97_component",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "mdio_device_create",
        "SecOp": "mdio_device_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->mdio_device_create",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "serdev_device_alloc",
        "SecOp": "serdev_device_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "device_initialize->serdev_device_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "input_allocate_device",
        "SecOp": "input_register_device",
        "hasUsage": true,
        "usageCount": 133,
        "depth": 1,
        "API_path": "device_initialize->input_allocate_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "devm_input_allocate_device",
        "SecOp": "input_register_device",
        "hasUsage": true,
        "usageCount": 223,
        "depth": 2,
        "API_path": "device_initialize->input_allocate_device->devm_input_allocate_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "hidpp_allocate_input",
        "SecOp": "input_register_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "device_initialize->input_allocate_device->devm_input_allocate_device->hidpp_allocate_input",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "ps_allocate_input_dev",
        "SecOp": "input_register_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "device_initialize->input_allocate_device->devm_input_allocate_device->ps_allocate_input_dev",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "shield_allocate_input_dev",
        "SecOp": "input_register_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->input_allocate_device->shield_allocate_input_dev",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "rc_allocate_device",
        "SecOp": "rc_free_device",
        "hasUsage": true,
        "usageCount": 38,
        "depth": 1,
        "API_path": "device_initialize->rc_allocate_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "vfio_group_alloc",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->vfio_group_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "spmi_device_alloc",
        "SecOp": "spmi_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->spmi_device_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "usb_alloc_dev",
        "SecOp": "usb_put_dev",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->usb_alloc_dev",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "edac_mc_alloc",
        "SecOp": "edac_mc_free",
        "hasUsage": true,
        "usageCount": 41,
        "depth": 1,
        "API_path": "device_initialize->edac_mc_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "css_alloc_subchannel",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->css_alloc_subchannel",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "cio_probe_console",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->css_alloc_subchannel->cio_probe_console",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "parport_register_dev_model",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 0,
        "depth": 2,
        "API_path": "device_initialize->device_register->parport_register_dev_model",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "of_find_all_nodes",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "of_node_get->of_find_all_nodes",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_find_node_with_property",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "of_node_get->of_find_node_with_property",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_find_node_by_type",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 42,
        "depth": 1,
        "API_path": "of_node_get->of_find_node_by_type",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "qe_get_device_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "of_node_get->of_find_node_by_type->qe_get_device_node",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_get_next_available_child",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 2,
        "API_path": "of_node_get->of_get_next_status_child->of_get_next_available_child",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "imx8qxp_pxl2dpi_get_available_ep_from_port",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "of_node_get->of_get_next_status_child->of_get_next_available_child->imx8qxp_pxl2dpi_get_available_ep_from_port",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "ti_find_clock_provider",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "of_node_get->ti_find_clock_provider",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_find_matching_node_and_match",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 24,
        "depth": 1,
        "API_path": "of_node_get->of_find_matching_node_and_match",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_find_matching_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 74,
        "depth": 2,
        "API_path": "of_node_get->of_find_matching_node_and_match->of_find_matching_node",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "get_ppc_fw_sb_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "of_node_get->of_find_matching_node_and_match->of_find_matching_node->get_ppc_fw_sb_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "rpi_firmware_find_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "of_node_get->of_find_matching_node_and_match->of_find_matching_node->rpi_firmware_find_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_find_compatible_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 294,
        "depth": 1,
        "API_path": "of_node_get->of_find_compatible_node",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "omapdss_find_dss_of_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "of_node_get->of_find_compatible_node->omapdss_find_dss_of_node",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_find_node_by_phandle",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 26,
        "depth": 1,
        "API_path": "of_node_get->of_find_node_by_phandle",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_irq_find_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 21,
        "depth": 2,
        "API_path": "of_node_get->of_find_node_by_phandle->of_irq_find_parent",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "bcom_task_alloc",
        "SecOp": "bcom_task_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "of_node_get->of_find_node_by_phandle->of_irq_find_parent->of_irq_parse_one->irq_of_parse_and_map->bcom_task_alloc",
        "var_path": "arg->retval->retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "find_dcr_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "of_node_get->of_find_node_by_phandle->find_dcr_parent",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_find_node_by_name",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 98,
        "depth": 1,
        "API_path": "of_node_get->of_find_node_by_name",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "tegra_emc_find_node_by_ram_code",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "of_node_get->of_find_node_by_name->tegra_emc_find_node_by_ram_code",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_graph_get_port_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "of_node_get->of_graph_get_port_parent",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_graph_get_remote_port_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 37,
        "depth": 2,
        "API_path": "of_node_get->of_graph_get_port_parent->of_graph_get_remote_port_parent",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_graph_get_remote_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 43,
        "depth": 3,
        "API_path": "of_node_get->of_graph_get_port_parent->of_graph_get_remote_port_parent->of_graph_get_remote_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_coresight_get_port_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "of_node_get->of_graph_get_port_parent->of_coresight_get_port_parent",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_get_next_child",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 32,
        "depth": 2,
        "API_path": "of_node_get->__of_get_next_child->of_get_next_child",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_graph_get_next_endpoint",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 3,
        "API_path": "of_node_get->__of_get_next_child->of_get_next_child->of_graph_get_next_endpoint",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "ehea_get_eth_dn",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "of_node_get->__of_get_next_child->of_get_next_child->ehea_get_eth_dn",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "omapdss_of_get_next_endpoint",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "of_node_get->__of_get_next_child->of_get_next_child->omapdss_of_get_next_endpoint",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_get_next_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 1,
        "API_path": "of_node_get->of_get_next_parent",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "omapdss_of_get_remote_port",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "of_node_get->of_get_next_parent->omapdss_of_get_remote_port",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_graph_get_remote_port",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 2,
        "API_path": "of_node_get->of_get_next_parent->of_graph_get_remote_port",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "_add_opp_table_indexed",
        "SecOp": "dev_pm_opp_put_opp_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "of_node_get->dev_pm_opp_of_find_icc_paths->_allocate_opp_table->_add_opp_table_indexed",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "_add_opp_table",
        "SecOp": "dev_pm_opp_put_opp_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "of_node_get->dev_pm_opp_of_find_icc_paths->_allocate_opp_table->_add_opp_table_indexed->_add_opp_table",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "find_pe_dn",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "of_node_get->of_get_parent->find_pe_dn",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "of_graph_get_endpoint_by_regs",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 71,
        "depth": 3,
        "API_path": "of_node_get->of_get_parent->of_graph_parse_endpoint->of_graph_get_endpoint_by_regs",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "dev_pm_opp_set_supported_hw",
        "SecOp": "dev_pm_opp_put_supported_hw",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "of_node_get->dev_pm_opp_of_find_icc_paths->_allocate_opp_table->_add_opp_table_indexed->_add_opp_table->dev_pm_opp_set_config->dev_pm_opp_set_supported_hw",
        "var_path": "arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "fsi_slave_find_of_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "of_node_get->of_get_parent->__of_get_address->of_get_address->of_property_read_reg->fsi_slave_node_matches->fsi_slave_find_of_node",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "of_node_get"
    },
    {
        "API": "make_slot_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->make_slot_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hid_alloc_report_buf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 1,
        "API_path": "kmalloc->hid_alloc_report_buf",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_alloc_cmd_mailbox",
        "SecOp": "mlx4_free_cmd_mailbox",
        "hasUsage": true,
        "usageCount": 83,
        "depth": 1,
        "API_path": "kmalloc->mlx4_alloc_cmd_mailbox",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "blk_stat_alloc_callback",
        "SecOp": "blk_stat_free_callback",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->blk_stat_alloc_callback",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_wr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_wr",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xprt_switch_alloc",
        "SecOp": "xprt_switch_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->xprt_switch_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ldt_struct",
        "SecOp": "free_ldt_struct",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->alloc_ldt_struct",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_lookup_system_key",
        "SecOp": "bpf_key_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->bpf_lookup_system_key",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rpcrdma_regbuf_alloc",
        "SecOp": "rpcrdma_regbuf_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->rpcrdma_regbuf_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "load_elf_phdrs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->load_elf_phdrs",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cnv_err_stats_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->cnv_err_stats_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "blk_alloc_queue_stats",
        "SecOp": "blk_free_queue_stats",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->blk_alloc_queue_stats",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "extract_hostname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->extract_hostname",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_sdesc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->alloc_sdesc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "it821x_firmware_command",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->it821x_firmware_command",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ubifs_tnc_next_ent",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->ubifs_tnc_next_ent",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "p54_convert_db",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->p54_convert_db",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "debug_get_user_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->debug_get_user_string",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfsd4_cltrack_legacy_topdir",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfsd4_cltrack_legacy_topdir",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__get_or_create_frag",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->__get_or_create_frag",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bio_alloc_map_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->bio_alloc_map_data",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__nfp_rtsym_table_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->__nfp_rtsym_table_read",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_ctl_pkg_alloc",
        "SecOp": "tb_ctl_pkg_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->tb_ctl_pkg_alloc",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "jz4780_dma_desc_alloc",
        "SecOp": "jz4780_dma_desc_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->jz4780_dma_desc_alloc",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hns_roce_alloc_cmd_mailbox",
        "SecOp": "hns_roce_free_cmd_mailbox",
        "hasUsage": true,
        "usageCount": 18,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->hns_roce_alloc_cmd_mailbox",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_alloc_mailbox",
        "SecOp": "mthca_free_mailbox",
        "hasUsage": true,
        "usageCount": 27,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->mthca_alloc_mailbox",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "stm32_mdma_alloc_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->stm32_mdma_alloc_desc",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xhci_alloc_container_ctx",
        "SecOp": "xhci_free_container_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_alloc_container_ctx",
        "var_path": "retval->retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xhci_alloc_stream_info",
        "SecOp": "xhci_free_stream_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_alloc_stream_ctx->xhci_alloc_stream_info",
        "var_path": "retval->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usb_alloc_urb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "kmalloc->usb_alloc_urb",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "simple_alloc_urb",
        "SecOp": "simple_free_urb",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->usb_alloc_urb->usbtest_alloc_urb->simple_alloc_urb",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ceph_osdc_alloc_request",
        "SecOp": "ceph_osdc_put_request",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 1,
        "API_path": "kmalloc->ceph_osdc_alloc_request",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sti_get_bmode_rom",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->sti_get_bmode_rom",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_dname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->get_dname",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hypfs_dbfs_data_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->hypfs_dbfs_data_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_build_path_to_root",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->cifs_build_path_to_root",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "metadata_dst_alloc",
        "SecOp": "metadata_dst_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->metadata_dst_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ecc_alloc_point",
        "SecOp": "ecc_free_point",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "kmalloc->ecc_alloc_point",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kmalloc_array",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 456,
        "depth": 1,
        "API_path": "kmalloc->kmalloc_array",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sgl_alloc_order",
        "SecOp": "sgl_free_order",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->sgl_alloc_order",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sgl_alloc",
        "SecOp": "sgl_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->sgl_alloc_order->sgl_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_indirect_split",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_indirect_split",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_indirect_packed",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_indirect_packed",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "randomised_engines",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->randomised_engines",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vmalloc_to_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->vmalloc_to_sg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "batadv_dat_select_candidates",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->batadv_dat_select_candidates",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "_parse_named_prop",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->_parse_named_prop",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "opp_parse_microvolt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->_parse_named_prop->opp_parse_microvolt",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ksmbd_init_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->ksmbd_init_sg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bitmap_alloc",
        "SecOp": "bitmap_free",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bitmap_zalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "its_lpi_alloc",
        "SecOp": "its_lpi_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->its_lpi_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_whitelist",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->alloc_whitelist",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_random_order",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->get_random_order",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_readdir_alloc_pages",
        "SecOp": "nfs_readdir_free_pages",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->nfs_readdir_alloc_pages",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "str_to_pids",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->str_to_pids",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efa_vmalloc_buf_to_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->efa_vmalloc_buf_to_sg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kcalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1306,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->kcalloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "traceprobe_expand_meta_args",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->traceprobe_expand_meta_args",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_ftrace_locations",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->get_ftrace_locations",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmet_rdma_alloc_cmds",
        "SecOp": "nvmet_rdma_free_cmds",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->nvmet_rdma_alloc_cmds",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "clkgen_mux_get_parents",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->clkgen_mux_get_parents",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "msm_parse_post_deps",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->msm_parse_post_deps",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "flexgen_get_parents",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->flexgen_get_parents",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_group_attrs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_group_attrs",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_guest_idal",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->get_guest_idal",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bond_verify_device_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bond_verify_device_path",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zynqmp_disp_layer_drm_formats",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->zynqmp_disp_layer_drm_formats",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_map_discard",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->btrfs_map_discard",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_writeback_formats",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->get_writeback_formats",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hns3_backup_ringparam",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->hns3_backup_ringparam",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rpc_alloc_iostats",
        "SecOp": "rpc_free_iostats",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->rpc_alloc_iostats",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocfs2_dx_dir_kmalloc_leaves",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ocfs2_dx_dir_kmalloc_leaves",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tcf_pedit_keys_ex_parse",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->tcf_pedit_keys_ex_parse",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_namespace_io",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->create_namespace_io",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tty3270_alloc_screen",
        "SecOp": "tty3270_free_screen",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->tty3270_alloc_screen",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aoedev_by_aoeaddr",
        "SecOp": "aoedev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->aoedev_by_aoeaddr",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "enetc_alloc_tx_resources",
        "SecOp": "enetc_free_tx_resources",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->enetc_alloc_tx_resources",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "srp_ring_alloc",
        "SecOp": "srp_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->srp_ring_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pg_vec",
        "SecOp": "free_pg_vec",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_pg_vec",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ext4_find_extent",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ext4_find_extent",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rtrs_iu_alloc",
        "SecOp": "rtrs_iu_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->rtrs_iu_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "enetc_alloc_rx_resources",
        "SecOp": "enetc_free_rx_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->enetc_alloc_rx_resources",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "samsung_clk_alloc_reg_dump",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->samsung_clk_alloc_reg_dump",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath10k_wmi_tlv_parse_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ath10k_wmi_tlv_parse_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xt_hook_ops_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->xt_hook_ops_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cci_pci_create_irq_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->cci_pci_create_irq_table",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xen_copy_pss_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->xen_copy_pss_data",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_chan_prog",
        "SecOp": "free_chan_prog",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_chan_prog",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "led_get_default_pattern",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->led_get_default_pattern",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_xdpqs",
        "SecOp": "free_xdpqs",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_xdpqs",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_stack_alloc",
        "SecOp": "ovl_stack_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ovl_stack_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "request_arr_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->request_arr_init",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "msm_parse_deps",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->msm_parse_deps",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvme_rdma_alloc_ring",
        "SecOp": "nvme_rdma_free_ring",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->nvme_rdma_alloc_ring",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_affinity_masks",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->create_affinity_masks",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_trampoline_get_progs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bpf_trampoline_get_progs",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "irq_create_affinity_masks",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->irq_create_affinity_masks",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmar_alloc_dev_scope",
        "SecOp": "dmar_free_dev_scope",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->dmar_alloc_dev_scope",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath12k_wmi_tlv_parse_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 24,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ath12k_wmi_tlv_parse_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hci_alloc_xfer",
        "SecOp": "hci_free_xfer",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->hci_alloc_xfer",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "group_cpus_evenly",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->group_cpus_evenly",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath11k_wmi_tlv_parse_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 28,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ath11k_wmi_tlv_parse_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_node_to_cpumask",
        "SecOp": "free_node_to_cpumask",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_node_to_cpumask",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kvm_create_vm",
        "SecOp": "kvm_put_kvm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->kvm_create_vm_debugfs->kvm_create_vm",
        "var_path": "retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usnic_vnic_alloc",
        "SecOp": "usnic_vnic_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kmalloc_array->kcalloc->usnic_vnic_alloc_res_chunk->usnic_vnic_discover_resources->usnic_vnic_alloc",
        "var_path": "retval->retval->retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_atomic_state_alloc",
        "SecOp": "drm_atomic_state_put",
        "hasUsage": true,
        "usageCount": 30,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->drm_atomic_state_init->drm_atomic_state_alloc",
        "var_path": "retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_atomic_helper_duplicate_state",
        "SecOp": "drm_atomic_state_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "kmalloc->kmalloc_array->kcalloc->drm_atomic_state_init->drm_atomic_state_alloc->drm_atomic_helper_duplicate_state",
        "var_path": "retval->retval->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sdebug_device_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->sdebug_device_create_zones->sdebug_device_create",
        "var_path": "retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "str_to_ints",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->str_to_ints",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iovec_from_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->iovec_from_user",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "read_rds_samples",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->read_rds_samples",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_sglist",
        "SecOp": "free_sglist",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_sglist",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_fb_plane_get_modifiers",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->intel_fb_plane_get_modifiers",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i915_random_order",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->i915_random_order",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "netdev_create_hash",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->netdev_create_hash",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_random_order",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->drm_random_order",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_urbs",
        "SecOp": "free_urbs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_urbs",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "heap_fence_create",
        "SecOp": "heap_fence_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->heap_fence_create",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pfkey_sadb2xfrm_user_sec_ctx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->pfkey_sadb2xfrm_user_sec_ctx",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "genl_dumpit_info_alloc",
        "SecOp": "genl_dumpit_info_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->genl_dumpit_info_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_msg",
        "SecOp": "free_msg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->alloc_msg",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->init_desc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "irq_alloc",
        "SecOp": "irq_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->init_desc->alloc_desc->alloc_descs->__irq_alloc_descs->irq_alloc",
        "var_path": "retval->retval->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tg3_vpd_readblock",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->tg3_vpd_readblock",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fscrypt_get_devices",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->fscrypt_get_devices",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fun_data_from_rq",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->fun_data_from_rq",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocfs2_alloc_quota_recovery",
        "SecOp": "ocfs2_free_quota_recovery",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ocfs2_alloc_quota_recovery",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aa_get_buffer",
        "SecOp": "aa_put_buffer",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 1,
        "API_path": "kmalloc->aa_get_buffer",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tomoyo_print_header",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->tomoyo_print_header",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lookup_quotarealm_inode",
        "SecOp": "iput",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->find_quotarealm_inode->lookup_quotarealm_inode",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_wrapper_list",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_wrapper_list",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->create_entry",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpfs_translate_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->hpfs_translate_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vxlan_fdb_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vxlan_fdb_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_crtc_state_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->intel_crtc_state_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_alloc",
        "SecOp": "mpi_free",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 1,
        "API_path": "kmalloc->mpi_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "scsi_get_vpd_buf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->scsi_get_vpd_buf",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ecc_alloc_digits_space",
        "SecOp": "ecc_free_digits_space",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ecc_alloc_digits_space",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_strndup_to_utf16",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->cifs_strndup_to_utf16",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_convert_path_to_utf16",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 2,
        "API_path": "kmalloc->cifs_strndup_to_utf16->cifs_convert_path_to_utf16",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpfs_get_ea",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->get_indirect_ea->hpfs_get_ea",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sock_kmalloc",
        "SecOp": "txopt_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->sock_kmalloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipv6_renew_options",
        "SecOp": "txopt_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->sock_kmalloc->ipv6_renew_options",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfsd4_cltrack_client_has_session",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->nfsd4_cltrack_client_has_session",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_conn",
        "SecOp": "free_conn",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_conn",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dln2_prep_buf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->dln2_prep_buf",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_fw_nvram_from_efi",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->brcmf_fw_nvram_from_efi",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rtw89_hex2bin_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->rtw89_hex2bin_user",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_crush_name",
        "SecOp": "free_crush_name",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_crush_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_fence",
        "SecOp": "free_fence",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 1,
        "API_path": "kmalloc->alloc_fence",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bio_kmalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 1,
        "API_path": "kmalloc->bio_kmalloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "blk_rq_map_bio_alloc",
        "SecOp": "blk_mq_map_bio_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->bio_kmalloc->blk_rq_map_bio_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "blk_crypto_fallback_clone_bio",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->bio_kmalloc->blk_crypto_fallback_clone_bio",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bio_map_kern",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->bio_kmalloc->bio_map_kern",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bio_copy_kern",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->bio_kmalloc->bio_copy_kern",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efx_alloc_rss_context_entry",
        "SecOp": "efx_free_rss_context_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->efx_alloc_rss_context_entry",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnx2x_frag_alloc",
        "SecOp": "bnx2x_frag_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->bnx2x_frag_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efx_tc_create_binding",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->efx_tc_create_binding",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "squashfs_page_actor_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->squashfs_page_actor_init",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_flower_allocate_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->nfp_flower_allocate_new",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "p9_client_stat",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->p9_client_stat",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "reiserfs_posix_acl_to_disk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->reiserfs_posix_acl_to_disk",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i915_active_create",
        "SecOp": "i915_active_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->i915_active_create",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usb_get_device_descriptor",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->usb_get_device_descriptor",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "memcg_init_list_lru_one",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->memcg_init_list_lru_one",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "extract_fw_ver_from_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->extract_fw_ver_from_str",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ceph_monmap_decode",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ceph_monmap_decode",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "capture_regs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->capture_regs",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ip_vs_dest_dst_alloc",
        "SecOp": "ip_vs_dest_dst_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ip_vs_dest_dst_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ubd_alloc_req",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ubd_alloc_req",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bch2_fs_usage_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->bch2_fs_usage_read",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ibmebus_chomp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ibmebus_chomp",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ccw_device_get_util_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ccw_device_get_util_str",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sctp_datamsg_new",
        "SecOp": "sctp_datamsg_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->sctp_datamsg_new",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sctp_datamsg_from_user",
        "SecOp": "sctp_datamsg_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->sctp_datamsg_new->sctp_datamsg_from_user",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfsd4_cltrack_legacy_recdir",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfsd4_cltrack_legacy_recdir",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qdisc_get_stab",
        "SecOp": "qdisc_put_stab",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->qdisc_get_stab",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_delalloc_work",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->btrfs_alloc_delalloc_work",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ext4_acl_to_disk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ext4_acl_to_disk",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_alloc_fattr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "kmalloc->nfs_alloc_fattr",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_unique_id",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->create_unique_id",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipmi_alloc_recv_msg",
        "SecOp": "ipmi_free_recv_msg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ipmi_alloc_recv_msg",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "crypt_alloc_buffer",
        "SecOp": "bio_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->bio_integrity_alloc->dm_crypt_integrity_io_alloc->crypt_alloc_buffer",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efx_siena_alloc_rss_context_entry",
        "SecOp": "efx_siena_free_rss_context_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->efx_siena_alloc_rss_context_entry",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__fetch_rtas_last_error",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->__fetch_rtas_last_error",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_cert_list",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->get_cert_list",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_get_subvol_name_from_objectid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->btrfs_get_subvol_name_from_objectid",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sti_get_wmode_rom",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->sti_get_wmode_rom",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "psb_mmu_alloc_pt",
        "SecOp": "psb_mmu_free_pt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->psb_mmu_alloc_pt",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "f2fs_kmalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->f2fs_kmalloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "f2fs_kzalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->f2fs_kmalloc->f2fs_kzalloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "page_array_alloc",
        "SecOp": "page_array_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->f2fs_kmalloc->f2fs_kzalloc->page_array_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xattr_alloc",
        "SecOp": "xattr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->f2fs_kmalloc->f2fs_kzalloc->xattr_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "f2fs_acl_to_disk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->f2fs_kmalloc->f2fs_acl_to_disk",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pvd",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_pvd",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fwnet_frag_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->fwnet_frag_new",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smb3_fs_context_fullpath",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->smb3_fs_context_fullpath",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_vpd_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "kmalloc->pci_vpd_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kdb_strdup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->kdb_strdup",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmz_alloc_mblock",
        "SecOp": "dmz_free_mblock",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->dmz_alloc_mblock",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "adf_fw_counters_allocate",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->adf_fw_counters_allocate",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "adf_fw_counters_get",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->adf_fw_counters_allocate->adf_fw_counters_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmabuf_pages_to_sgt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->dmabuf_pages_to_sgt",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "_drm_do_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->_drm_do_get_edid",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 2,
        "API_path": "kmalloc->_drm_do_get_edid->drm_get_edid",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "psb_intel_sdvo_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->_drm_do_get_edid->drm_get_edid->psb_intel_sdvo_get_edid",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "psb_intel_sdvo_get_analog_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->_drm_do_get_edid->drm_get_edid->psb_intel_sdvo_get_analog_edid",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_do_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->_drm_do_get_edid->drm_do_get_edid",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_alloc_mtt",
        "SecOp": "mthca_free_mtt",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->__mthca_alloc_mtt->mthca_alloc_mtt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_alloc_fhandle",
        "SecOp": "nfs_free_fhandle",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "kmalloc->nfs_alloc_fhandle",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vboxsf_dir_buf_alloc",
        "SecOp": "vboxsf_dir_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vboxsf_dir_buf_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sid_to_key_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->sid_to_key_str",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nla_strdup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 1,
        "API_path": "kmalloc->nla_strdup",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "esp_alloc_tmp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->esp_alloc_tmp",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_cipher_test_sglists",
        "SecOp": "free_cipher_test_sglists",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->alloc_cipher_test_sglists",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipmi_alloc_smi_msg",
        "SecOp": "ipmi_free_smi_msg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ipmi_alloc_smi_msg",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_lookup_user_key",
        "SecOp": "bpf_key_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->bpf_lookup_user_key",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "b43legacy_generate_probe_resp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->b43legacy_generate_probe_resp",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_fragment",
        "SecOp": "put_fragment",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->new_fragment",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rvt_mcast_qp_alloc",
        "SecOp": "rvt_mcast_qp_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rvt_mcast_qp_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mock_fence",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 1,
        "API_path": "kmalloc->mock_fence",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "copy_gadget_strings",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->copy_gadget_strings",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_lock_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->cifs_lock_init",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cdebbuf_alloc",
        "SecOp": "cdebbuf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->cdebbuf_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mei_cl_allocate",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mei_cl_allocate",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mei_cl_alloc_linked",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->mei_cl_allocate->mei_cl_alloc_linked",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sk_alloc",
        "SecOp": "sk_free",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->sk_prot_alloc->sk_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__vsock_create",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->sk_prot_alloc->sk_alloc->__vsock_create",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vsock_create_connected",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->sk_prot_alloc->sk_alloc->__vsock_create->vsock_create_connected",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smc_sock_alloc",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->sk_prot_alloc->sk_alloc->smc_sock_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ofs_to_block",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->ofs_to_block",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "convert_to_unix_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->convert_to_unix_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ceph_buffer_new",
        "SecOp": "ceph_buffer_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ceph_buffer_new",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vxfs_getfsh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vxfs_getfsh",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "convert_raw_wmi_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->convert_raw_wmi_string",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_lightbar_cmd_msg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 1,
        "API_path": "kmalloc->alloc_lightbar_cmd_msg",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pulse_create",
        "SecOp": "pulse_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->pulse_create",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_alloc_icm",
        "SecOp": "mthca_free_icm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->mthca_alloc_icm",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "atomisp_css_shading_table_alloc",
        "SecOp": "atomisp_css_shading_table_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->ia_css_shading_table_alloc->atomisp_css_shading_table_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_lvn",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_lvn",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_crush_loc",
        "SecOp": "free_crush_loc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_crush_loc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_get_redirect",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ovl_get_redirect",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_p2pmem_alloc_sgl",
        "SecOp": "pci_p2pmem_free_sgl",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->pci_p2pmem_alloc_sgl",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mvpp2_frag_alloc",
        "SecOp": "mvpp2_frag_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mvpp2_frag_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kzalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7358,
        "depth": 1,
        "API_path": "kmalloc->kzalloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_local",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_local",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "handshake_req_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->handshake_req_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "find_css_set",
        "SecOp": "put_css_set",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->find_css_set",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ahd_alloc",
        "SecOp": "ahd_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ahd_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mca_alloc",
        "SecOp": "ma_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mca_bucket_alloc->mca_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "peci_request_alloc",
        "SecOp": "peci_request_free",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->peci_request_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_crtc_create_fence",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->drm_crtc_create_fence",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "test_alloc",
        "SecOp": "test_free",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__test_alloc->test_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_ctx_rx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_ctx_rx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gelic_eurus_sync_cmd",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gelic_eurus_sync_cmd",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vfio_irq_ctx_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vfio_irq_ctx_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ai",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ai",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iova_bitmap_alloc",
        "SecOp": "iova_bitmap_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iova_bitmap_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_alloc_vif",
        "SecOp": "brcmf_free_vif",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->brcmf_alloc_vif",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tape_alloc_request",
        "SecOp": "tape_free_request",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tape_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "parse_acl_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->parse_acl_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__xe_exec_queue_alloc",
        "SecOp": "__xe_exec_queue_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__xe_exec_queue_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "riocm_ch_alloc",
        "SecOp": "riocm_put_channel",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->riocm_ch_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "seq_create_client1",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->seq_create_client1",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipc_mmio_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ipc_mmio_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pgpath",
        "SecOp": "free_pgpath",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_pgpath",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_writeback_get_out_fence",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->drm_writeback_get_out_fence",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "meson_nand_op_get_dma_safe_input_buf",
        "SecOp": "meson_nand_op_put_dma_safe_input_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->meson_nand_op_get_dma_safe_input_buf",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "agp_alloc_bridge",
        "SecOp": "agp_put_bridge",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->agp_alloc_bridge",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_gpio_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_gpio_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i3c_generic_ibi_alloc_pool",
        "SecOp": "i3c_generic_ibi_free_pool",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i3c_generic_ibi_alloc_pool",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dbc_alloc_ctx",
        "SecOp": "dbc_free_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dbc_alloc_ctx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pvr_vm_create_context",
        "SecOp": "pvr_vm_context_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pvr_vm_create_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ring_buffer_alloc_read_page",
        "SecOp": "ring_buffer_free_read_page",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ring_buffer_alloc_read_page",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rxrpc_alloc_connection",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rxrpc_alloc_connection",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_get_redirect_xattr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_get_redirect_xattr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "caam_hash_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->caam_hash_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_writepage_args_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_writepage_args_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "shrinker_alloc",
        "SecOp": "shrinker_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->shrinker_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xfs_alloc_buftarg",
        "SecOp": "xfs_free_buftarg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->shrinker_alloc->xfs_init_buftarg->xfs_alloc_buftarg",
        "var_path": "retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qla24xx_alloc_purex_item",
        "SecOp": "qla24xx_free_purex_item",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla24xx_alloc_purex_item",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qla27xx_copy_multiple_pkt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->qla24xx_alloc_purex_item->qla27xx_copy_multiple_pkt",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svc_i3c_master_alloc_xfer",
        "SecOp": "svc_i3c_master_free_xfer",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->svc_i3c_master_alloc_xfer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_transport",
        "SecOp": "free_transport",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_transport",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn302_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn302_afmt_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "uvc_alloc_chain",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->uvc_alloc_chain",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_dev_alloc",
        "SecOp": "drm_dev_put",
        "hasUsage": true,
        "usageCount": 27,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->drm_sysfs_minor_alloc->drm_minor_alloc->drm_dev_init->drm_dev_alloc",
        "var_path": "retval->retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qeth_alloc_pool_entry",
        "SecOp": "qeth_free_pool_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qeth_alloc_pool_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "taprio_offload_alloc",
        "SecOp": "taprio_offload_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->taprio_offload_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hns_roce_buf_alloc",
        "SecOp": "hns_roce_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hns_roce_buf_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_smp_req",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_smp_req",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_pnfs_remotestr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_pnfs_remotestr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_offload_ctx_tx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_offload_ctx_tx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wl1271_rx_filter_alloc",
        "SecOp": "wl1271_rx_filter_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wl1271_rx_filter_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dma_fence_allocate_private_stub",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dma_fence_allocate_private_stub",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cyberpro_alloc_fb_info",
        "SecOp": "cyberpro_free_fb_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cyberpro_alloc_fb_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gsm_dlci_alloc",
        "SecOp": "dlci_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gsm_dlci_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_app_alloc",
        "SecOp": "nfp_app_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_app_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "core_dev_init_initiator_node_lun_acl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->core_dev_init_initiator_node_lun_acl",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "flow_offload_alloc",
        "SecOp": "flow_offload_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->flow_offload_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ksmbd_vfs_make_xattr_posix_acl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ksmbd_vfs_make_xattr_posix_acl",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_cld_upcall",
        "SecOp": "free_cld_upcall",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_cld_upcall",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dp83640_clock_get_bus",
        "SecOp": "dp83640_clock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dp83640_clock_get_bus",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vsp1_video_pipeline_get",
        "SecOp": "vsp1_video_pipeline_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vsp1_video_pipeline_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "prestera_bridge_create",
        "SecOp": "prestera_bridge_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->prestera_bridge_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ata_sas_port_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ata_port_alloc->ata_sas_port_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_file_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_file_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tegra_dma_desc_get",
        "SecOp": "tegra_dma_desc_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tegra_dma_desc_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btf_parse",
        "SecOp": "btf_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btf_parse",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "s3c64xx_get_target_ctrldata",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->s3c64xx_get_target_ctrldata",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rxe_queue_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rxe_queue_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "skcipher_edesc_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->skcipher_edesc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ep",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ep",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dasd_alloc_device",
        "SecOp": "dasd_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dasd_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dasd_create_device",
        "SecOp": "dasd_put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->dasd_alloc_device->dasd_create_device",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "udma_alloc_tr_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->udma_alloc_tr_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "udma_prep_slave_sg_triggered_tr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->udma_alloc_tr_desc->udma_prep_slave_sg_triggered_tr",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "udma_prep_dma_cyclic_tr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->udma_alloc_tr_desc->udma_prep_dma_cyclic_tr",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "udma_prep_slave_sg_tr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->udma_alloc_tr_desc->udma_prep_slave_sg_tr",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "keyring_restriction_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->keyring_restriction_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_subpage",
        "SecOp": "btrfs_free_subpage",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_subpage",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_scq",
        "SecOp": "free_scq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_scq",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_nvm_alloc",
        "SecOp": "tb_nvm_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_nvm_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "csio_hw_alloc",
        "SecOp": "csio_hw_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->csio_hw_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "host1x_fence_create",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->host1x_fence_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vlan_vid_info_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vlan_vid_info_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "genradix_alloc_node",
        "SecOp": "genradix_free_node",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->genradix_alloc_node",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sg_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sg_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_port_alloc",
        "SecOp": "nfp_port_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_port_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_cfg_request_alloc",
        "SecOp": "tb_cfg_request_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_cfg_request_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nbd_dev_add",
        "SecOp": "nbd_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nbd_dev_add",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn31_apg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn31_apg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "typec_mux_get",
        "SecOp": "typec_mux_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->fwnode_typec_mux_get->typec_mux_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "string_stream_get_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->string_stream_get_string",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sample_restore_get",
        "SecOp": "sample_restore_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sample_restore_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cxl_get_injected_po",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cxl_get_injected_po",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_tracing_log_err",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_tracing_log_err",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "generate_lfp_data_ptrs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->generate_lfp_data_ptrs",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "exiu_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->exiu_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmet_rdma_get_rsp",
        "SecOp": "nvmet_rdma_put_rsp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvmet_rdma_get_rsp",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_uobj",
        "SecOp": "uverbs_uobject_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_uobj",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "flow_block_cb_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->flow_block_cb_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "prestera_flow_block_get",
        "SecOp": "prestera_flow_block_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->flow_block_cb_alloc->prestera_flow_block_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpsa_alloc_sas_port",
        "SecOp": "hpsa_free_sas_port",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hpsa_alloc_sas_port",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "irda_usb_find_class_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->irda_usb_find_class_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_dummy_block_group",
        "SecOp": "btrfs_free_dummy_block_group",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_dummy_block_group",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_pmu_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_pmu_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ext4_li_request_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ext4_li_request_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sgx_encl_page_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sgx_encl_page_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hugepage_new_subpool",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hugepage_new_subpool",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_dp_add_mst_branch_device",
        "SecOp": "drm_dp_mst_topology_put_mstb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->drm_dp_add_mst_branch_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cpufreq_policy_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cpufreq_policy_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn30_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn30_vpg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "run_alloc",
        "SecOp": "run_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->run_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "raw3215_alloc_info",
        "SecOp": "raw3215_free_info",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->raw3215_alloc_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_crif_alloc",
        "SecOp": "mlxsw_sp_crif_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_crif_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_encode_real_fh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_encode_real_fh",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_lookup_index",
        "SecOp": "dput",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->ovl_encode_real_fh->ovl_get_index_name->ovl_lookup_index",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_get_origin_fh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ovl_encode_real_fh->ovl_get_origin_fh",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "scan_behind_bridge",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->scan_behind_bridge",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mtk_gem_prime_get_sg_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mtk_gem_prime_get_sg_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dart_alloc_pgtable",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dart_alloc_pgtable",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "net_alloc_generic",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->net_alloc_generic",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_irq_cpu_rmap",
        "SecOp": "free_irq_cpu_rmap",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_cpu_rmap->alloc_irq_cpu_rmap",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_alloc_open_state",
        "SecOp": "nfs4_free_open_state",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_alloc_open_state",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "atari_stram_alloc",
        "SecOp": "atari_stram_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->atari_stram_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "batadv_orig_node_vlan_new",
        "SecOp": "batadv_orig_node_vlan_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->batadv_orig_node_vlan_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mcb_alloc_dev",
        "SecOp": "mcb_free_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mcb_alloc_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dbc_alloc_request",
        "SecOp": "dbc_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dbc_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dpll_device_get",
        "SecOp": "dpll_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->dpll_device_alloc->dpll_device_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "q6asm_audio_client_alloc",
        "SecOp": "q6asm_audio_client_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->q6asm_audio_client_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn301_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn301_afmt_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tipc_conn_alloc",
        "SecOp": "conn_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tipc_conn_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "current_user_event_mm",
        "SecOp": "user_event_mm_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->user_event_mm_alloc->current_user_event_mm",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_fs_context",
        "SecOp": "put_fs_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_fs_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fs_context_for_submount",
        "SecOp": "put_fs_context",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_fs_context->fs_context_for_submount",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fs_context_for_mount",
        "SecOp": "put_fs_context",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_fs_context->fs_context_for_mount",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vfs_kern_mount",
        "SecOp": "mntput",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->alloc_fs_context->fs_context_for_mount->vfs_kern_mount",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fs_context_for_reconfigure",
        "SecOp": "put_fs_context",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_fs_context->fs_context_for_reconfigure",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xfrm_hash_alloc",
        "SecOp": "xfrm_hash_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xfrm_hash_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tomoyo_init_log",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tomoyo_init_log",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tipc_publ_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tipc_publ_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn31_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn31_vpg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ffs_data_new",
        "SecOp": "ffs_data_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ffs_data_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "host1x_job_alloc",
        "SecOp": "host1x_job_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->host1x_job_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "submit_create_job",
        "SecOp": "host1x_job_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->host1x_job_alloc->submit_create_job",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dw_edma_alloc_desc",
        "SecOp": "dw_edma_free_desc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dw_edma_alloc_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "batadv_hardif_add_interface",
        "SecOp": "batadv_hardif_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->batadv_hardif_add_interface",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qp_host_alloc_queue",
        "SecOp": "qp_host_free_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qp_host_alloc_queue",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_fs_devices",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_fs_devices",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ucounts",
        "SecOp": "put_ucounts",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ucounts",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "calipso_opt_insert",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->calipso_opt_insert",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "afs_alloc_read",
        "SecOp": "afs_put_read",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->afs_alloc_read",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "siano_media_device_register",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->siano_media_device_register",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "scx200_create_iface",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->scx200_create_iface",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5e_tc_meter_alloc",
        "SecOp": "__mlx5e_tc_meter_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__mlx5e_flow_meter_alloc->mlx5e_tc_meter_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5e_tc_meter_replace",
        "SecOp": "mlx5e_tc_meter_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->__mlx5e_flow_meter_alloc->mlx5e_tc_meter_alloc->mlx5e_tc_meter_replace",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sctp_pack_cookie",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sctp_pack_cookie",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "do_kimage_alloc_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->do_kimage_alloc_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rio_alloc_net",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rio_alloc_net",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ncp",
        "SecOp": "free_ncp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ncp",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rethook_alloc",
        "SecOp": "rethook_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rethook_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "convert_chmap_v3",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->convert_chmap_v3",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_rif_mac_profile_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_rif_mac_profile_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lpfc_hba_alloc",
        "SecOp": "lpfc_hba_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lpfc_hba_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvme_auth_alloc_key",
        "SecOp": "nvme_auth_free_key",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvme_auth_alloc_key",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "m66592_alloc_request",
        "SecOp": "m66592_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->m66592_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "objagg_hints_get",
        "SecOp": "objagg_hints_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->objagg_hints_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__live_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__live_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__live_active_setup",
        "SecOp": "__live_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__live_alloc->__live_active_setup",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mv_u3d_build_trb_one",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mv_u3d_build_trb_one",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ahash_edesc_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ahash_edesc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_alloc_bus",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_alloc_bus",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_var",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_var",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rnbd_get_iu",
        "SecOp": "rnbd_put_iu",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rnbd_get_iu",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "amdgpu_get_xgmi_hive",
        "SecOp": "amdgpu_put_xgmi_hive",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->amdgpu_get_xgmi_hive",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vfio_allocate_device_file",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vfio_allocate_device_file",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tlmi_create_auth",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tlmi_create_auth",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tty_audit_buf_alloc",
        "SecOp": "tty_audit_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tty_audit_buf_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "irdma_alloc_iwmr",
        "SecOp": "irdma_free_iwmr",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->irdma_alloc_iwmr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "erofs_fscache_req_io_alloc",
        "SecOp": "erofs_fscache_req_io_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->erofs_fscache_req_io_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kobject_create",
        "SecOp": "kobject_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->kobject_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kobject_create_and_add",
        "SecOp": "kobject_put",
        "hasUsage": true,
        "usageCount": 56,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->kobject_create->kobject_create_and_add",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rsa_edesc_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rsa_edesc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_oa_vma",
        "SecOp": "i915_vma_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_oa_config_buffer->get_oa_vma",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vcap_alloc_rule",
        "SecOp": "vcap_free_rule",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vcap_alloc_rule",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "expr_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->expr_str",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvme_alloc_ns_head",
        "SecOp": "nvme_put_ns_head",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvme_alloc_ns_head",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vhost_iotlb_alloc",
        "SecOp": "vhost_iotlb_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vhost_iotlb_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_i2c",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_i2c",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ws",
        "SecOp": "free_ws",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ws",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "raw3270_request_alloc",
        "SecOp": "raw3270_request_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->raw3270_request_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "damon_sysfs_target_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->damon_sysfs_target_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__alloc_atm_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__alloc_atm_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ssam_event_item_alloc",
        "SecOp": "ssam_event_item_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ssam_event_item_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "r10bio_pool_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->r10bio_pool_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_reset_control_array_get_optional_shared",
        "SecOp": "reset_control_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->of_reset_control_array_get->of_reset_control_array_get_optional_shared",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__mwl8k_cmd_mac_multicast_adr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__mwl8k_cmd_mac_multicast_adr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5vf_alloc_data_buffer",
        "SecOp": "mlx5vf_free_data_buffer",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5vf_alloc_data_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5vf_get_data_buffer",
        "SecOp": "mlx5vf_put_data_buffer",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mlx5vf_alloc_data_buffer->mlx5vf_get_data_buffer",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5vf_pci_step_device_state_locked",
        "SecOp": "fput",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mlx5vf_alloc_data_buffer->mlx5vf_get_data_buffer->mlx5vf_pci_step_device_state_locked",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5vf_mig_file_get_stop_copy_buf",
        "SecOp": "mlx5vf_put_data_buffer",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mlx5vf_alloc_data_buffer->mlx5vf_get_data_buffer->mlx5vf_mig_file_get_stop_copy_buf",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kset_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->kset_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_workspace",
        "SecOp": "put_workspace",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->alloc_heuristic_ws->alloc_workspace->get_workspace",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "scmi_get_handler",
        "SecOp": "scmi_put_handler",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->scmi_allocate_event_handler->__scmi_event_handler_get_ops->scmi_get_handler",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_rsttbl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_rsttbl",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "extend_rsttbl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->init_rsttbl->extend_rsttbl",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "video_device_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->video_device_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tomoyo_print_bprm",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tomoyo_print_bprm",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_edid_alloc",
        "SecOp": "drm_edid_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->_drm_edid_alloc->drm_edid_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_label_alloc",
        "SecOp": "nfs4_label_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_label_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "r1bio_pool_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->r1bio_pool_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_dir_dump",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_dir_dump",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_map_meta_alloc",
        "SecOp": "bpf_map_meta_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_map_meta_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kobj_engine",
        "SecOp": "kobject_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->kobj_engine",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmem_cell_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 41,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qfprom_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read->qfprom_read",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmem_cell_read_variable_common",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read->nvmem_cell_read_variable_common",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nixge_get_nvmem_address",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read->nixge_get_nvmem_address",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dev_new",
        "SecOp": "put_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dev_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zcrypt_card_alloc",
        "SecOp": "zcrypt_card_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->zcrypt_card_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nft_obj_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nft_obj_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qla_edb_node_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla_edb_node_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dca_allocate_domain",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dca_allocate_domain",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfc_llcp_build_tlv",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfc_llcp_build_tlv",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dwc2_hcd_urb_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dwc2_hcd_urb_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_fid_dummy_get",
        "SecOp": "mlxsw_sp_fid_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_fid_get->mlxsw_sp_fid_dummy_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_fid_8021d_get",
        "SecOp": "mlxsw_sp_fid_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_fid_get->mlxsw_sp_fid_8021d_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_fid_8021q_get",
        "SecOp": "mlxsw_sp_fid_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_fid_get->mlxsw_sp_fid_8021q_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "autogroup_create",
        "SecOp": "autogroup_kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->autogroup_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_store_saved_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_store_saved_state",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ebda_hpc",
        "SecOp": "free_ebda_hpc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ebda_hpc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "papr_sysparm_buf_alloc",
        "SecOp": "papr_sysparm_buf_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->papr_sysparm_buf_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ddcb_requ_alloc",
        "SecOp": "ddcb_requ_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ddcb_requ_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "software_node_alloc",
        "SecOp": "software_node_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->software_node_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fwnode_create_software_node",
        "SecOp": "fwnode_handle_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->software_node_alloc->fwnode_create_software_node",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vduse_dev_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vduse_dev_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sugov_policy_alloc",
        "SecOp": "sugov_policy_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sugov_policy_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dasd_alloc_block",
        "SecOp": "dasd_free_block",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dasd_alloc_block",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fsg_common_setup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fsg_common_setup",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hci_alloc_dev",
        "SecOp": "hci_free_dev",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->hci_alloc_dev_priv->hci_alloc_dev",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_buffer",
        "SecOp": "free_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_opinfo",
        "SecOp": "free_opinfo",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_opinfo",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn321_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn321_afmt_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_plane_alloc",
        "SecOp": "intel_plane_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_plane_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iio_dmaengine_buffer_alloc",
        "SecOp": "iio_dmaengine_buffer_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iio_dmaengine_buffer_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fw_create_instance",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fw_create_instance",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zcrypt_queue_alloc",
        "SecOp": "zcrypt_queue_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->zcrypt_queue_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_bprm",
        "SecOp": "free_bprm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_bprm",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qaic_alloc_init_bo",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qaic_alloc_init_bo",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_arena",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_arena",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ldc_alloc",
        "SecOp": "ldc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ldc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "picolcd_send_and_wait",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->picolcd_send_and_wait",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aa_alloc_profile",
        "SecOp": "aa_free_profile",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->aa_alloc_profile",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "unpack_profile",
        "SecOp": "aa_put_profile",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->aa_alloc_profile->unpack_profile",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bch2_ec_stripe_head_get",
        "SecOp": "bch2_ec_stripe_head_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->ec_new_stripe_head_alloc->__bch2_ec_stripe_head_get->bch2_ec_stripe_head_get",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "memstick_alloc_card",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->memstick_alloc_card",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wiimote_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wiimote_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_ctx_tx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_ctx_tx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_cmd_mbox_alloc",
        "SecOp": "mlxsw_cmd_mbox_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_cmd_mbox_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "objagg_stats_get",
        "SecOp": "objagg_stats_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->objagg_stats_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mon_alloc_mem",
        "SecOp": "mon_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mon_alloc_mem",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "netvsc_devinfo_get",
        "SecOp": "netvsc_devinfo_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->netvsc_devinfo_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "orangefs_bufmap_alloc",
        "SecOp": "orangefs_bufmap_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->orangefs_bufmap_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xprt_alloc",
        "SecOp": "xprt_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xprt_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qed_alloc_cdev",
        "SecOp": "qed_free_cdev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qed_alloc_cdev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ksmbd_casefold_sharename",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ksmbd_casefold_sharename",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ksmbd_extract_sharename",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ksmbd_casefold_sharename->ksmbd_extract_sharename",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tee_alloc_cmd_buffer",
        "SecOp": "tee_free_cmd_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tee_alloc_cmd_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ax25_create_cb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ax25_create_cb",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "erdma_cep_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->erdma_cep_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "damon_sysfs_targets_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->damon_sysfs_targets_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "synaptics_i2c_touch_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->synaptics_i2c_touch_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lwtunnel_state_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lwtunnel_state_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dm_ima_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dm_ima_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pwmchip_alloc",
        "SecOp": "pwmchip_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pwmchip_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "selinux_ima_collect_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->selinux_ima_collect_state",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_reloc_control",
        "SecOp": "free_reloc_control",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_reloc_control",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_property_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_property_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fnd_get",
        "SecOp": "fnd_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fnd_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "genpd_alloc_dev_data",
        "SecOp": "genpd_free_dev_data",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->genpd_alloc_dev_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_watch_adapter",
        "SecOp": "free_watch_adapter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_watch_adapter",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wilc_parse_join_bss_param",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wilc_parse_join_bss_param",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nl80211_parse_sched_scan",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nl80211_parse_sched_scan",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hwsim_alloc_edge",
        "SecOp": "hwsim_free_edge",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hwsim_alloc_edge",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efct_xport_alloc",
        "SecOp": "efct_xport_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->efct_xport_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_l2",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_l2",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cfctrl_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cfctrl_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "stmmac_setup_dma_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->stmmac_setup_dma_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_empty_backing_file",
        "SecOp": "fput",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_empty_backing_file",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mmc_blk_ioctl_copy_from_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mmc_blk_ioctl_copy_from_user",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ssd1307fb_alloc_array",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ssd1307fb_alloc_array",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xilinx_dma_alloc_tx_descriptor",
        "SecOp": "xilinx_dma_free_tx_descriptor",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xilinx_dma_alloc_tx_descriptor",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kvm_arch_alloc_vm",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->kvm_arch_alloc_vm",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "afs_alloc_call",
        "SecOp": "afs_put_call",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->afs_alloc_call",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "afs_alloc_flat_call",
        "SecOp": "afs_put_call",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->afs_alloc_call->afs_alloc_flat_call",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i3c_master_alloc_i3c_dev",
        "SecOp": "i3c_master_free_i3c_dev",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i3c_master_alloc_i3c_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_rndis_device",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_rndis_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "batadv_orig_node_new",
        "SecOp": "batadv_orig_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->batadv_orig_node_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "batadv_v_ogm_orig_get",
        "SecOp": "batadv_orig_node_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->batadv_orig_node_new->batadv_v_ogm_orig_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "batadv_iv_ogm_orig_get",
        "SecOp": "batadv_orig_node_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->batadv_orig_node_new->batadv_iv_ogm_orig_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_dummy_fs_info",
        "SecOp": "btrfs_free_dummy_fs_info",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_dummy_fs_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__reuseport_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__reuseport_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_netfs_alloc",
        "SecOp": "nfs_netfs_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs_netfs_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_btrfs_io_context",
        "SecOp": "btrfs_put_bioc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_btrfs_io_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cxl_alloc_afu",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cxl_alloc_afu",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_fw_event_work",
        "SecOp": "fw_event_work_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_fw_event_work",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_tree_mod_elem",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_tree_mod_elem",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dma_buf_export",
        "SecOp": "dma_buf_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dma_buf_export",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mock_dmabuf",
        "SecOp": "dma_buf_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->dma_buf_export->mock_dmabuf",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zswap_pool_create",
        "SecOp": "zswap_pool_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->zswap_pool_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pdev",
        "SecOp": "free_pdev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_pdev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mbt_ext4_alloc_super_block",
        "SecOp": "mbt_ext4_free_super_block",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->alloc_super->sget->mbt_ext4_alloc_super_block",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvkm_mmu_ptp_get",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvkm_mmu_ptp_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gss_alloc_context",
        "SecOp": "gss_put_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gss_alloc_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ioatdma",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ioatdma",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_test_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_test_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vgic_its_alloc_device",
        "SecOp": "vgic_its_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vgic_its_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_backref_alloc_edge",
        "SecOp": "btrfs_backref_free_edge",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_backref_alloc_edge",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aca_alloc",
        "SecOp": "aca_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->aca_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "go7007_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->go7007_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "exynos_drm_ipp_task_alloc",
        "SecOp": "exynos_drm_ipp_task_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->exynos_drm_ipp_task_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_gpuvm_resv_object_alloc",
        "SecOp": "drm_gem_object_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->drm_gpuvm_resv_object_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_resource",
        "SecOp": "free_resource",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_resource",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "udma_prep_slave_sg_pkt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->udma_prep_slave_sg_pkt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zfcp_adapter_enqueue",
        "SecOp": "zfcp_ccw_adapter_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->zfcp_adapter_enqueue",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_alloc_lock_state",
        "SecOp": "nfs4_free_lock_state",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_alloc_lock_state",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "landlock_create_object",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->landlock_create_object",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sf_zone_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sf_zone_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vlan_info_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vlan_info_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qxl_create_plane",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qxl_create_plane",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "elf_dump_thread_status",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->elf_dump_thread_status",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tee_shm_alloc_user_buf",
        "SecOp": "tee_shm_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->shm_alloc_helper->tee_shm_alloc_user_buf",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn302_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn302_vpg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_create_block_group_cache",
        "SecOp": "btrfs_put_block_group",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_create_block_group_cache",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnxt_tc_get_tunnel_node",
        "SecOp": "bnxt_tc_put_tunnel_node",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bnxt_tc_get_tunnel_node",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fotg210_ep_alloc_request",
        "SecOp": "fotg210_ep_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fotg210_ep_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sctp_auth_shkey_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sctp_auth_shkey_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sta_info_alloc",
        "SecOp": "sta_info_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__sta_info_alloc->sta_info_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fun_alloc_queue",
        "SecOp": "fun_free_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fun_alloc_queue",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmf_connect_data_prep",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvmf_connect_data_prep",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_alloc_internal_escan_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->brcmf_alloc_internal_escan_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_async",
        "SecOp": "free_async",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_async",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__alloc_pd",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__alloc_pd",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pd",
        "SecOp": "free_pd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__alloc_pd->alloc_pd",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "migrate_vm",
        "SecOp": "i915_vm_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->__alloc_pd->alloc_pd->i915_vm_alloc_pt_stash->migrate_vm",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "urfile_alloc",
        "SecOp": "urfile_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->urfile_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_cpp_mutex_alloc",
        "SecOp": "nfp_cpp_mutex_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_cpp_mutex_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xilinx_dpdma_chan_alloc_tx_desc",
        "SecOp": "xilinx_dpdma_chan_free_tx_desc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xilinx_dpdma_chan_alloc_tx_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "amba_device_alloc",
        "SecOp": "amba_device_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->amba_device_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tomoyo_get_name",
        "SecOp": "tomoyo_put_name",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tomoyo_get_name",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nubus_get_functional_resource",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nubus_get_functional_resource",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vbox_create_plane",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vbox_create_plane",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_tty_struct",
        "SecOp": "free_tty_struct",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_tty_struct",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lmtt_pt_alloc",
        "SecOp": "lmtt_pt_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lmtt_pt_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ctnetlink_alloc_filter",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ctnetlink_alloc_filter",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pqi_alloc_sas_port",
        "SecOp": "pqi_free_sas_port",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pqi_alloc_sas_port",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cxl_context_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cxl_context_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qed_dcbnl_get_dcbx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qed_dcbnl_get_dcbx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_at91_clk_pll_get_characteristics",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->of_at91_clk_pll_get_characteristics",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nexthop_grp_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nexthop_grp_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pnv_php_alloc_slot",
        "SecOp": "pnv_php_put_slot",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pnv_php_alloc_slot",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hl_cs_allocate_job",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hl_cs_allocate_job",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_pnfs_ds_addr_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_pnfs_ds_addr_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_decode_mp_ds_addr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nfs4_pnfs_ds_addr_alloc->nfs4_decode_mp_ds_addr",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_pcichild_device",
        "SecOp": "put_pcichild",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->new_pcichild_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "attach_one_i2c",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->attach_one_i2c",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iucv_alloc_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iucv_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__btree_node_mem_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__btree_node_mem_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efc_nport_alloc",
        "SecOp": "efc_nport_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->efc_nport_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "parse_lease_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->parse_lease_state",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nft_netdev_hook_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nft_netdev_hook_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "edac_pci_alloc_ctl_info",
        "SecOp": "edac_pci_free_ctl_info",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->edac_pci_alloc_ctl_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_trampoline_lookup",
        "SecOp": "bpf_trampoline_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_trampoline_lookup",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_trampoline_get",
        "SecOp": "bpf_trampoline_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->bpf_trampoline_lookup->bpf_trampoline_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_at91_clk_master_get_characteristics",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->of_at91_clk_master_get_characteristics",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "empty_lrc_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->empty_lrc_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qla4xxx_get_new_mrb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla4xxx_get_new_mrb",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nla_memdup_cookie",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nla_memdup_cookie",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iommu_group_alloc",
        "SecOp": "iommu_group_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iommu_group_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "generic_device_group",
        "SecOp": "iommu_group_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->iommu_group_alloc->generic_device_group",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_device_group",
        "SecOp": "iommu_group_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->iommu_group_alloc->pci_device_group",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dpaa2_eth_alloc_channel",
        "SecOp": "dpaa2_eth_free_channel",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dpaa2_eth_alloc_channel",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gpiod_get_array_optional",
        "SecOp": "gpiod_put_array",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->gpiod_get_array->gpiod_get_array_optional",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_gt_coredump_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_gt_coredump_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_encoder_current_mode",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_encoder_current_mode",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_alloc_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_alloc_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_cprb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_cprb",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lt9611uxc_firmware_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lt9611uxc_firmware_read",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dp_meter_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dp_meter_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dpll_pin_get",
        "SecOp": "dpll_pin_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->dpll_pin_alloc->dpll_pin_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ntfs_create_reparse_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ntfs_create_reparse_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ext4_alloc_sbi",
        "SecOp": "ext4_free_sbi",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ext4_alloc_sbi",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmem_cell_prepare_write_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvmem_cell_prepare_write_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cfg80211_defrag_mle",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cfg80211_defrag_mle",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "riscv_pmu_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->riscv_pmu_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_fw_alloc_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->brcmf_fw_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_pcie_prepare_fw_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->brcmf_fw_alloc_request->brcmf_pcie_prepare_fw_request",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_usb_prepare_fw_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->brcmf_fw_alloc_request->brcmf_usb_prepare_fw_request",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_sdio_prepare_fw_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->brcmf_fw_alloc_request->brcmf_sdio_prepare_fw_request",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_mmconfig_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_mmconfig_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_lznt_ctx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_lznt_ctx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "megasas_compat_iocpacket_get_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->megasas_compat_iocpacket_get_user",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_context",
        "SecOp": "put_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_device",
        "SecOp": "btrfs_free_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ieee80211_alloc_chanctx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ieee80211_alloc_chanctx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_flower_non_repr_priv_get",
        "SecOp": "__nfp_flower_non_repr_priv_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_flower_non_repr_priv_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lan966x_mdb_entry_add",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lan966x_mdb_entry_add",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_sys_off_handler",
        "SecOp": "free_sys_off_handler",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_sys_off_handler",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xdma_alloc_desc",
        "SecOp": "xdma_free_desc",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xdma_alloc_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fusb300_alloc_request",
        "SecOp": "fusb300_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fusb300_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_nbp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->new_nbp",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "log_create_ra",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->log_create_ra",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_selem_alloc",
        "SecOp": "bpf_selem_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->bpf_map_kzalloc->bpf_selem_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xsk_map_node_alloc",
        "SecOp": "xsk_map_node_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->bpf_map_kzalloc->xsk_map_node_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ima_alloc_key_entry",
        "SecOp": "ima_free_key_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ima_alloc_key_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_uprobe",
        "SecOp": "put_uprobe",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_uprobe",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nft_set_elem_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nft_set_elem_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovs_vport_alloc",
        "SecOp": "ovs_vport_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovs_vport_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_alloc_createdata",
        "SecOp": "nfs4_free_createdata",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_alloc_createdata",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpls_rt_alloc",
        "SecOp": "mpls_rt_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mpls_rt_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "b43_bus_dev_ssb_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->b43_bus_dev_ssb_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "net_dm_hw_reset_per_cpu_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->net_dm_hw_reset_per_cpu_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_sg_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_sg_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "scsi_alloc_sdev",
        "SecOp": "scsi_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->scsi_alloc_sdev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpsa_alloc_sas_node",
        "SecOp": "hpsa_free_sas_node",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hpsa_alloc_sas_node",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hd44780_common_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hd44780_common_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_rndis_request",
        "SecOp": "put_rndis_request",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_rndis_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_icc_get_from_provider",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->of_icc_get_from_provider",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_gid_entry",
        "SecOp": "put_gid_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_gid_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocfs2_allocate_refcount_tree",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocfs2_allocate_refcount_tree",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rnbd_srv_create_set_sess_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->rnbd_sess_dev_alloc->rnbd_srv_create_set_sess_dev",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_vudc_device",
        "SecOp": "put_vudc_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_vudc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn303_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn303_vpg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rtw_build_rsvd_page",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rtw_build_rsvd_page",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_crtc_alloc",
        "SecOp": "intel_crtc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_crtc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mtk_gem_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mtk_gem_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qeth_get_adapter_cmd",
        "SecOp": "qeth_put_cmd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->qeth_alloc_cmd->qeth_ipa_alloc_cmd->qeth_get_adapter_cmd",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_hwmon_alloc",
        "SecOp": "mlx5_hwmon_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_hwmon_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "irq_domain_alloc_fwnode",
        "SecOp": "irq_domain_free_fwnode",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__irq_domain_alloc_fwnode->irq_domain_alloc_fwnode",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_serial",
        "SecOp": "usb_serial_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_serial",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_nexthop_counter_alloc",
        "SecOp": "mlxsw_sp_nexthop_counter_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_nexthop_counter_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "spi_res_alloc",
        "SecOp": "spi_res_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->spi_res_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_alloc_state_owner",
        "SecOp": "nfs4_free_state_owner",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_alloc_state_owner",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sdma_transfer_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sdma_transfer_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_holder_object",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_holder_object",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_flow_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_flow_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nouveau_bo_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nouveau_bo_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__nfp_eth_read_ports",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__nfp_eth_read_ports",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_eth_read_ports",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__nfp_eth_read_ports->nfp_eth_read_ports",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocelot_vcap_filter_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocelot_vcap_filter_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__drm_universal_plane_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__drm_universal_plane_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn30_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn30_afmt_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "metadata_open",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->metadata_open",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iopt_area_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iopt_area_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_smp_resp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_smp_resp",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "afs_alloc_operation",
        "SecOp": "afs_put_operation",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->afs_alloc_operation",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "convert_to_nt_pathname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->convert_to_nt_pathname",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wm_adsp_buffer_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wm_adsp_buffer_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mhi_alloc_controller",
        "SecOp": "mhi_free_controller",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mhi_alloc_controller",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "jent_zalloc",
        "SecOp": "jent_zfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->jent_zalloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "jent_entropy_collector_alloc",
        "SecOp": "jent_entropy_collector_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->jent_zalloc->jent_entropy_collector_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vgem_fence_create",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vgem_fence_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_connector_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_connector_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dt_idle_pd_alloc",
        "SecOp": "dt_idle_pd_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dt_idle_pd_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fscache_alloc_cache",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fscache_alloc_cache",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mdiobus_alloc_size",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mdiobus_alloc_size",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mdiobus_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mdiobus_alloc_size->mdiobus_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_mdio_bitbang",
        "SecOp": "free_mdio_bitbang",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mdiobus_alloc_size->mdiobus_alloc->alloc_mdio_bitbang",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ubi_alloc_vid_buf",
        "SecOp": "ubi_free_vid_buf",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ubi_alloc_vid_buf",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "core_tpg_alloc_lun",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->core_tpg_alloc_lun",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iucv_path_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iucv_path_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aa_alloc_pdb",
        "SecOp": "aa_put_pdb",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->aa_alloc_pdb",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iscsit_alloc_portal_group",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iscsit_alloc_portal_group",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "isert_device_get",
        "SecOp": "isert_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->isert_device_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_vmcoreinfo_old",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_vmcoreinfo_old",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__of_node_dup",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__of_node_dup",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_changeset_create_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__of_node_dup->of_changeset_create_node",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "axi_dmac_alloc_desc",
        "SecOp": "axi_dmac_free_desc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->axi_dmac_alloc_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_workqueue_attrs",
        "SecOp": "free_workqueue_attrs",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_workqueue_attrs",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_context",
        "SecOp": "free_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_reset_control_get_optional_exclusive",
        "SecOp": "reset_control_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->__reset_control_get_internal->__of_reset_control_get->of_reset_control_get_optional_exclusive",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_reset_control_get_exclusive",
        "SecOp": "reset_control_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->__reset_control_get_internal->__of_reset_control_get->of_reset_control_get_exclusive",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rockchip_get_core_reset",
        "SecOp": "reset_control_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->__reset_control_get_internal->__of_reset_control_get->of_reset_control_get_exclusive->rockchip_get_core_reset",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "meson_smp_get_core_reset",
        "SecOp": "reset_control_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->__reset_control_get_internal->__of_reset_control_get->of_reset_control_get_exclusive->meson_smp_get_core_reset",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_reset_control_get_shared",
        "SecOp": "reset_control_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->__reset_control_get_internal->__of_reset_control_get->of_reset_control_get_shared",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__reset_control_get",
        "SecOp": "reset_control_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->__reset_control_get_internal->__of_reset_control_get->__reset_control_get",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "reset_control_get_optional_shared",
        "SecOp": "reset_control_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->__reset_control_get_internal->__of_reset_control_get->__reset_control_get->reset_control_get_optional_shared",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "reset_control_get_optional_exclusive",
        "SecOp": "reset_control_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->__reset_control_get_internal->__of_reset_control_get->__reset_control_get->reset_control_get_optional_exclusive",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "reset_control_get_exclusive_released",
        "SecOp": "reset_control_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->__reset_control_get_internal->__of_reset_control_get->__reset_control_get->reset_control_get_exclusive_released",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_rif_alloc",
        "SecOp": "mlxsw_sp_rif_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_rif_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hsi_alloc_msg",
        "SecOp": "hsi_free_msg",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hsi_alloc_msg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "llc_sap_open",
        "SecOp": "llc_sap_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->llc_sap_alloc->llc_sap_open",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "raid_set_alloc",
        "SecOp": "raid_set_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->raid_set_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tcp_ao_alloc_info",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tcp_ao_alloc_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "arpc_alloc",
        "SecOp": "arpc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->arpc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_mad_private",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_mad_private",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gmap_alloc",
        "SecOp": "gmap_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gmap_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sas_alloc_device",
        "SecOp": "sas_put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sas_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5e_tc_init_fib_work",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5e_tc_init_fib_work",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xfrm_policy_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xfrm_policy_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xfrm_policy_construct",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->xfrm_policy_alloc->xfrm_policy_construct",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gsmi_buf_alloc",
        "SecOp": "gsmi_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gsmi_buf_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "track_data_alloc",
        "SecOp": "track_data_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->track_data_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "null_alloc_dev",
        "SecOp": "null_free_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->null_alloc_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_link_dev_register",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_link_dev_register",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dma_fence_array_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dma_fence_array_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xe_vm_bind_vma",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->dma_fence_array_create->xe_vm_bind_vma",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mock_array",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->dma_fence_array_create->mock_array",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xe_sync_in_fence_get",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->dma_fence_array_create->xe_sync_in_fence_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_clk",
        "SecOp": "free_clk",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_clk",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "construct_label",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->construct_label",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_ruleset",
        "SecOp": "landlock_put_ruleset",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_ruleset",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hidpp_unifying_get_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hidpp_unifying_get_name",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "stm32_exti_host_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->stm32_exti_host_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_session",
        "SecOp": "nfsd4_put_session",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_session",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iscsit_alloc_conn",
        "SecOp": "iscsit_free_conn",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iscsit_alloc_conn",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pcpu_alloc_chunk",
        "SecOp": "pcpu_free_chunk",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->pcpu_mem_zalloc->pcpu_alloc_chunk",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mousevsc_alloc_device",
        "SecOp": "mousevsc_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mousevsc_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_backref_iter_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_backref_iter_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mddev_alloc",
        "SecOp": "mddev_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mddev_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "md_alloc",
        "SecOp": "mddev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mddev_alloc->md_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_alloc_host_bridge",
        "SecOp": "pci_free_host_bridge",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_alloc_host_bridge",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "prestera_counter_block_get",
        "SecOp": "prestera_counter_block_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->prestera_counter_block_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmabuf_imp_alloc_storage",
        "SecOp": "dmabuf_imp_free_storage",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dmabuf_imp_alloc_storage",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmar_alloc_pci_notify_info",
        "SecOp": "dmar_free_pci_notify_info",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dmar_alloc_pci_notify_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_dca_provider",
        "SecOp": "free_dca_provider",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_dca_provider",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dw_i3c_master_alloc_xfer",
        "SecOp": "dw_i3c_master_free_xfer",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dw_i3c_master_alloc_xfer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_links",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->new_links",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rvt_mcast_alloc",
        "SecOp": "rvt_mcast_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rvt_mcast_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ice_get_opt_fw_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ice_get_opt_fw_name",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ahc_alloc",
        "SecOp": "ahc_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ahc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "attr_create_nonres_log",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->attr_create_nonres_log",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smb2_lock_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->smb2_lock_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn32_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn32_vpg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acpi_ec_create_query",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acpi_ec_create_query",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pvr_hwrt_dataset_create",
        "SecOp": "pvr_hwrt_dataset_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pvr_hwrt_dataset_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfc_mei_phy_alloc",
        "SecOp": "nfc_mei_phy_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfc_mei_phy_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acpiphp_init_context",
        "SecOp": "acpiphp_put_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acpiphp_init_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acpi_ec_alloc",
        "SecOp": "acpi_ec_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acpi_ec_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath9k_htc_hw_alloc",
        "SecOp": "ath9k_htc_hw_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ath9k_htc_hw_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qla2x00_alloc_fcport",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla2x00_alloc_fcport",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sdw_master_rt_alloc",
        "SecOp": "sdw_master_rt_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sdw_master_rt_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vxlan_vni_alloc",
        "SecOp": "vxlan_vni_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vxlan_vni_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cfmuxl_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cfmuxl_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i3c_master_alloc_i2c_dev",
        "SecOp": "i3c_master_free_i2c_dev",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i3c_master_alloc_i2c_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lpddr_probe_chip",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lpddr_probe_chip",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_alloc_client",
        "SecOp": "nfs_free_client",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs_alloc_client",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_multipath",
        "SecOp": "free_multipath",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_multipath",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cfg80211_gen_reporter_rnr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cfg80211_gen_reporter_rnr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_usb_find_power_domain",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->snd_usb_find_power_domain",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_afu",
        "SecOp": "ocxl_afu_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_afu",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "urdev_alloc",
        "SecOp": "urdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->urdev_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pqi_alloc_sas_node",
        "SecOp": "pqi_free_sas_node",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pqi_alloc_sas_node",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "build_ac_header_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->build_ac_header_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocrdma_init_emb_mqe",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 26,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocrdma_init_emb_mqe",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmet_rdma_alloc_queue",
        "SecOp": "nvmet_rdma_free_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvmet_rdma_alloc_queue",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "devlink_fmsg_alloc",
        "SecOp": "devlink_fmsg_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->devlink_fmsg_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_sync_bucket_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_sync_bucket_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "em_table_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->em_table_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_spt",
        "SecOp": "free_spt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_spt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ppgtt_alloc_spt",
        "SecOp": "ppgtt_free_spt",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_spt->ppgtt_alloc_spt",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pvr_free_list_create",
        "SecOp": "pvr_free_list_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pvr_free_list_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "armpmu_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->armpmu_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpsa_alloc_sas_phy",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hpsa_alloc_sas_phy",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fib6_info_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fib6_info_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "platform_device_alloc",
        "SecOp": "platform_device_put",
        "hasUsage": true,
        "usageCount": 189,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->platform_device_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sysfb_create_simplefb",
        "SecOp": "platform_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->platform_device_alloc->sysfb_create_simplefb",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_device_alloc",
        "SecOp": "platform_device_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->platform_device_alloc->of_device_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_alloc_forget",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_alloc_forget",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn321_apg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn321_apg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipr_alloc_ucode_buffer",
        "SecOp": "ipr_free_ucode_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ipr_alloc_ucode_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "_alloc_path_selector",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->_alloc_path_selector",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "opa_vnic_alloc_mac_tbl",
        "SecOp": "opa_vnic_free_mac_tbl",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->opa_vnic_alloc_mac_tbl",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_n2cp",
        "SecOp": "free_n2cp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_n2cp",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_peer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_peer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "submit_create",
        "SecOp": "etnaviv_submit_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->submit_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_path",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipv6_add_addr",
        "SecOp": "in6_ifa_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ipv6_add_addr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ghes_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ghes_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_get_fh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_get_fh",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_index_upper",
        "SecOp": "dput",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ovl_get_fh->ovl_index_upper",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_lookup_real_ancestor",
        "SecOp": "dput",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->ovl_get_fh->ovl_index_upper->ovl_lookup_real_inode->ovl_lookup_real_ancestor",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ceph_create_snap_context",
        "SecOp": "ceph_put_snap_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ceph_create_snap_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_sdvo_connector_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_sdvo_connector_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "marvell_c22_pcs_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->marvell_c22_pcs_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xe_bo_alloc",
        "SecOp": "xe_bo_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xe_bo_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xe_gem_prime_import",
        "SecOp": "drm_gem_object_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->xe_bo_alloc->xe_gem_prime_import",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__nfp_nsp_identify",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__nfp_nsp_identify",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_io_alloc",
        "SecOp": "fuse_io_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_io_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kvm_alloc_msr_filter",
        "SecOp": "kvm_free_msr_filter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->kvm_alloc_msr_filter",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "r8a66597_make_td",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->r8a66597_make_td",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "l2tp_session_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->l2tp_session_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "_tegra_init_pll",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->_tegra_init_pll",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn321_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn321_vpg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_mvm_update_mcc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iwl_mvm_update_mcc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qmi_encode_message",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qmi_encode_message",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_create_tree",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->btrfs_create_tree",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "read_tree_root_path",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->read_tree_root_path",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_read_tree_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->read_tree_root_path->btrfs_read_tree_root",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_reloc_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->read_tree_root_path->btrfs_read_tree_root->create_reloc_root",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_get_fs_root_commit_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->read_tree_root_path->btrfs_get_fs_root_commit_root",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_dummy_root",
        "SecOp": "btrfs_free_dummy_root",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->btrfs_alloc_dummy_root",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_log_tree",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->alloc_log_tree",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_hashentry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_hashentry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "map_iter_alloc",
        "SecOp": "map_iter_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->map_iter_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fs3270_alloc_view",
        "SecOp": "fs3270_free_view",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fs3270_alloc_view",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_parse_eeprom_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iwl_parse_eeprom_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acpi_alloc_fwnode_static",
        "SecOp": "acpi_free_fwnode_static",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acpi_alloc_fwnode_static",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mv88e639x_pcs_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mv88e639x_pcs_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_and_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_and_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rbd_spec_alloc",
        "SecOp": "rbd_spec_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rbd_spec_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "edac_device_alloc_ctl_info",
        "SecOp": "edac_device_free_ctl_info",
        "hasUsage": true,
        "usageCount": 18,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->edac_device_alloc_ctl_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qe_udc_config",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qe_udc_config",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath12k_core_alloc",
        "SecOp": "ath12k_core_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ath12k_core_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ecard_alloc_card",
        "SecOp": "ecard_free_card",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ecard_alloc_card",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cdev_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cdev_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_sk_msg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_sk_msg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sk_psock_create_ingress_msg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_sk_msg->sk_psock_create_ingress_msg",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "afs_alloc_server",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->afs_alloc_server",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vic_provinfo_alloc",
        "SecOp": "vic_provinfo_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vic_provinfo_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "artpec6_crypto_alloc_bounce",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->artpec6_crypto_alloc_bounce",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_tape_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->new_tape_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "j1939_priv_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->j1939_priv_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "udma_prep_dma_cyclic_pkt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->udma_prep_dma_cyclic_pkt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__register_chrdev_region",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__register_chrdev_region",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "p9_fid_create",
        "SecOp": "p9_fid_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->p9_fid_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "p9_client_walk",
        "SecOp": "p9_fid_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->p9_fid_create->p9_client_walk",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "v9fs_fid_lookup",
        "SecOp": "p9_fid_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->p9_fid_create->p9_client_walk->v9fs_fid_lookup_with_uid->v9fs_fid_lookup",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "p9_client_xattrwalk",
        "SecOp": "p9_fid_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->p9_fid_create->p9_client_xattrwalk",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fwnode_find_pse_control",
        "SecOp": "pse_control_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->pse_control_get_internal->of_pse_control_get->fwnode_find_pse_control",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ddw_list_new_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ddw_list_new_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nouveau_platform_device_create",
        "SecOp": "drm_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->drm_dev_alloc->nouveau_platform_device_create",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iso_sched_alloc",
        "SecOp": "iso_sched_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iso_sched_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "siw_pbl_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->siw_pbl_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bin_to_hex_dup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bin_to_hex_dup",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "construct_auth",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->construct_auth",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i915_gpu_coredump_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i915_gpu_coredump_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gr_alloc_request",
        "SecOp": "gr_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gr_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rds_message_alloc",
        "SecOp": "rds_message_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rds_message_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "stub_device_alloc",
        "SecOp": "stub_device_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->stub_device_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zpci_bus_alloc",
        "SecOp": "zpci_bus_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->zpci_bus_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zpci_create_device",
        "SecOp": "zpci_zdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->zpci_bus_alloc->zpci_bus_device_register->zpci_create_device",
        "var_path": "retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "linger_alloc",
        "SecOp": "linger_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->linger_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vas_window_alloc",
        "SecOp": "vas_window_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vas_window_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pqi_alloc_sas_phy",
        "SecOp": "pqi_free_sas_phy",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pqi_alloc_sas_phy",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dr_ptrn_alloc_pattern",
        "SecOp": "dr_ptrn_free_pattern",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dr_ptrn_alloc_pattern",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_srv_ctx",
        "SecOp": "free_srv_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_srv_ctx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__hfs_bnode_create",
        "SecOp": "hfs_bnode_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__hfs_bnode_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hfs_bnode_find",
        "SecOp": "hfs_bnode_put",
        "hasUsage": true,
        "usageCount": 18,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__hfs_bnode_create->hfs_bnode_find",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hfs_bnode_split",
        "SecOp": "hfs_bnode_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->__hfs_bnode_create->hfs_bnode_find->hfs_bnode_split",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hfs_bmap_alloc",
        "SecOp": "hfs_bnode_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->__hfs_bnode_create->hfs_bnode_find->hfs_bmap_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qeth_alloc_qdio_queue",
        "SecOp": "qeth_free_qdio_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qeth_alloc_qdio_queue",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mtk_alloc_clk_data",
        "SecOp": "mtk_free_clk_data",
        "hasUsage": true,
        "usageCount": 18,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mtk_alloc_clk_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tty3270_alloc_view",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tty3270_alloc_view",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_trace_fprobe",
        "SecOp": "free_trace_fprobe",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_trace_fprobe",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tree_mod_log_alloc_move",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tree_mod_log_alloc_move",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fastrpc_context_alloc",
        "SecOp": "fastrpc_context_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fastrpc_context_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_choose_arg_map",
        "SecOp": "free_choose_arg_map",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_choose_arg_map",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__rvt_alloc_mr",
        "SecOp": "__rvt_free_mr",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__rvt_alloc_mr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_perf_context",
        "SecOp": "put_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_perf_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "find_get_context",
        "SecOp": "put_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_perf_context->find_get_context",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_fid_to_fh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_fid_to_fh",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pmc_data_allocate",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pmc_data_allocate",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gpuva_op_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gpuva_op_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wcd_clsh_ctrl_alloc",
        "SecOp": "wcd_clsh_ctrl_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wcd_clsh_ctrl_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ftrace_hash",
        "SecOp": "free_ftrace_hash",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ftrace_hash",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__v4l2_subdev_state_alloc",
        "SecOp": "__v4l2_subdev_state_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__v4l2_subdev_state_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cs_dsp_read_algs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cs_dsp_read_algs",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aa_loaddata_alloc",
        "SecOp": "aa_put_loaddata",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->aa_loaddata_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aa_simple_write_to_buffer",
        "SecOp": "aa_put_loaddata",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->aa_loaddata_alloc->aa_simple_write_to_buffer",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tegra_bo_alloc_object",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tegra_bo_alloc_object",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_vblank_event",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_vblank_event",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "setup_kdump_cmdline",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->setup_kdump_cmdline",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kobject_get_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->kobject_get_path",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "arm_smmu_mmu_notifier_get",
        "SecOp": "arm_smmu_mmu_notifier_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->arm_smmu_mmu_notifier_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_pages_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_pages_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_alloc_entry",
        "SecOp": "ovl_free_entry",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_alloc_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "inet_alloc_ifa",
        "SecOp": "inet_free_ifa",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->inet_alloc_ifa",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn32_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn32_afmt_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath11k_core_alloc",
        "SecOp": "ath11k_core_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ath11k_core_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vxlan_mdb_entry_get",
        "SecOp": "vxlan_mdb_entry_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vxlan_mdb_entry_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_engines",
        "SecOp": "free_engines",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_engines",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mesh_path_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mesh_path_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hidpp_get_device_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hidpp_get_device_name",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_synth_event",
        "SecOp": "free_synth_event",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_synth_event",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tcf_chain_create",
        "SecOp": "tcf_chain_put_explicitly_created",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tcf_chain_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tcf_chain_get",
        "SecOp": "tcf_chain_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tcf_chain_create->__tcf_chain_get->tcf_chain_get",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_tramp_image_alloc",
        "SecOp": "bpf_tramp_image_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_tramp_image_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "axi_desc_alloc",
        "SecOp": "axi_desc_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->axi_desc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs3_alloc_createdata",
        "SecOp": "nfs3_free_createdata",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs3_alloc_createdata",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rxrpc_alloc_local",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rxrpc_alloc_local",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nft_trans_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nft_trans_alloc_gfp->nft_trans_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nft_trans_elem_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->nft_trans_alloc_gfp->nft_trans_alloc->nft_trans_elem_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ibmasm_new_command",
        "SecOp": "command_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ibmasm_new_command",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mei_msg_hdr_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mei_msg_hdr_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_trace_kprobe",
        "SecOp": "free_trace_kprobe",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_trace_kprobe",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ubifs_info",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ubifs_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efa_alloc_mr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->efa_alloc_mr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gnss_allocate_device",
        "SecOp": "gnss_put_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gnss_allocate_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hso_create_device",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hso_create_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_ctx_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_ctx_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "r8a66597_alloc_request",
        "SecOp": "r8a66597_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->r8a66597_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dummy_ops_init_args",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dummy_ops_init_args",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "afs_vl_lookup_vldb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->afs_vl_get_entry_by_name_u->afs_vl_lookup_vldb",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i915_drm_client_alloc",
        "SecOp": "i915_drm_client_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i915_drm_client_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pcibios_alloc_controller",
        "SecOp": "pcibios_free_controller",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pcibios_alloc_controller",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_engine_create_ring",
        "SecOp": "intel_ring_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_engine_create_ring",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xe_vm_create",
        "SecOp": "xe_vm_close_and_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xe_vm_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_alloc_flow_attr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_alloc_flow_attr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_engine_coredump_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_engine_coredump_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "capture_engine",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->intel_engine_coredump_alloc->capture_engine",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "flow_rule_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->flow_rule_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "psb_framebuffer_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->psb_framebuffer_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_cpp_area_alloc",
        "SecOp": "nfp_cpp_area_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nfp_cpp_area_alloc_with_name->nfp_cpp_area_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "protection_domain_alloc",
        "SecOp": "protection_domain_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->protection_domain_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn303_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn303_afmt_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mt76_get_rxwi",
        "SecOp": "mt76_put_rxwi",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mt76_alloc_rxwi->mt76_get_rxwi",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wilc_alloc_work",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wilc_alloc_work",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nf_ct_tmpl_alloc",
        "SecOp": "nf_ct_tmpl_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nf_ct_tmpl_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "genl_sk_priv_alloc",
        "SecOp": "genl_sk_priv_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->genl_sk_priv_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_mnt_ns",
        "SecOp": "free_mnt_ns",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_mnt_ns",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mount_subtree",
        "SecOp": "dput",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_mnt_ns->mount_subtree",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_chunk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_chunk",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_path_alloc",
        "SecOp": "tb_path_free",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_path_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_cache_defer_req_alloc",
        "SecOp": "nfs_cache_defer_req_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs_cache_defer_req_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ntsync_alloc_obj",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ntsync_alloc_obj",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usbip_alloc_iso_desc_pdu",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->usbip_alloc_iso_desc_pdu",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "msm_fence_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->msm_fence_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__renesas_usb3_ep_alloc_request",
        "SecOp": "__renesas_usb3_ep_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__renesas_usb3_ep_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "thermal_of_trips_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->thermal_of_trips_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_generic_request",
        "SecOp": "put_generic_request",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_generic_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__ceph_monc_get_version",
        "SecOp": "put_generic_request",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_generic_request->__ceph_monc_get_version",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_neigh_entry_alloc",
        "SecOp": "mlxsw_sp_neigh_entry_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_neigh_entry_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fifo_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fifo_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "register_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->register_session",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__open_export_target_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->register_session->__open_export_target_session",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ceph_mdsc_open_export_target_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->register_session->__open_export_target_session->ceph_mdsc_open_export_target_session",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iommufd_get_group",
        "SecOp": "iommufd_put_group",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iommufd_get_group",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "arm_smmu_alloc_shared_cd",
        "SecOp": "arm_smmu_free_shared_cd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->arm_smmu_alloc_shared_cd",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "batadv_orig_ifinfo_new",
        "SecOp": "batadv_orig_ifinfo_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->batadv_orig_ifinfo_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "indx_new",
        "SecOp": "put_indx_node",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->indx_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fsck_err_get",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fsck_err_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "exynos_drm_gem_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->exynos_drm_gem_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_file_alloc",
        "SecOp": "drm_file_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->drm_file_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mock_drm_getfile",
        "SecOp": "fput",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->drm_file_alloc->mock_drm_getfile",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mock_file",
        "SecOp": "fput",
        "hasUsage": true,
        "usageCount": 18,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->drm_file_alloc->mock_drm_getfile->mock_file",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "trace_alloc_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->trace_alloc_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_trace_uprobe",
        "SecOp": "free_trace_uprobe",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_trace_uprobe",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "crypto_larval_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->crypto_larval_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpda_alloc_ctlr_info",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hpda_alloc_ctlr_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmem_create_cell",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvmem_create_cell",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_nvmem_cell_get",
        "SecOp": "nvmem_cell_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nvmem_create_cell->of_nvmem_cell_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmem_cell_get",
        "SecOp": "nvmem_cell_put",
        "hasUsage": true,
        "usageCount": 24,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->nvmem_create_cell->of_nvmem_cell_get->nvmem_cell_get",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_backref_alloc_node",
        "SecOp": "btrfs_backref_free_node",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_backref_alloc_node",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "event_trigger_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->event_trigger_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_alloc_cmd_msg",
        "SecOp": "mlx5_free_cmd_msg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_alloc_cmd_msg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "genwqe_dev_alloc",
        "SecOp": "genwqe_dev_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->genwqe_dev_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "j1939_ecu_create_locked",
        "SecOp": "j1939_ecu_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->j1939_ecu_create_locked",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_function",
        "SecOp": "free_function",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_function",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efx_tc_get_recirc_id",
        "SecOp": "efx_tc_put_recirc_id",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->efx_tc_get_recirc_id",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kunit_alloc_string_stream",
        "SecOp": "kunit_free_string_stream",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_string_stream->kunit_alloc_string_stream",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "generate_dma_contract",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->generate_dma_contract",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i2c_get_dma_safe_msg_buf",
        "SecOp": "i2c_put_dma_safe_msg_buf",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i2c_get_dma_safe_msg_buf",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipu_image_convert",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ipu_image_convert",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "siw_cep_alloc",
        "SecOp": "siw_cep_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->siw_cep_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cdnsp_ring_alloc",
        "SecOp": "cdnsp_ring_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->cdnsp_segment_alloc->cdnsp_alloc_segments_for_ring->cdnsp_ring_alloc",
        "var_path": "retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ccwchain_alloc",
        "SecOp": "ccwchain_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ccwchain_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn31_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn31_afmt_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_open_recoverdata_alloc",
        "SecOp": "nfs4_opendata_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nfs4_opendata_alloc->nfs4_open_recoverdata_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xlog_cil_ctx_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xlog_cil_ctx_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_pdacf_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->snd_pdacf_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipmi_msg_alloc",
        "SecOp": "acpi_ipmi_msg_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ipmi_msg_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qat_uclo_map_chunk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qat_uclo_map_chunk",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ddw_property_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ddw_property_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "offload_action_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->offload_action_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_region_ref",
        "SecOp": "free_region_ref",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_region_ref",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svm_range_bo_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->svm_range_bo_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "recorded_ref_alloc",
        "SecOp": "recorded_ref_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->recorded_ref_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ip_vs_stats_alloc",
        "SecOp": "ip_vs_stats_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ip_vs_stats_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "eeh_pe_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->eeh_pe_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_alloc_server",
        "SecOp": "nfs_free_server",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs_alloc_server",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn301_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn301_vpg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "emac_alloc_dma_req",
        "SecOp": "emac_free_dma_req",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->emac_alloc_dma_req",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "objagg_hints_stats_get",
        "SecOp": "objagg_stats_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->objagg_hints_stats_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usnic_fwd_dev_alloc",
        "SecOp": "usnic_fwd_dev_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->usnic_fwd_dev_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rnbd_srv_init_srv_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rnbd_srv_init_srv_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__alloc_irq_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__alloc_irq_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pcmcia_make_resource",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pcmcia_make_resource",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "build_fu_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->build_fu_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vgpu_alloc_mm",
        "SecOp": "vgpu_free_mm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vgpu_alloc_mm",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pvr2_eeprom_fetch",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pvr2_eeprom_fetch",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tape_alloc_device",
        "SecOp": "tape_put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tape_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pcistub_device_alloc",
        "SecOp": "pcistub_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pcistub_device_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fcloop_alloc_nport",
        "SecOp": "fcloop_nport_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fcloop_alloc_nport",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nexthop_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nexthop_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nexthop_create",
        "SecOp": "nexthop_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nexthop_alloc->nexthop_create",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nexthop_create_group",
        "SecOp": "nexthop_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nexthop_alloc->nexthop_create_group",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tls_alloc_aead_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tls_alloc_aead_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "batadv_neigh_ifinfo_new",
        "SecOp": "batadv_neigh_ifinfo_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->batadv_neigh_ifinfo_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_sf_alloc",
        "SecOp": "mlx5_sf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_sf_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "allocate_flower_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->allocate_flower_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "trace_pid_list_alloc",
        "SecOp": "trace_pid_list_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->trace_pid_list_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qla_enode_alloc",
        "SecOp": "qla_enode_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla_enode_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dr_action_create_generic",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dr_action_create_generic",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sampler_get",
        "SecOp": "sampler_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sampler_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cdns_i3c_master_alloc_xfer",
        "SecOp": "cdns_i3c_master_free_xfer",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cdns_i3c_master_alloc_xfer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_priority_group",
        "SecOp": "free_priority_group",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_priority_group",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_tunnel_alloc",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "getname_flags",
        "SecOp": "putname",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->getname_flags",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "getname",
        "SecOp": "putname",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->getname_flags->getname",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pipe_info",
        "SecOp": "free_pipe_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_pipe_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lcs_alloc_reply",
        "SecOp": "lcs_put_reply",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lcs_alloc_reply",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nouveau_pfns_alloc",
        "SecOp": "nouveau_pfns_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nouveau_pfns_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "b43_bus_dev_bcma_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->b43_bus_dev_bcma_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aa_load_ent_alloc",
        "SecOp": "aa_load_ent_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->aa_load_ent_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ib_alloc_cq",
        "SecOp": "ib_free_cq",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->create_cq->__ib_alloc_cq->ib_alloc_cq",
        "var_path": "retval->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "p9_client_getattr_dotl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->p9_client_getattr_dotl",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mtd_parser_tplink_safeloader_read_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mtd_parser_tplink_safeloader_read_table",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_prime_pages_to_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->drm_prime_pages_to_sg",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_gem_shmem_get_sg_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->drm_prime_pages_to_sg->drm_gem_shmem_get_sg_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_alloc_limb_space",
        "SecOp": "mpi_free_limb_space",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->mpi_alloc_limb_space",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_sg_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->create_sg_table",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vrf_map_elem_alloc",
        "SecOp": "vrf_map_elem_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vrf_map_elem_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mtd_kmalloc_up_to",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->mtd_kmalloc_up_to",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_flex_gd",
        "SecOp": "free_flex_gd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_flex_gd",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_new_subsystem",
        "SecOp": "__put_system",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->create_new_subsystem",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "genprobe_ident_chips",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->genprobe_ident_chips",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_alloc_seqid",
        "SecOp": "nfs_free_seqid",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfs_alloc_seqid",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mmc_test_req_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->mmc_test_req_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iotlb_alloc_cr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->iotlb_alloc_cr",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "b43_calibrate_lo_setting",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->b43_calibrate_lo_setting",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipoib_path_iter_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ipoib_path_iter_init",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "uml_kmalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 1,
        "API_path": "kmalloc->uml_kmalloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_addr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->uml_kmalloc->new_addr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "setup_initial_poll",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->uml_kmalloc->setup_initial_poll",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "akcipher_request_alloc",
        "SecOp": "akcipher_request_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->akcipher_request_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svc_fill_symlink_pathname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->svc_fill_symlink_pathname",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "copy_tlv",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->copy_tlv",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "anon_vma_name_alloc",
        "SecOp": "anon_vma_name_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->anon_vma_name_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tipc_aead_mem_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->tipc_aead_mem_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmf_host_default",
        "SecOp": "nvmf_host_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->nvmf_host_alloc->nvmf_host_default",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rxe_create_mmap_info",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rxe_create_mmap_info",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qcom_mdt_read_metadata",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->qcom_mdt_read_metadata",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ref_walk_alloc",
        "SecOp": "ref_walk_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ref_walk_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_raw_hash",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->get_raw_hash",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cfi_read_pri",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->cfi_read_pri",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pod_alloc_sysex_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->line6_alloc_sysex_buffer->pod_alloc_sysex_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tty_ldisc_get",
        "SecOp": "tty_ldisc_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->tty_ldisc_get",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_pathname_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->nfs4_pathname_string",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ibm_slot_from_id",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ibm_slot_from_id",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qdisc_get_rtab",
        "SecOp": "qdisc_put_rtab",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->qdisc_get_rtab",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "batadv_tp_init_recv",
        "SecOp": "batadv_tp_vars_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->batadv_tp_init_recv",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_parallel",
        "SecOp": "put_parallel",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->alloc_parallel",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_get_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->mpi_get_buffer",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acpi_processor_alloc_pdc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->acpi_processor_alloc_pdc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dma_resv_list_alloc",
        "SecOp": "dma_resv_list_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->dma_resv_list_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipw_alloc_error_log",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ipw_alloc_error_log",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kpp_request_alloc",
        "SecOp": "kpp_request_free",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "kmalloc->kpp_request_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "audit_krule_to_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->audit_krule_to_data",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_dma_fence",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_dma_fence",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "virtio_gpu_array_alloc",
        "SecOp": "virtio_gpu_array_put_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->virtio_gpu_array_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "virtio_gpu_array_from_handles",
        "SecOp": "virtio_gpu_array_put_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->virtio_gpu_array_alloc->virtio_gpu_array_from_handles",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smb_strndup_from_utf16",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "kmalloc->smb_strndup_from_utf16",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smb2_get_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->smb_strndup_from_utf16->smb2_get_name",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_alloc_icm",
        "SecOp": "mlx4_free_icm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->mlx4_alloc_icm",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__mlx4_alloc_mtt_range",
        "SecOp": "__mlx4_free_mtt_range",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->mlx4_table_get_range->__mlx4_alloc_mtt_range",
        "var_path": "retval->retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocfs2_acl_to_xattr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ocfs2_acl_to_xattr",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ref_tracker_get_stats",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ref_tracker_get_stats",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_printable_features",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->btrfs_printable_features",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_cell",
        "SecOp": "free_cell",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_cell",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "erofs_read_metadata",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->erofs_read_metadata",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_nfs_open_context",
        "SecOp": "put_nfs_open_context",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->alloc_nfs_open_context",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_nfs_open_context",
        "SecOp": "put_nfs_open_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->alloc_nfs_open_context->create_nfs_open_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lpfc_bsg_dma_page_alloc",
        "SecOp": "lpfc_bsg_dma_page_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->lpfc_bsg_dma_page_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qib_user_sdma_alloc_header",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->qib_user_sdma_alloc_header",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vmxnet3_copy_mc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vmxnet3_copy_mc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pages_exact",
        "SecOp": "free_pages_exact",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 1,
        "API_path": "kmalloc->alloc_pages_exact",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_quote_buf",
        "SecOp": "free_quote_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->alloc_pages_exact->alloc_quote_buf",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipoib_mcast_iter_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ipoib_mcast_iter_init",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ulist_alloc",
        "SecOp": "ulist_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->ulist_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_uefi_get_variable",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->iwl_uefi_get_variable",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_uefi_get_verified_variable",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 2,
        "API_path": "kmalloc->iwl_uefi_get_variable->iwl_uefi_get_verified_variable",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_uefi_get_reduced_power",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->iwl_uefi_get_variable->iwl_uefi_get_verified_variable->iwl_uefi_get_reduced_power",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_uefi_get_pnvm",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->iwl_uefi_get_variable->iwl_uefi_get_pnvm",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfsd4_cltrack_grace_start",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->nfsd4_cltrack_grace_start",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pnfs_alloc_commit_array",
        "SecOp": "pnfs_free_commit_array",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->pnfs_alloc_commit_array",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_midi_channel_alloc_set",
        "SecOp": "snd_midi_channel_free_set",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->snd_midi_channel_alloc_set",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "jffs2_alloc_full_dirent",
        "SecOp": "jffs2_free_full_dirent",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->jffs2_alloc_full_dirent",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pcibios_get_irq_routing_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->pcibios_get_irq_routing_table",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "idal_buffer_alloc",
        "SecOp": "idal_buffer_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->idal_buffer_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ksmbd_convert_dir_info_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ksmbd_convert_dir_info_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_chunk_map",
        "SecOp": "btrfs_free_chunk_map",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->btrfs_alloc_chunk_map",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "insert_space_after_semis",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->insert_space_after_semis",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "debug_info_alloc",
        "SecOp": "debug_info_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->debug_info_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_build_devname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->cifs_build_devname",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vboxsf_dir_info_alloc",
        "SecOp": "vboxsf_dir_info_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vboxsf_dir_info_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ccw_device_get_chp_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->chp_get_chp_desc->ccw_device_get_chp_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "user_input_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "kmalloc->user_input_str",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "follow_link",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->follow_link",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "audit_unpack_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->audit_unpack_string",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_block_rsv",
        "SecOp": "btrfs_free_block_rsv",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->btrfs_alloc_block_rsv",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_alloc_createdata",
        "SecOp": "nfs_free_createdata",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->nfs_alloc_createdata",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ah_alloc_tmp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->ah_alloc_tmp",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "arm_lpae_alloc_pgtable",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->arm_lpae_alloc_pgtable",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "raw_alloc_io_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->raw_alloc_io_data",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "jffs2_acl_to_medium",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->jffs2_acl_to_medium",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usb_cache_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->usb_cache_string",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_alloc_icm_table",
        "SecOp": "mthca_free_icm_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mthca_alloc_icm_table",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mask_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mask_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ksmbd_inode_get",
        "SecOp": "ksmbd_inode_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ksmbd_inode_get",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipmr_reg_vif",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->netdev_name_node_alloc->netdev_name_node_head_alloc->register_netdevice->ipmr_reg_vif",
        "var_path": "retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ip6mr_reg_vif",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->netdev_name_node_alloc->netdev_name_node_head_alloc->register_netdevice->ip6mr_reg_vif",
        "var_path": "retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_decomp_stream",
        "SecOp": "put_decomp_stream",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->get_decomp_stream",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_alloc_ds_server",
        "SecOp": "nfs4_free_ds_server",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfs4_alloc_ds_server",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smu_sat_get_sdb_partition",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->smu_sat_get_sdb_partition",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ltree_add_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ltree_add_entry",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bch_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->bch_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "compute_generator_polynomial",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->bch_alloc->compute_generator_polynomial",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aead_request_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->aead_request_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dma_alloc_noncontiguous",
        "SecOp": "dma_free_noncontiguous",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->alloc_single_sgt->dma_alloc_noncontiguous",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_key_description",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->get_key_description",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ext2_acl_to_disk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ext2_acl_to_disk",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sched_core_alloc_cookie",
        "SecOp": "sched_core_put_cookie",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->sched_core_alloc_cookie",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fs_path_alloc",
        "SecOp": "fs_path_free",
        "hasUsage": true,
        "usageCount": 26,
        "depth": 1,
        "API_path": "kmalloc->fs_path_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ip6addrlbl_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ip6addrlbl_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vmalloc_to_sgt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vmalloc_to_sgt",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "io_alloc_ifd",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->io_alloc_ifd",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usb_alloc_coherent",
        "SecOp": "usb_free_coherent",
        "hasUsage": true,
        "usageCount": 36,
        "depth": 2,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_io_completion_alloc",
        "SecOp": "nfs_io_completion_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfs_io_completion_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_rsm_map_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_rsm_map_table",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fsverity_prepare_hash_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->fsverity_prepare_hash_state",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_xattr_escape_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ovl_xattr_escape_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rnbd_srv_get_full_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rnbd_srv_get_full_path",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hfsplus_iget",
        "SecOp": "iput",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->hfs_find_init->hfsplus_iget",
        "var_path": "retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xhci_ring_alloc",
        "SecOp": "xhci_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_segment_alloc->xhci_alloc_segments_for_ring->xhci_ring_alloc",
        "var_path": "retval->retval->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i915_ttm_resource_get_st",
        "SecOp": "i915_refct_sgt_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 7,
        "API_path": "kmalloc->kmalloc_array->sg_kmalloc->get_next_sg->sg_alloc_append_table_from_pages->sg_alloc_table_from_pages_segment->i915_ttm_tt_get_st->i915_ttm_resource_get_st",
        "var_path": "retval->retval->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_afk_key_info_get",
        "SecOp": "mlxsw_afk_key_info_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->mlxsw_afk_picker->mlxsw_afk_key_info_create->mlxsw_afk_key_info_get",
        "var_path": "retval->retval->retval->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5e_tc_int_port_get",
        "SecOp": "mlx5e_tc_int_port_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx5_add_flow_rules->mlx5e_int_port_create_rx_rule->mlx5e_int_port_add->mlx5e_tc_int_port_get",
        "var_path": "retval->retval->retval->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kmalloc_node_noprof",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "kmalloc->kmalloc_array->memcg_list_lru_alloc->__memcg_slab_post_alloc_hook->memcg_slab_post_alloc_hook->slab_post_alloc_hook->slab_alloc_node->__do_kmalloc_node->__kmalloc_node_noprof->kmalloc_node_noprof",
        "var_path": "retval->retval->arg->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__alloc_object",
        "SecOp": "mem_pool_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 9,
        "API_path": "kmalloc->kmalloc_array->memcg_list_lru_alloc->__memcg_slab_post_alloc_hook->memcg_slab_post_alloc_hook->slab_post_alloc_hook->slab_alloc_node->kmem_cache_alloc_noprof->mem_pool_alloc->__alloc_object",
        "var_path": "retval->retval->arg->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sun4v_build_common",
        "SecOp": "irq_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->init_desc->alloc_desc->alloc_descs->__irq_alloc_descs->irq_alloc->sun4v_build_common",
        "var_path": "retval->retval->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "irq_domain_alloc_irqs",
        "SecOp": "irq_domain_free_irqs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "kmalloc->init_desc->alloc_desc->alloc_descs->__irq_alloc_descs->irq_domain_alloc_descs->irq_domain_alloc_irqs_locked->__irq_domain_alloc_irqs->irq_domain_alloc_irqs",
        "var_path": "retval->retval->arg->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmar_alloc_hwirq",
        "SecOp": "dmar_free_hwirq",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 9,
        "API_path": "kmalloc->init_desc->alloc_desc->alloc_descs->__irq_alloc_descs->irq_domain_alloc_descs->irq_domain_alloc_irqs_locked->__irq_domain_alloc_irqs->irq_domain_alloc_irqs->dmar_alloc_hwirq",
        "var_path": "retval->retval->arg->retval->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btree_node_alloc_replacement",
        "SecOp": "btree_node_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "kmalloc->kzalloc->mca_bucket_alloc->mca_alloc->__bch_btree_node_alloc->bch_btree_node_alloc->btree_node_alloc_replacement",
        "var_path": "retval->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_get_fs_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 9,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_subpage->alloc_extent_buffer->btrfs_find_create_tree_block->read_tree_block->read_tree_root_path->btrfs_read_tree_root->btrfs_get_root_ref->btrfs_get_fs_root",
        "var_path": "retval->retval->retval->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_lookup_real",
        "SecOp": "dput",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "kmalloc->kzalloc->ovl_encode_real_fh->ovl_get_index_name->ovl_lookup_index->ovl_lookup_real_inode->ovl_lookup_real_ancestor->ovl_lookup_real",
        "var_path": "retval->retval->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "free_mr_init_cq",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kzalloc->hns_roce_alloc_db_pgdir->hns_roce_alloc_db->alloc_cq_db->hns_roce_create_cq->free_mr_init_cq",
        "var_path": "retval->retval->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qp_alloc_queue",
        "SecOp": "qp_free_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 10,
        "API_path": "kmalloc->kzalloc->swiotlb_alloc_pool->swiotlb_find_slots->swiotlb_alloc->dma_direct_alloc_swiotlb->__dma_direct_alloc_pages->dma_direct_alloc->dma_alloc_attrs->dma_alloc_coherent->qp_alloc_queue",
        "var_path": "retval->retval->retval->arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qla2x00_create_host",
        "SecOp": "qla2x00_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 10,
        "API_path": "kmalloc->kzalloc->swiotlb_alloc_pool->swiotlb_find_slots->swiotlb_alloc->dma_direct_alloc_swiotlb->__dma_direct_alloc_pages->dma_direct_alloc->dma_alloc_attrs->dma_alloc_coherent->qla2x00_create_host",
        "var_path": "retval->retval->retval->arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_link_table_buf",
        "SecOp": "free_link_table_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 10,
        "API_path": "kmalloc->kzalloc->swiotlb_alloc_pool->swiotlb_find_slots->swiotlb_alloc->dma_direct_alloc_swiotlb->__dma_direct_alloc_pages->dma_direct_alloc->dma_alloc_attrs->dma_alloc_coherent->alloc_link_table_buf",
        "var_path": "retval->retval->retval->arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "asd_alloc_coherent",
        "SecOp": "asd_free_coherent",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 10,
        "API_path": "kmalloc->kzalloc->swiotlb_alloc_pool->swiotlb_find_slots->swiotlb_alloc->dma_direct_alloc_swiotlb->__dma_direct_alloc_pages->dma_direct_alloc->dma_alloc_attrs->dma_alloc_coherent->asd_alloc_coherent",
        "var_path": "retval->retval->retval->arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_get_dentry",
        "SecOp": "dput",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 10,
        "API_path": "kmalloc->kzalloc->ovl_get_fh->ovl_index_upper->ovl_lookup_real_inode->ovl_lookup_real_ancestor->ovl_lookup_real->ovl_lookup_real_inode->ovl_lookup_real_ancestor->ovl_lookup_real->ovl_get_dentry",
        "var_path": "retval->retval->retval->retval->retval->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_get_parent",
        "SecOp": "dput",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->read_tree_root_path->btrfs_read_tree_root->btrfs_get_root_ref->btrfs_get_fs_root->btrfs_get_dentry->btrfs_get_parent",
        "var_path": "retval->retval->retval->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "v9fs_parent_fid",
        "SecOp": "p9_fid_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 6,
        "API_path": "kmalloc->kzalloc->p9_fid_create->p9_client_walk->v9fs_fid_lookup_with_uid->v9fs_fid_lookup->v9fs_parent_fid",
        "var_path": "retval->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "v9fs_vfs_lookup",
        "SecOp": "dput",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "kmalloc->kzalloc->p9_fid_create->p9_client_walk->v9fs_fid_lookup_with_uid->v9fs_fid_lookup->v9fs_parent_fid->v9fs_vfs_lookup",
        "var_path": "retval->retval->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "v9fs_fid_clone",
        "SecOp": "p9_fid_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "kmalloc->kzalloc->p9_fid_create->p9_client_walk->v9fs_fid_lookup_with_uid->v9fs_fid_lookup->v9fs_fid_clone",
        "var_path": "retval->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rbd_get_client",
        "SecOp": "rbd_put_client",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kzalloc->alloc_generic_request->__ceph_monc_get_version->ceph_monc_get_version->ceph_wait_for_latest_osdmap->rbd_get_client",
        "var_path": "retval->retval->retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usnic_transport_get_socket",
        "SecOp": "usnic_transport_put_socket",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kzalloc->getname_flags->getname->usnic_transport_sock_get_addr->usnic_transport_sock_to_str->usnic_transport_get_socket",
        "var_path": "retval->retval->retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bch_btree_node_alloc",
        "SecOp": "btree_node_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->bch_btree_keys_alloc->mca_data_alloc->mca_bucket_alloc->mca_alloc->__bch_btree_node_alloc->bch_btree_node_alloc",
        "var_path": "retval->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sk_psock_get",
        "SecOp": "sk_psock_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->sk_psock_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ipoib_neigh_alloc",
        "SecOp": "ipoib_neigh_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->ipoib_neigh_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "neigh_add_path",
        "SecOp": "ipoib_neigh_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->ipoib_neigh_alloc->neigh_add_path",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ring_buffer_get",
        "SecOp": "ring_buffer_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->ring_buffer_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "llc_lookup_dgram",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->llc_lookup_dgram",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "fscrypt_find_master_key",
        "SecOp": "fscrypt_put_master_key",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->fscrypt_find_master_key",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "macsec_txsa_get",
        "SecOp": "macsec_txsa_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->macsec_txsa_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mem_cgroup_id_get_online",
        "SecOp": "mem_cgroup_id_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->mem_cgroup_id_get_online",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "tcf_block_refcnt_get",
        "SecOp": "tcf_block_refcnt_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->tcf_block_refcnt_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nf_ct_expect_find_get",
        "SecOp": "nf_ct_expect_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->nf_ct_expect_find_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ucma_get_ctx",
        "SecOp": "ucma_put_ctx",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->ucma_get_ctx",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ucma_get_ctx_dev",
        "SecOp": "ucma_put_ctx",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->ucma_get_ctx->ucma_get_ctx_dev",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nfs4_opendata_find_nfs4_state",
        "SecOp": "nfs4_put_open_state",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->__nfs4_find_state_byowner->nfs4_get_open_state->nfs4_opendata_find_nfs4_state",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_rpccred",
        "SecOp": "put_rpccred",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->get_rpccred",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nf_sk_lookup_slow_v6",
        "SecOp": "sock_gen_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->__inet6_lookup_established->__inet6_lookup->inet6_lookup->nf_socket_get_sock_v6->nf_sk_lookup_slow_v6",
        "var_path": "arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "inet_diag_find_one_icsk",
        "SecOp": "sock_gen_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->__inet6_lookup_established->__inet6_lookup->inet6_lookup->inet_diag_find_one_icsk",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nfs_get_lock_context",
        "SecOp": "nfs_put_lock_context",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->__nfs_find_lock_context->nfs_get_lock_context",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "calipso_doi_getdef",
        "SecOp": "calipso_doi_putdef",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->calipso_doi_getdef",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nf_sk_lookup_slow_v4",
        "SecOp": "sock_gen_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->inet_lookup->nf_socket_get_sock_v4->nf_sk_lookup_slow_v4",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nft_socket_do_lookup",
        "SecOp": "sock_gen_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->inet_lookup->nf_socket_get_sock_v4->nf_sk_lookup_slow_v4->nft_socket_do_lookup",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlx5_ct_fs_smfs_matcher_get",
        "SecOp": "mlx5_ct_fs_smfs_matcher_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->mlx5_ct_fs_smfs_matcher_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "key_lookup",
        "SecOp": "key_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->key_lookup",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__llc_lookup",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->__llc_lookup_established->__llc_lookup",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "llc_lookup_established",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->__llc_lookup_established->llc_lookup_established",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "macsec_rxsa_get",
        "SecOp": "macsec_rxsa_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->macsec_rxsa_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "raw_sock_get",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->raw_sock_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "txopt_get",
        "SecOp": "txopt_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->txopt_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "perf_lock_task_context",
        "SecOp": "put_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->perf_lock_task_context",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "perf_pin_task_context",
        "SecOp": "put_ctx",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->perf_lock_task_context->perf_pin_task_context",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__mctp_dev_get",
        "SecOp": "mctp_dev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->__mctp_dev_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nfsd_file_get",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->nfsd_file_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_readable_file_locked",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->nfsd_file_get->find_readable_file_locked",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_readable_file",
        "SecOp": "cifsFileInfo_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->nfsd_file_get->find_readable_file_locked->find_readable_file",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nfs4_find_file",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->nfsd_file_get->find_readable_file_locked->find_readable_file->nfs4_find_file",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_writeable_file_locked",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->nfsd_file_get->find_writeable_file_locked",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_any_file",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->nfsd_file_get->find_any_file",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_rw_file",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->nfsd_file_get->find_rw_file",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ip_find",
        "SecOp": "ipq_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->inet_frag_find->ip_find",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "l2tp_tunnel_get",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->l2tp_tunnel_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "cipso_v4_doi_getdef",
        "SecOp": "cipso_v4_doi_putdef",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->cipso_v4_doi_getdef",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_grab_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->btrfs_grab_root",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_get_global_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->btrfs_grab_root->btrfs_get_global_root",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_lookup_fs_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->btrfs_grab_root->btrfs_lookup_fs_root",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlx5e_flow_get",
        "SecOp": "mlx5e_flow_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->mlx5e_flow_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "tipc_aead_get",
        "SecOp": "tipc_aead_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->tipc_aead_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nf_ct_find_expectation",
        "SecOp": "nf_ct_expect_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->nf_ct_find_expectation",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_nfs_open_context",
        "SecOp": "put_nfs_open_context",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->get_nfs_open_context",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nfs_find_open_context",
        "SecOp": "put_nfs_open_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->get_nfs_open_context->nfs_find_open_context",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nfsd4_file_hash_lookup",
        "SecOp": "put_nfs4_file",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->nfsd4_file_hash_lookup",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_ipc_ns_not_zero",
        "SecOp": "put_ipc_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->get_ipc_ns_not_zero",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "maybe_get_net",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->maybe_get_net",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_net_ns_by_id",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->maybe_get_net->get_net_ns_by_id",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rtnl_get_net_ns_capable",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->maybe_get_net->get_net_ns_by_id->rtnl_get_net_ns_capable",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rtnl_link_get_net_by_nlattr",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->maybe_get_net->get_net_ns_by_id->rtnl_link_get_net_by_nlattr",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rtnl_link_get_net_capable",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->maybe_get_net->get_net_ns_by_id->rtnl_link_get_net_by_nlattr->rtnl_link_get_net_capable",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "devlink_netns_get",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->maybe_get_net->get_net_ns_by_id->devlink_netns_get",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_proc_net",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->maybe_get_net->get_proc_net",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nbd_find_get_unused",
        "SecOp": "nbd_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->nbd_find_get_unused",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nf_conntrack_helper_try_module_get",
        "SecOp": "nf_conntrack_helper_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->nf_conntrack_helper_try_module_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ceph_get_mds_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->ceph_get_mds_session",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__ceph_lookup_mds_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->ceph_get_mds_session->__ceph_lookup_mds_session",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rds_find_bound",
        "SecOp": "rds_sock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->rds_find_bound",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "lookup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->lookup",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "wg_allowedips_lookup_dst",
        "SecOp": "wg_peer_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->lookup->wg_allowedips_lookup_dst",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "inet_getpeer_v6",
        "SecOp": "inet_putpeer",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->lookup->inet_getpeer->inet_getpeer_v6",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "inet_getpeer_v4",
        "SecOp": "inet_putpeer",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->lookup->inet_getpeer->inet_getpeer_v4",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "tty_driver_lookup_tty",
        "SecOp": "tty_kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->lookup->tty_driver_lookup_tty",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "iopf_get_dev_fault_param",
        "SecOp": "iopf_put_dev_fault_param",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->iopf_get_dev_fault_param",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ipoib_neigh_get",
        "SecOp": "ipoib_neigh_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->ipoib_neigh_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "fuse_backing_get",
        "SecOp": "fuse_backing_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->fuse_backing_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_keyring_by_name",
        "SecOp": "key_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->find_keyring_by_name",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "instance_lookup_get",
        "SecOp": "instance_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->instance_lookup_get_rcu->instance_lookup_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlx5_tc_ct_entry_get",
        "SecOp": "mlx5_tc_ct_entry_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc_not_zero->mlx5_tc_ct_entry_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "devlinks_xa_get",
        "SecOp": "devlink_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->devlink_try_get->devlinks_xa_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "devlink_rel_devlink_get",
        "SecOp": "devlink_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->devlink_try_get->devlinks_xa_get->devlink_rel_devlink_get",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_uprobe",
        "SecOp": "put_uprobe",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_uprobe->__find_uprobe->find_uprobe",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_active_uprobe",
        "SecOp": "put_uprobe",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_uprobe->__find_uprobe->find_uprobe->find_active_uprobe",
        "var_path": "arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "gmap_find_shadow",
        "SecOp": "gmap_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->gmap_find_shadow",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_find_chunk_map_nolock",
        "SecOp": "btrfs_free_chunk_map",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->btrfs_find_chunk_map_nolock",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_find_chunk_map",
        "SecOp": "btrfs_free_chunk_map",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->btrfs_find_chunk_map_nolock->btrfs_find_chunk_map",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_get_chunk_map",
        "SecOp": "btrfs_free_chunk_map",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->btrfs_find_chunk_map_nolock->btrfs_find_chunk_map->btrfs_get_chunk_map",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlxsw_sp_acl_tcam_vchunk_get",
        "SecOp": "mlxsw_sp_acl_tcam_vchunk_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->mlxsw_sp_acl_tcam_vchunk_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "sctp_skb_recv_datagram",
        "SecOp": "kfree_skb",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->sctp_skb_recv_datagram",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nfs_start_delegation_return_locked",
        "SecOp": "nfs_free_delegation",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->nfs_get_delegation->nfs_start_delegation_return_locked",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "lookup_extent_mapping",
        "SecOp": "free_extent_map",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->__lookup_extent_mapping->lookup_extent_mapping",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "defrag_lookup_extent",
        "SecOp": "free_extent_map",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->__lookup_extent_mapping->lookup_extent_mapping->defrag_lookup_extent",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_get_extent",
        "SecOp": "free_extent_map",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->__lookup_extent_mapping->lookup_extent_mapping->btrfs_get_extent",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__get_extent_map",
        "SecOp": "free_extent_map",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->__lookup_extent_mapping->lookup_extent_mapping->btrfs_get_extent->__get_extent_map",
        "var_path": "arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "search_extent_mapping",
        "SecOp": "free_extent_map",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->__lookup_extent_mapping->search_extent_mapping",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlxsw_sp_acl_tcam_vregion_get",
        "SecOp": "mlxsw_sp_acl_tcam_vregion_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->mlxsw_sp_acl_tcam_vregion_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "prestera_nexthop_group_get",
        "SecOp": "prestera_nexthop_group_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->prestera_nexthop_group_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "vfs_dup_fs_context",
        "SecOp": "put_fs_context",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->vfs_dup_fs_context",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "br_vlan_get_master",
        "SecOp": "br_vlan_put_master",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->br_vlan_get_master",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ceph_get_snap_context",
        "SecOp": "ceph_put_snap_context",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->ceph_get_snap_context",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ceph_find_incompatible",
        "SecOp": "ceph_put_snap_context",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->ceph_get_snap_context->ceph_find_incompatible",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_oldest_context",
        "SecOp": "ceph_put_snap_context",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->ceph_get_snap_context->get_oldest_context",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlxsw_sp_fid_lookup_by_index",
        "SecOp": "mlxsw_sp_fid_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->mlxsw_sp_fid_lookup_by_index",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "sp_get",
        "SecOp": "sp_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->sp_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "gsi_channel_trans_last",
        "SecOp": "gsi_trans_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->gsi_channel_trans_last",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_lookup_ordered_extent",
        "SecOp": "btrfs_put_ordered_extent",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->btrfs_lookup_ordered_extent",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "user_event_mm_get_all",
        "SecOp": "user_event_mm_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->user_event_mm_get->user_event_mm_get_all",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlxsw_sp_bridge_port_get",
        "SecOp": "mlxsw_sp_bridge_port_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->mlxsw_sp_bridge_port_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "prestera_vr_get",
        "SecOp": "prestera_vr_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->prestera_vr_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "scmi_get_active_handler",
        "SecOp": "scmi_put_active_handler",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->scmi_get_active_handler",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rds_ib_get_client_data",
        "SecOp": "rds_ib_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->rds_ib_get_client_data",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btf_get_by_fd",
        "SecOp": "btf_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->btf_get_by_fd",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_pid",
        "SecOp": "put_pid",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_pid",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "tty_get_pgrp",
        "SecOp": "put_pid",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_pid->tty_get_pgrp",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_get_pid",
        "SecOp": "put_pid",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_pid->find_get_pid",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_task_pid",
        "SecOp": "put_pid",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_pid->get_task_pid",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nilfs_lookup_root",
        "SecOp": "nilfs_put_root",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->nilfs_lookup_root",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "create_cs_keyring",
        "SecOp": "key_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->key_alloc->keyring_alloc->create_cs_keyring",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "key_create_persistent",
        "SecOp": "key_ref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->key_alloc->keyring_alloc->key_create_persistent",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nfs4_try_open_cached",
        "SecOp": "nfs4_put_open_state",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->nfs4_try_open_cached",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "afs_get_vlserverlist",
        "SecOp": "afs_put_vlserverlist",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->afs_get_vlserverlist",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_stateid_by_type",
        "SecOp": "nfs4_put_stid",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->find_stateid_by_type",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "afs_get_vlserver",
        "SecOp": "afs_put_vlserver",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->afs_get_vlserver",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_or_insert_direct_key",
        "SecOp": "free_direct_key",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->find_or_insert_direct_key",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_lookup_first_ordered_extent",
        "SecOp": "btrfs_put_ordered_extent",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->btrfs_lookup_first_ordered_extent",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "evlist__findnew_cgroup",
        "SecOp": "cgroup__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->cgroup__get->evlist__find_cgroup->evlist__findnew_cgroup",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_get_caching_control",
        "SecOp": "btrfs_put_caching_control",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->btrfs_get_caching_control",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_group_info",
        "SecOp": "put_group_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_group_info",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "key_user_lookup",
        "SecOp": "key_user_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->key_user_lookup",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_binfmt_handler",
        "SecOp": "put_binfmt_handler",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_binfmt_handler",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__get_ns_from_inode",
        "SecOp": "put_ipc_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_ipc_ns->__get_ns_from_inode",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_ns_from_inode",
        "SecOp": "put_ipc_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_ipc_ns->__get_ns_from_inode->get_ns_from_inode",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_lookup_first_ordered_range",
        "SecOp": "btrfs_put_ordered_extent",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->btrfs_lookup_first_ordered_range",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlxsw_sp_fid_lookup_by_vni",
        "SecOp": "mlxsw_sp_fid_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->mlxsw_sp_fid_lookup_by_vni",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "prestera_acl_ruleset_get",
        "SecOp": "prestera_acl_ruleset_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->prestera_acl_ruleset_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rds_ib_get_device",
        "SecOp": "rds_ib_dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->rds_ib_get_device",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "fuse_ctl_file_conn_get",
        "SecOp": "fuse_conn_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->fuse_conn_get->fuse_ctl_file_conn_get",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlx5_get_rsc",
        "SecOp": "mlx5_core_put_rsc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->mlx5_get_rsc",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ap_get",
        "SecOp": "ap_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->ap_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "tee_shm_get_from_id",
        "SecOp": "tee_shm_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->tee_shm_get_from_id",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "optee_rpc_cmd_alloc_suppl",
        "SecOp": "tee_shm_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->tee_shm_get_from_id->optee_rpc_cmd_alloc_suppl",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlx5e_hairpin_get",
        "SecOp": "mlx5e_hairpin_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->mlx5e_hairpin_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__key_get",
        "SecOp": "key_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->__key_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "prepare_creds",
        "SecOp": "put_cred",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->__key_get->key_get->prepare_creds",
        "var_path": "arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "skb_get",
        "SecOp": "dev_kfree_skb_any",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->skb_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlxsw_sp_lag_get",
        "SecOp": "mlxsw_sp_lag_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->mlxsw_sp_lag_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_net",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_net",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_proc_task_net",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_net->get_proc_task_net",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_net_ns_by_pid",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_net->get_net_ns_by_pid",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rtnl_link_get_net",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_net->get_net_ns_by_pid->rtnl_link_get_net",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_net_ns_by_fd",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_net->get_net_ns_by_fd",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "bt_sock_alloc",
        "SecOp": "sk_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_net->get_net_track->sk_alloc->bt_sock_alloc",
        "var_path": "arg->arg->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_user_ns",
        "SecOp": "put_user_ns",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_user_ns",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__nfs4_find_lock_state",
        "SecOp": "nfs4_put_lock_state",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->__nfs4_find_lock_state",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "in_dev_get",
        "SecOp": "in_dev_put",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->in_dev_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mkiss_get",
        "SecOp": "mkiss_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->mkiss_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlxsw_sp_fid_lookup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->mlxsw_sp_fid_lookup",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "crypto_alg_get",
        "SecOp": "crypto_alg_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->crypto_alg_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "crypto_spawn_alg",
        "SecOp": "crypto_mod_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->crypto_alg_get->crypto_mod_get->crypto_spawn_alg",
        "var_path": "arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "cx88_core_get",
        "SecOp": "cx88_core_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->cx88_core_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "in6_dev_get",
        "SecOp": "in6_dev_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->in6_dev_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pnfs_bucket_get_committing",
        "SecOp": "pnfs_put_lseg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->pnfs_get_lseg->pnfs_bucket_get_committing",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_lookup_ordered_range",
        "SecOp": "btrfs_put_ordered_extent",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->btrfs_lookup_ordered_range",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_task_struct",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_task_struct",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "prepare_kernel_cred",
        "SecOp": "put_cred",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_uid->prepare_kernel_cred",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_pcichild_wslot",
        "SecOp": "put_pcichild",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_pcichild->get_pcichild_wslot",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_nth_filter",
        "SecOp": "__put_seccomp_filter",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->__get_seccomp_filter->get_nth_filter",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "urdev_get_from_cdev",
        "SecOp": "urdev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->urdev_get->urdev_get_from_cdev",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "urdev_get_from_devno",
        "SecOp": "urdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->urdev_get->urdev_get_from_cdev->urdev_get_from_devno",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "fsnotify_find_mark",
        "SecOp": "fsnotify_free_mark",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->fsnotify_get_mark->fsnotify_find_mark",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "fsnotify_find_inode_mark",
        "SecOp": "fsnotify_put_mark",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->fsnotify_get_mark->fsnotify_find_mark->fsnotify_find_inode_mark",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pidfd_get_pid",
        "SecOp": "put_pid",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_pid->pidfd_get_pid",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "threads__find",
        "SecOp": "thread__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->thread__get->threads__find",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "machine__find_thread",
        "SecOp": "thread__put",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->thread__get->threads__find->__machine__findnew_thread->machine__find_thread",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "machine__findnew_thread",
        "SecOp": "thread__put",
        "hasUsage": true,
        "usageCount": 47,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->thread__get->threads__find->__machine__findnew_thread->machine__findnew_thread",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "threads__findnew",
        "SecOp": "thread__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->thread__get->threads__findnew",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btf_get_module_btf",
        "SecOp": "btf_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->btf_get->btf_get_module_btf",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "msg_zerocopy_realloc",
        "SecOp": "net_zcopy_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->net_zcopy_get->msg_zerocopy_realloc",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "do_chunk_alloc",
        "SecOp": "btrfs_put_block_group",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->btrfs_get_block_group->do_chunk_alloc",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "o2net_handler_get",
        "SecOp": "o2net_handler_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->o2net_handler_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "batadv_tt_req_node_new",
        "SecOp": "batadv_tt_req_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->batadv_tt_req_node_new",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "vmci_ctx_get",
        "SecOp": "vmci_ctx_put",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->vmci_ctx_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rxe_lookup_mcg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->__rxe_lookup_mcg->rxe_lookup_mcg",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_watch_queue",
        "SecOp": "put_watch_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->get_watch_queue",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "riocm_get_channel",
        "SecOp": "riocm_put_channel",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->riocm_get_channel",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "l2cap_conn_get",
        "SecOp": "l2cap_conn_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->l2cap_conn_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dma_fence_get",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 26,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dma_fence_get_stub",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->dma_fence_get_stub",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "lima_sched_context_queue_task",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->lima_sched_context_queue_task",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "sync_file_get_fence",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->sync_file_get_fence",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "xe_migrate_clear",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->xe_migrate_clear",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "amdgpu_job_submit",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->amdgpu_job_submit",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "amdgpu_ctx_get_fence",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->amdgpu_ctx_get_fence",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "amdgpu_cs_get_fence",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->amdgpu_ctx_get_fence->amdgpu_cs_get_fence",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "create_timestamp",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->create_timestamp",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "record_registers",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->record_registers",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "wrap_timeline",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->wrap_timeline",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "garbage",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->garbage",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "multi_lrc_nop_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->multi_lrc_nop_request",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "checked_tl_write",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->checked_tl_write",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "semaphore_queue",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->semaphore_queue",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nop_user_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->nop_user_request",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nop_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->nop_request",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_request_mark_eio",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->i915_request_mark_eio",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__i915_request_create",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__i915_request_create",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__gpr_read",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__gpr_read",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pvr_vm_context_lookup",
        "SecOp": "pvr_vm_context_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pvr_vm_context_lookup",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "intel_context_get",
        "SecOp": "intel_context_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->intel_context_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_gem_context_get_engine",
        "SecOp": "intel_context_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->intel_context_get->i915_gem_context_get_engine",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "igt_request_alloc",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->intel_context_get->i915_gem_context_get_engine->igt_request_alloc",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "host1x_channel_get",
        "SecOp": "host1x_channel_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->host1x_channel_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "addr_to_mapping",
        "SecOp": "panfrost_gem_mapping_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->addr_to_mapping",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "zpci_bus_get",
        "SecOp": "zpci_bus_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->zpci_bus_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dlm_lowcomms_new_msg",
        "SecOp": "dlm_lowcomms_put_msg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dlm_lowcomms_new_msg",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_current_tty",
        "SecOp": "tty_kref_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->tty_kref_get->get_current_tty",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "audit_get_tty",
        "SecOp": "audit_put_tty",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->tty_kref_get->audit_get_tty",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "tty_port_tty_get",
        "SecOp": "tty_kref_put",
        "hasUsage": true,
        "usageCount": 55,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->tty_kref_get->tty_port_tty_get",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nfc_llcp_find_local",
        "SecOp": "nfc_llcp_local_put",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->nfc_llcp_local_get->nfc_llcp_find_local",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_spu_context",
        "SecOp": "put_spu_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->get_spu_context",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "spufs_assert_affinity",
        "SecOp": "put_spu_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->get_spu_context->spufs_assert_affinity",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "lynx_get",
        "SecOp": "lynx_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->lynx_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "isci_lookup_device",
        "SecOp": "isci_put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->isci_lookup_device",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_multi_transaction",
        "SecOp": "put_multi_transaction",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->get_multi_transaction",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "llsec_lookup_key",
        "SecOp": "llsec_key_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->llsec_key_get->llsec_lookup_key",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_get_pdb",
        "SecOp": "aa_put_pdb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_pdb",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "auth_domain_lookup",
        "SecOp": "auth_domain_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->auth_domain_lookup",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "tegra_drm_mapping_get",
        "SecOp": "tegra_drm_mapping_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->tegra_drm_mapping_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "qh_get",
        "SecOp": "qh_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->qh_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pmf_find_device",
        "SecOp": "pmf_put_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pmf_get_device->pmf_find_device",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "config_group_find_item",
        "SecOp": "config_item_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->config_item_get->config_group_find_item",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_space",
        "SecOp": "put_space",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->config_item_get->config_group_find_item->get_space",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "configfs_get_config_item",
        "SecOp": "config_item_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->config_item_get->configfs_get_config_item",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "group_get",
        "SecOp": "group_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->group_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "kobject_get",
        "SecOp": "kobject_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "usb_get_urb",
        "SecOp": "usb_put_urb",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->usb_get_urb",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_get_label",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_label",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__label_insert",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_label->__label_insert",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_label_insert",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_label->__label_insert->aa_label_insert",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__label_update",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_label->__label_insert->__label_update",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_get_current_label",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_label->aa_get_current_label",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_get_newest_label",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_label->aa_get_newest_label",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_label_merge",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_label->aa_get_newest_label->aa_label_merge",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_get_newest_cred_label",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_label->aa_get_newest_label->aa_get_newest_cred_label",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pmf_find_function",
        "SecOp": "pmf_put_function",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pmf_get_function->pmf_find_function",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "msm_submitqueue_get",
        "SecOp": "msm_submitqueue_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->msm_submitqueue_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_fw_req",
        "SecOp": "put_fw_req",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->get_fw_req",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "cache_get",
        "SecOp": "__free_buffer_wake",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->cache_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ceph_msg_get",
        "SecOp": "ceph_msg_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->ceph_msg_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mlx5_get_uars_page",
        "SecOp": "mlx5_put_uars_page",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->mlx5_get_uars_page",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pvr_hwrt_dataset_lookup",
        "SecOp": "pvr_hwrt_dataset_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pvr_hwrt_dataset_lookup",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__nvmem_device_get",
        "SecOp": "__nvmem_device_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->__nvmem_device_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nvmem_device_find",
        "SecOp": "nvmem_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->__nvmem_device_get->nvmem_device_find",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ptp_ocp_nvmem_device_get",
        "SecOp": "ptp_ocp_nvmem_device_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->__nvmem_device_get->nvmem_device_find->ptp_ocp_nvmem_device_get",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "comedi_dev_get_from_minor",
        "SecOp": "comedi_dev_put",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->comedi_dev_get->comedi_dev_get_from_board_minor->comedi_dev_get_from_minor",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "sdtx_device_get",
        "SecOp": "sdtx_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->sdtx_device_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "wg_peer_get",
        "SecOp": "wg_peer_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->wg_peer_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "panthor_vm_get_heap_pool",
        "SecOp": "panthor_heap_pool_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->panthor_heap_pool_get->panthor_vm_get_heap_pool",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "isci_get_device",
        "SecOp": "isci_put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->isci_get_device",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "acpi_ipmi_dev_get",
        "SecOp": "acpi_ipmi_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->acpi_ipmi_dev_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "xe_vm_lookup",
        "SecOp": "xe_vm_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->drm_gpuvm_get->xe_vm_get->xe_vm_lookup",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "drm_crtc_commit_get",
        "SecOp": "drm_crtc_commit_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->drm_crtc_commit_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_get_proxy",
        "SecOp": "aa_put_proxy",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_proxy",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "autogroup_task_get",
        "SecOp": "autogroup_kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->autogroup_kref_get->autogroup_task_get",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "amdgpu_ctx_get",
        "SecOp": "amdgpu_ctx_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->amdgpu_ctx_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "hl_mmap_mem_buf_get",
        "SecOp": "hl_mmap_mem_buf_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->hl_mmap_mem_buf_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "hl_cb_get",
        "SecOp": "hl_cb_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->hl_mmap_mem_buf_get->hl_cb_get",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_cb_from_cs_chunk",
        "SecOp": "hl_cb_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->hl_mmap_mem_buf_get->hl_cb_get->get_cb_from_cs_chunk",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "hl_cb_kernel_create",
        "SecOp": "hl_cb_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->hl_mmap_mem_buf_get->hl_cb_get->hl_cb_kernel_create",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_get_profile",
        "SecOp": "aa_put_profile",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_profile",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dj_find_receiver_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dj_find_receiver_dev",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "fw_card_get",
        "SecOp": "fw_card_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->fw_card_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "zfcp_ccw_adapter_by_cdev",
        "SecOp": "zfcp_ccw_adapter_put",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->zfcp_ccw_adapter_by_cdev",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "lima_ctx_get",
        "SecOp": "lima_ctx_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->lima_ctx_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pinctrl_get",
        "SecOp": "pinctrl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pinctrl_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pinctrl_get_select",
        "SecOp": "pinctrl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pinctrl_get->pinctrl_get_select",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "devm_pinctrl_get",
        "SecOp": "devm_pinctrl_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pinctrl_get->devm_pinctrl_get",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "eventfd_ctx_fileget",
        "SecOp": "eventfd_ctx_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->eventfd_ctx_fileget",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "eventfd_ctx_fdget",
        "SecOp": "eventfd_ctx_put",
        "hasUsage": true,
        "usageCount": 21,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->eventfd_ctx_fileget->eventfd_ctx_fdget",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_current_rng_nolock",
        "SecOp": "put_rng",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->get_current_rng_nolock",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_current_rng",
        "SecOp": "put_rng",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->get_current_rng_nolock->get_current_rng",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "batadv_bla_claim_get_backbone_gw",
        "SecOp": "batadv_backbone_gw_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->batadv_bla_claim_get_backbone_gw",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_or_create_cached_dir",
        "SecOp": "free_cached_dir",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->find_or_create_cached_dir",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "tty_driver_kref_get",
        "SecOp": "tty_driver_kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->tty_driver_kref_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "tty_lookup_driver",
        "SecOp": "tty_driver_kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->tty_driver_kref_get->get_tty_driver->tty_lookup_driver",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ssam_cdev_get",
        "SecOp": "ssam_cdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->ssam_cdev_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_vm_get",
        "SecOp": "i915_vm_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->i915_vm_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_gem_context_get_eb_vm",
        "SecOp": "i915_vm_put",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->i915_vm_get->i915_gem_context_get_eb_vm",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "batadv_last_bonding_get",
        "SecOp": "batadv_orig_ifinfo_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->batadv_last_bonding_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "lookup_get_request",
        "SecOp": "ceph_mdsc_put_request",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->ceph_mdsc_get_request->lookup_get_request",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "xe_exec_queue_last_fence_get",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->xe_exec_queue_last_fence_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_first_error_state",
        "SecOp": "i915_gpu_coredump_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->i915_gpu_coredump_get->i915_first_error_state",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_mtd_device",
        "SecOp": "put_mtd_device",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->__get_mtd_device->get_mtd_device",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "open_mtd_device",
        "SecOp": "put_mtd_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->__get_mtd_device->get_mtd_device->open_mtd_device",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_mtd_device_nm",
        "SecOp": "put_mtd_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->__get_mtd_device->get_mtd_device_nm",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "hl_ctx_get_fence",
        "SecOp": "hl_fence_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->hl_fence_get->hl_ctx_get_fence_locked->hl_ctx_get_fence",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "_find_opp_table_unlocked",
        "SecOp": "dev_pm_opp_put_opp_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "_find_opp_table",
        "SecOp": "dev_pm_opp_put_opp_table",
        "hasUsage": true,
        "usageCount": 18,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "_find_table_of_opp_np",
        "SecOp": "dev_pm_opp_put_opp_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_table_of_opp_np",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__mpt3sas_get_sdev_from_target",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->sas_device_get->__mpt3sas_get_sdev_from_target",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mpt3sas_get_sdev_from_target",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->sas_device_get->__mpt3sas_get_sdev_from_target->mpt3sas_get_sdev_from_target",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__mpt3sas_get_sdev_by_addr",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->sas_device_get->__mpt3sas_get_sdev_by_addr",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__mpt3sas_get_sdev_by_handle",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->sas_device_get->__mpt3sas_get_sdev_by_handle",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mpt3sas_get_sdev_by_handle",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->sas_device_get->__mpt3sas_get_sdev_by_handle->mpt3sas_get_sdev_by_handle",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__mpt3sas_get_sdev_by_rphy",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->sas_device_get->__mpt3sas_get_sdev_by_rphy",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "xe_exec_queue_lookup",
        "SecOp": "xe_exec_queue_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->xe_exec_queue_get->xe_exec_queue_lookup",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "v4l2_ctrls_find_req_obj",
        "SecOp": "media_request_object_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->media_request_object_get->v4l2_ctrls_find_req_obj",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "hidp_session_find",
        "SecOp": "hidp_session_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->hidp_session_get->hidp_session_find",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "etnaviv_iommuv1_context_alloc",
        "SecOp": "free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->etnaviv_iommu_context_get->etnaviv_iommuv1_context_alloc",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "xe_migrate_get_vm",
        "SecOp": "xe_vm_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->drm_gpuvm_get->xe_vm_get->xe_migrate_get_vm",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "panthor_vm_get",
        "SecOp": "panthor_vm_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->drm_gpuvm_get->panthor_vm_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "panthor_vm_pool_get_vm",
        "SecOp": "panthor_vm_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->drm_gpuvm_get->panthor_vm_get->panthor_vm_pool_get_vm",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_gem_object_get",
        "SecOp": "i915_gem_object_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->drm_gem_object_get->i915_gem_object_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_vma_get",
        "SecOp": "i915_vma_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->drm_gem_object_get->i915_gem_object_get->i915_vma_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "comedi_buf_map_from_subdev_get",
        "SecOp": "comedi_buf_map_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->comedi_buf_map_get->comedi_buf_map_from_subdev_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__mpt3sas_get_pdev_by_handle",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pcie_device_get->__mpt3sas_get_pdev_by_handle",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mpt3sas_get_pdev_by_handle",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pcie_device_get->__mpt3sas_get_pdev_by_handle->mpt3sas_get_pdev_by_handle",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__mpt3sas_get_pdev_from_target",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pcie_device_get->__mpt3sas_get_pdev_from_target",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mpt3sas_get_pdev_from_target",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pcie_device_get->__mpt3sas_get_pdev_from_target->mpt3sas_get_pdev_from_target",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__mpt3sas_get_pdev_by_wwid",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pcie_device_get->__mpt3sas_get_pdev_by_wwid",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mpt3sas_get_pdev_by_wwid",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pcie_device_get->__mpt3sas_get_pdev_by_wwid->mpt3sas_get_pdev_by_wwid",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mock_gem_device",
        "SecOp": "i915_gem_drain_freed_objects",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->i915_vm_get->mock_gem_device",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_zdev_by_fid",
        "SecOp": "zpci_zdev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->zpci_zdev_get->get_zdev_by_fid",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "j1939_ecu_get_by_name_locked",
        "SecOp": "j1939_ecu_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->j1939_ecu_get->j1939_ecu_get_by_name_locked",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "j1939_ecu_get_by_name",
        "SecOp": "j1939_ecu_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->j1939_ecu_get->j1939_ecu_get_by_name_locked->j1939_ecu_get_by_name",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "j1939_ecu_get_by_addr_locked",
        "SecOp": "j1939_ecu_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->j1939_ecu_get->j1939_ecu_get_by_addr_locked",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "j1939_ecu_get_by_addr",
        "SecOp": "j1939_ecu_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->j1939_ecu_get->j1939_ecu_get_by_addr_locked->j1939_ecu_get_by_addr",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "_find_opp_of_np",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dev_pm_opp_get->_find_opp_of_np",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_pm_opp_xlate_required_opp",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dev_pm_opp_get->dev_pm_opp_xlate_required_opp",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "o2nm_get_node_by_ip",
        "SecOp": "o2nm_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->config_item_get->o2nm_get_node_by_ip",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "o2nm_get_node_by_num",
        "SecOp": "o2nm_node_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->config_item_get->o2nm_get_node_by_num",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "stp_policy_node_lookup",
        "SecOp": "stp_policy_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->config_item_get->stp_policy_node_lookup",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "media_request_get_by_fd",
        "SecOp": "media_request_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->media_request_get->media_request_get_by_fd",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ip_map_cached_get",
        "SecOp": "ip_map_cached_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->cache_get->ip_map_cached_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "exp_get",
        "SecOp": "exp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->cache_get->exp_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__dlm_lookup_lockres_full",
        "SecOp": "dlm_lockres_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dlm_lockres_get->__dlm_lookup_lockres_full",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__dlm_lookup_lockres",
        "SecOp": "dlm_lockres_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dlm_lockres_get->__dlm_lookup_lockres_full->__dlm_lookup_lockres",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_get_ns",
        "SecOp": "aa_put_ns",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_profile->aa_get_ns",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_get_current_ns",
        "SecOp": "aa_put_ns",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_profile->aa_get_ns->aa_get_current_ns",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_lookupn_ns",
        "SecOp": "aa_put_ns",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_profile->aa_get_ns->aa_lookupn_ns",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "j1939_sk_get_incomplete_session",
        "SecOp": "j1939_session_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->j1939_session_get->j1939_sk_get_incomplete_session",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "j1939_session_get_simple",
        "SecOp": "j1939_session_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->j1939_session_get->j1939_session_get_simple",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "bdi_get_by_id",
        "SecOp": "bdi_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->bdi_get->bdi_get_by_id",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__mpi3mr_get_tgtdev_by_perst_id",
        "SecOp": "mpi3mr_tgtdev_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->mpi3mr_tgtdev_get->__mpi3mr_get_tgtdev_by_perst_id",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mpi3mr_get_tgtdev_by_perst_id",
        "SecOp": "mpi3mr_tgtdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->mpi3mr_tgtdev_get->__mpi3mr_get_tgtdev_by_perst_id->mpi3mr_get_tgtdev_by_perst_id",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mpi3mr_get_tgtdev_by_handle",
        "SecOp": "mpi3mr_tgtdev_put",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->mpi3mr_tgtdev_get->__mpi3mr_get_tgtdev_by_handle->mpi3mr_get_tgtdev_by_handle",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__mpi3mr_get_tgtdev_from_tgtpriv",
        "SecOp": "mpi3mr_tgtdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->mpi3mr_tgtdev_get->__mpi3mr_get_tgtdev_from_tgtpriv",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "of_node_get",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 62,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "of_get_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 135,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get->of_get_parent",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "of_find_node_opts_by_path",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get->of_find_node_opts_by_path",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__of_get_dma_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get->__of_get_dma_parent",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_get_dev_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get->dev_get_dev_node",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_pm_opp_get_of_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get->dev_pm_opp_get_of_node",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "xen_dt_get_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get->xen_dt_get_node",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "of_cpu_device_node_get",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 26,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get->of_cpu_device_node_get",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "regulator_of_get_init_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get->regulator_of_get_init_node",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pci_get_host_bridge_device",
        "SecOp": "pci_put_host_bridge_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->pci_get_host_bridge_device",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "virtio_fs_find_instance",
        "SecOp": "virtio_fs_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->virtio_fs_find_instance",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "cpufreq_cpu_get",
        "SecOp": "cpufreq_cpu_put",
        "hasUsage": true,
        "usageCount": 34,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->cpufreq_cpu_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "iommu_group_get",
        "SecOp": "iommu_group_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->iommu_group_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_slot",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->get_slot",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "request_single_step_set_feature_urb",
        "SecOp": "usb_free_urb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->usb_get_urb->request_single_step_set_feature_urb",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "usb_get_from_anchor",
        "SecOp": "usb_free_urb",
        "hasUsage": true,
        "usageCount": 18,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->usb_get_urb->usb_get_from_anchor",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "drm_syncobj_find",
        "SecOp": "drm_syncobj_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->drm_syncobj_get->drm_syncobj_find",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "kunit_find_resource",
        "SecOp": "kunit_put_resource",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kunit_get_resource->kunit_find_resource",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "kunit_find_named_resource",
        "SecOp": "kunit_put_resource",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kunit_get_resource->kunit_find_resource->kunit_find_named_resource",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "j1939_priv_get_by_ndev_locked",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->j1939_priv_get->j1939_priv_get_by_ndev_locked",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "j1939_priv_get_by_ndev",
        "SecOp": "j1939_priv_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->j1939_priv_get->j1939_priv_get_by_ndev_locked->j1939_priv_get_by_ndev",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "gb_connection_hd_find",
        "SecOp": "gb_connection_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->gb_connection_get->gb_connection_hd_find",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pcistub_device_find",
        "SecOp": "pcistub_device_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->pcistub_device_get->pcistub_device_find",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "j1939_session_skb_get_by_offset",
        "SecOp": "kfree_skb",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->skb_get->j1939_session_skb_get_by_offset",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "j1939_session_skb_get",
        "SecOp": "kfree_skb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->skb_get->j1939_session_skb_get_by_offset->j1939_session_skb_get",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "tipc_skb_peek",
        "SecOp": "kfree_skb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->skb_get->tipc_skb_peek",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_net_track",
        "SecOp": "put_net_track",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_net->get_net_track",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "v9fs_fid_find",
        "SecOp": "p9_fid_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->p9_fid_get->v9fs_fid_find",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "gss_cred_get_ctx",
        "SecOp": "gss_put_ctx",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->gss_get_ctx->gss_cred_get_ctx",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "prestera_bridge_port_add",
        "SecOp": "prestera_bridge_port_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->prestera_bridge_port_get->prestera_bridge_port_add",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pnfs_layout_process",
        "SecOp": "pnfs_put_lseg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->pnfs_get_lseg->pnfs_layout_process",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "css_task_iter_next",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_task_struct->css_task_iter_next",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "first_tid",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_task_struct->first_tid",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "task_group_seq_get_next",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_task_struct->task_group_seq_get_next",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "task_seq_get_next",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_task_struct->task_group_seq_get_next->task_seq_get_next",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_pid_task",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_task_struct->get_pid_task",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_proc_task",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 57,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_task_struct->get_pid_task->get_proc_task",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "damon_get_task_struct",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_task_struct->get_pid_task->damon_get_task_struct",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_get_task_by_vpid",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->refcount_inc->get_task_struct->find_get_task_by_vpid",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nfsd_file_lookup_locked",
        "SecOp": "refcount_dec_and_test",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->nfsd_file_get->nfsd_file_lookup_locked",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mmc_blk_get",
        "SecOp": "mmc_blk_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->mmc_blk_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "siw_qp_id2obj",
        "SecOp": "siw_qp_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->siw_qp_id2obj",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "xprt_switch_get",
        "SecOp": "xprt_switch_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->xprt_switch_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rpc_clnt_xprt_switch_get",
        "SecOp": "xprt_switch_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->xprt_switch_get->rpc_clnt_xprt_switch_get",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rpc_sysfs_xprt_kobj_get_xprt_switch",
        "SecOp": "xprt_switch_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->xprt_switch_get->rpc_sysfs_xprt_kobj_get_xprt_switch",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dma_fence_get_rcu",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->dma_fence_get_rcu",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "intel_context_get_active_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->dma_fence_get_rcu->i915_request_get_rcu->intel_context_get_active_request",
        "var_path": "arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "batadv_gw_get_selected_gw_node",
        "SecOp": "batadv_gw_node_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->batadv_gw_get_selected_gw_node",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_gem_object_get_frontbuffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->i915_gem_object_get_frontbuffer",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "intel_frontbuffer_get",
        "SecOp": "intel_frontbuffer_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->i915_gem_object_get_frontbuffer->intel_frontbuffer_get",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "kset_find_obj",
        "SecOp": "kobject_put",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->kset_find_obj",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ublk_get_device_from_id",
        "SecOp": "ublk_put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->ublk_get_device->ublk_get_device_from_id",
        "var_path": "arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__aa_get_loaddata",
        "SecOp": "aa_put_loaddata",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->__aa_get_loaddata",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_oa_config_get",
        "SecOp": "i915_oa_config_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->i915_oa_config_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_empty_config",
        "SecOp": "i915_oa_config_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->i915_oa_config_get->get_empty_config",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_perf_get_oa_config",
        "SecOp": "i915_oa_config_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->i915_oa_config_get->i915_perf_get_oa_config",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_listening_service",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->get_listening_service",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_service_by_port",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->find_service_by_port",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "qlt_create_sess",
        "SecOp": "put_sess",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->qlt_create_sess",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "qlt_make_local_sess",
        "SecOp": "put_sess",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->qlt_create_sess->qlt_make_local_sess",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "lpfc_nlp_get",
        "SecOp": "lpfc_nlp_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->lpfc_nlp_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "host1x_channel_get_index",
        "SecOp": "host1x_channel_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->host1x_channel_get_index",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rpi_firmware_get",
        "SecOp": "rpi_firmware_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->rpi_firmware_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "batadv_hardif_get_by_netdev",
        "SecOp": "batadv_hardif_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->batadv_hardif_get_by_netdev",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "batadv_hardif_get_active",
        "SecOp": "batadv_hardif_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->batadv_hardif_get_active",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "batadv_primary_if_get_selected",
        "SecOp": "batadv_hardif_put",
        "hasUsage": true,
        "usageCount": 41,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->batadv_primary_if_get_selected",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "svc_export_lookup",
        "SecOp": "exp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->cache_get_rcu->sunrpc_cache_find_rcu->sunrpc_cache_lookup_rcu->svc_export_lookup",
        "var_path": "arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_timeline",
        "SecOp": "intel_timeline_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->get_timeline",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nvmet_find_get_subsys",
        "SecOp": "nvmet_subsys_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->nvmet_find_get_subsys",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "wg_noise_keypair_get",
        "SecOp": "wg_noise_keypair_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->wg_noise_keypair_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "batadv_transtable_search",
        "SecOp": "batadv_orig_node_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->batadv_transtable_search",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "eb_lookup_vma",
        "SecOp": "i915_vma_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->i915_vma_tryget->eb_lookup_vma",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "batadv_orig_router_get",
        "SecOp": "batadv_neigh_node_put",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->batadv_orig_router_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "batadv_find_router",
        "SecOp": "batadv_neigh_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->batadv_orig_router_get->batadv_find_router",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "batadv_orig_to_router",
        "SecOp": "batadv_neigh_node_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->batadv_orig_router_get->batadv_find_router->batadv_orig_to_router",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "auth_domain_find",
        "SecOp": "auth_domain_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->auth_domain_find",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "unix_domain_find",
        "SecOp": "auth_domain_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->auth_domain_find->unix_domain_find",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "l2cap_chan_hold_unless_zero",
        "SecOp": "l2cap_chan_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->l2cap_chan_hold_unless_zero",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "l2cap_get_chan_by_dcid",
        "SecOp": "l2cap_chan_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->l2cap_chan_hold_unless_zero->l2cap_get_chan_by_dcid",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "l2cap_global_fixed_chan",
        "SecOp": "l2cap_chan_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->l2cap_chan_hold_unless_zero->l2cap_global_fixed_chan",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "l2cap_get_chan_by_scid",
        "SecOp": "l2cap_chan_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->l2cap_chan_hold_unless_zero->l2cap_get_chan_by_scid",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_closed_service_for_instance",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->find_closed_service_for_instance",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "siw_mem_id2obj",
        "SecOp": "siw_mem_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->siw_mem_id2obj",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "drm_mode_object_find",
        "SecOp": "drm_mode_object_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->__drm_mode_object_find->drm_mode_object_find",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "drm_connector_lookup",
        "SecOp": "drm_connector_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->__drm_mode_object_find->drm_mode_object_find->drm_connector_lookup",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "drm_crtc_find",
        "SecOp": "drm_crtc_vblank_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->__drm_mode_object_find->drm_mode_object_find->drm_crtc_find",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ssam_get_controller",
        "SecOp": "ssam_controller_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->ssam_get_controller",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "get_connected_service",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->get_connected_service",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_get_profile_rcu",
        "SecOp": "aa_put_profile",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->aa_get_profile_rcu",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rdma_user_mmap_entry_get_pgoff",
        "SecOp": "rdma_user_mmap_entry_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->rdma_user_mmap_entry_get_pgoff",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rdma_user_mmap_entry_get",
        "SecOp": "rdma_user_mmap_entry_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->rdma_user_mmap_entry_get_pgoff->rdma_user_mmap_entry_get",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "tipc_node_find",
        "SecOp": "tipc_node_put",
        "hasUsage": true,
        "usageCount": 18,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->tipc_node_find",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mei_me_cl_by_id",
        "SecOp": "mei_me_cl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->mei_me_cl_get->mei_me_cl_by_id",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__mei_me_cl_by_uuid_id",
        "SecOp": "mei_me_cl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->mei_me_cl_get->__mei_me_cl_by_uuid_id",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__mei_me_cl_by_uuid",
        "SecOp": "mei_me_cl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->mei_me_cl_get->__mei_me_cl_by_uuid",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mei_me_cl_by_uuid",
        "SecOp": "mei_me_cl_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->mei_me_cl_get->__mei_me_cl_by_uuid->mei_me_cl_by_uuid",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "xprt_get",
        "SecOp": "xprt_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->xprt_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rpc_sysfs_xprt_kobj_get_xprt",
        "SecOp": "xprt_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->xprt_get->rpc_sysfs_xprt_kobj_get_xprt",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "xprt_iter_get_next",
        "SecOp": "xprt_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->xprt_get->xprt_iter_get_helper->xprt_iter_get_next",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__context_lookup",
        "SecOp": "i915_gem_context_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->__context_lookup",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_gem_context_lookup",
        "SecOp": "i915_gem_context_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->__context_lookup->i915_gem_context_lookup",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "batadv_gw_get_selected_orig",
        "SecOp": "batadv_orig_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->batadv_gw_get_selected_orig",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "tipc_conn_lookup",
        "SecOp": "conn_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->tipc_conn_lookup",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rnbd_srv_find_or_add_srv_dev",
        "SecOp": "rnbd_put_srv_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->rnbd_srv_find_or_add_srv_dev",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "iommu_tce_table_get",
        "SecOp": "iommu_tce_table_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->iommu_tce_table_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "lookup_get_idr_uobject",
        "SecOp": "uverbs_uobject_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->lookup_get_idr_uobject",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rdma_lookup_get_uobject",
        "SecOp": "rdma_lookup_put_uobject",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->lookup_get_idr_uobject->rdma_lookup_get_uobject",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "__uobj_get_destroy",
        "SecOp": "uobj_put_destroy",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->lookup_get_idr_uobject->rdma_lookup_get_uobject->__uobj_get_destroy",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "wg_pubkey_hashtable_lookup",
        "SecOp": "wg_peer_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->wg_peer_get_maybe_zero->wg_pubkey_hashtable_lookup",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pvr_free_list_lookup_id",
        "SecOp": "pvr_free_list_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->pvr_free_list_lookup_id",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_service_for_instance",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->find_service_for_instance",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rnbd_get_sess_dev",
        "SecOp": "rnbd_put_sess_dev",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->rnbd_get_sess_dev",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "drm_mode_get_tile_group",
        "SecOp": "drm_mode_put_tile_group",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->drm_mode_get_tile_group",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_service_by_handle",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->find_service_by_handle",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_gem_object_lookup",
        "SecOp": "i915_gem_object_put",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->i915_gem_object_get_rcu->i915_gem_object_lookup",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_get_label_rcu",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->aa_get_label_rcu",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_get_task_label",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->aa_get_label_rcu->aa_get_newest_label->aa_get_newest_cred_label->aa_get_task_label",
        "var_path": "arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "hl_get_compute_ctx",
        "SecOp": "hl_ctx_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->hl_ctx_get_unless_zero->hl_get_compute_ctx",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rdma_restrack_get_byid",
        "SecOp": "rdma_restrack_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->rdma_restrack_get->rdma_restrack_get_byid",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nvme_fc_attach_to_suspended_rport",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->nvme_fc_rport_get->nvme_fc_attach_to_suspended_rport",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "blkdev_get_no_open",
        "SecOp": "blkdev_put_no_open",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->blkdev_get_no_open",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "capiminor_get",
        "SecOp": "capiminor_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->tty_port_get->capiminor_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "sdio_uart_port_get",
        "SecOp": "sdio_uart_port_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->tty_port_get->sdio_uart_port_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "vgic_get_irq",
        "SecOp": "vgic_put_irq",
        "hasUsage": true,
        "usageCount": 45,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->vgic_try_get_irq_kref->vgic_get_lpi->vgic_get_irq",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nvme_find_ns_head",
        "SecOp": "nvme_put_ns_head",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->nvme_tryget_ns_head->nvme_find_ns_head",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "drm_dp_mst_topology_get_port_validated",
        "SecOp": "drm_dp_mst_topology_put_port",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->drm_dp_mst_topology_try_get_port->drm_dp_mst_topology_get_port_validated",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "hfi1_rcd_get_by_index",
        "SecOp": "hfi1_rcd_put",
        "hasUsage": true,
        "usageCount": 18,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->hfi1_rcd_get->hfi1_rcd_get_by_index",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "hfi1_rcd_get_by_index_safe",
        "SecOp": "hfi1_rcd_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->hfi1_rcd_get->hfi1_rcd_get_by_index->hfi1_rcd_get_by_index_safe",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "drm_dp_mst_topology_get_mstb_validated",
        "SecOp": "drm_dp_mst_topology_put_mstb",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->drm_dp_mst_topology_try_get_mstb->drm_dp_mst_topology_get_mstb_validated",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "drm_dp_get_mst_branch_device_by_guid",
        "SecOp": "drm_dp_mst_topology_put_mstb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->drm_dp_mst_topology_try_get_mstb->drm_dp_get_mst_branch_device_by_guid",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "drm_dp_get_mst_branch_device",
        "SecOp": "drm_dp_mst_topology_put_mstb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->drm_dp_mst_topology_try_get_mstb->drm_dp_get_mst_branch_device",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "labelset_next_stale",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->__aa_get_label->labelset_next_stale",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nvme_fc_attach_to_unreg_lport",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->nvme_fc_lport_get->nvme_fc_attach_to_unreg_lport",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_find_child",
        "SecOp": "aa_put_profile",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->aa_get_profile_not0->aa_find_child",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ib_device_get_by_index",
        "SecOp": "ib_device_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->ib_device_try_get->ib_device_get_by_index",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "nfs4_state_find_open_context",
        "SecOp": "put_nfs_open_context",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->get_nfs_open_context->nfs4_state_find_open_context_mode->nfs4_state_find_open_context",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ip_vs_ct_in_get",
        "SecOp": "ip_vs_conn_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "refcount_inc_not_zero->__ip_vs_conn_get->ip_vs_ct_in_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "ip_vs_conn_in_get",
        "SecOp": "ip_vs_conn_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "refcount_inc_not_zero->__ip_vs_conn_get->__ip_vs_conn_in_get->ip_vs_conn_in_get",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "do_filp_open",
        "SecOp": "fput",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->lookup->lookup_open->open_last_lookups->path_openat->do_filp_open",
        "var_path": "arg->arg->retval->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "crypto_spawn_aead",
        "SecOp": "crypto_free_aead",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->crypto_alg_get->crypto_mod_get->crypto_spawn_alg->crypto_spawn_tfm2->crypto_spawn_aead",
        "var_path": "arg->arg->retval->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "crypto_spawn_skcipher",
        "SecOp": "crypto_free_skcipher",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->crypto_alg_get->crypto_mod_get->crypto_spawn_alg->crypto_spawn_tfm2->crypto_spawn_skcipher",
        "var_path": "arg->arg->retval->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "crypto_spawn_ahash",
        "SecOp": "crypto_free_ahash",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->crypto_alg_get->crypto_mod_get->crypto_spawn_alg->crypto_spawn_tfm2->crypto_spawn_ahash",
        "var_path": "arg->arg->retval->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "thread__main_thread",
        "SecOp": "thread__put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->thread__get->threads__find->__machine__findnew_thread->machine__find_thread->thread__main_thread",
        "var_path": "arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "machine__idle_thread",
        "SecOp": "thread__put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->thread__get->threads__find->__machine__findnew_thread->machine__findnew_thread->machine__idle_thread",
        "var_path": "arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "map__findnew_thread",
        "SecOp": "thread__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->thread__get->threads__find->__machine__findnew_thread->machine__findnew_thread->map__findnew_thread",
        "var_path": "arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "machine__findnew_guest_code",
        "SecOp": "thread__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "refcount_inc_not_zero->refcount_inc->thread__get->threads__find->__machine__findnew_thread->machine__findnew_thread->findnew_guest_code->machine__findnew_guest_code",
        "var_path": "arg->arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "perf_session__findnew",
        "SecOp": "thread__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->thread__get->threads__find->__machine__findnew_thread->machine__findnew_thread->perf_session__findnew",
        "var_path": "arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "sample__resolve_mem",
        "SecOp": "mem_info__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->thread__get->thread__find_map->thread__find_symbol->ip__resolve_data->sample__resolve_mem",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "i915_request_create",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 19,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__i915_request_create->i915_request_create",
        "var_path": "arg->arg->arg->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "intel_engine_create_kernel_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 7,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__i915_request_create->i915_request_create->intel_engine_create_kernel_request",
        "var_path": "arg->arg->arg->retval->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "empty_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__i915_request_create->i915_request_create->empty_request",
        "var_path": "arg->arg->arg->retval->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "usb_ep_alloc_request",
        "SecOp": "usb_ep_free_request",
        "hasUsage": true,
        "usageCount": 23,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__i915_request_create->i915_request_create->alloc_request->usb_ep_alloc_request",
        "var_path": "arg->arg->arg->retval->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "gs_alloc_req",
        "SecOp": "gs_free_req",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__i915_request_create->i915_request_create->alloc_request->usb_ep_alloc_request->gs_alloc_req",
        "var_path": "arg->arg->arg->retval->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "printer_req_alloc",
        "SecOp": "printer_req_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__i915_request_create->i915_request_create->alloc_request->usb_ep_alloc_request->printer_req_alloc",
        "var_path": "arg->arg->arg->retval->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "intel_context_create_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 19,
        "depth": 7,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__i915_request_create->i915_request_create->intel_context_create_request",
        "var_path": "arg->arg->arg->retval->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "hang_create_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 9,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__i915_request_create->i915_request_create->intel_context_create_request->igt_request_alloc->hang_create_request",
        "var_path": "arg->arg->arg->retval->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "mock_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__i915_request_create->i915_request_create->intel_context_create_request->mock_request",
        "var_path": "arg->arg->arg->retval->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "igt_spinner_create_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__i915_request_create->i915_request_create->intel_context_create_request->igt_spinner_create_request",
        "var_path": "arg->arg->arg->retval->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "spinner_create_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 9,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dma_fence_get->i915_request_get->__i915_request_create->i915_request_create->intel_context_create_request->igt_spinner_create_request->spinner_create_request",
        "var_path": "arg->arg->arg->retval->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "fwnode_phy_find_device",
        "SecOp": "phy_device_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->get_device->bus_find_device->bus_find_device_by_fwnode->fwnode_mdio_find_device->fwnode_phy_find_device",
        "var_path": "arg->arg->arg->retval->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "hci_dev_get",
        "SecOp": "hci_dev_put",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->get_device->hci_dev_hold->hci_dev_get",
        "var_path": "arg->arg->arg->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "hci_get_route",
        "SecOp": "hci_dev_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->get_device->hci_dev_hold->hci_get_route",
        "var_path": "arg->arg->arg->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "omap_dss_find_device",
        "SecOp": "omap_dss_put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->get_device->omap_dss_get_device->omap_dss_get_next_device->omap_dss_find_device",
        "var_path": "arg->arg->arg->retval->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "class_to_subsys",
        "SecOp": "subsys_put",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->kset_get->subsys_get->class_to_subsys",
        "var_path": "arg->arg->arg->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "bus_to_subsys",
        "SecOp": "subsys_put",
        "hasUsage": true,
        "usageCount": 25,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->kset_get->subsys_get->bus_to_subsys",
        "var_path": "arg->arg->arg->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_alloc_null",
        "SecOp": "aa_free_profile",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->aa_get_label->aa_alloc_proxy->aa_alloc_profile->aa_alloc_null",
        "var_path": "arg->arg->arg->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "fun_rxq_create_sw",
        "SecOp": "fun_rxq_free_sw",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->cache_get->funeth_alloc_page->fun_rxq_alloc_bufs->fun_rxq_create_sw",
        "var_path": "arg->arg->arg->retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_pm_opp_get_opp_table",
        "SecOp": "dev_pm_opp_put_opp_table",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->dev_pm_opp_get_opp_table",
        "var_path": "arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_pm_opp_find_freq_exact",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->_find_key->_find_key_exact->dev_pm_opp_find_freq_exact",
        "var_path": "arg->arg->arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_pm_opp_find_level_exact",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->_find_key->_find_key_exact->dev_pm_opp_find_level_exact",
        "var_path": "arg->arg->arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_pm_opp_find_freq_floor_indexed",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->_find_key->_find_key_floor->dev_pm_opp_find_freq_floor_indexed",
        "var_path": "arg->arg->arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "devfreq_recommended_opp",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 9,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->_find_key->_find_key_floor->dev_pm_opp_find_freq_floor_indexed->devfreq_recommended_opp",
        "var_path": "arg->arg->arg->arg->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_pm_opp_find_freq_floor",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->_find_key->_find_key_floor->dev_pm_opp_find_freq_floor",
        "var_path": "arg->arg->arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_pm_opp_find_bw_floor",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->_find_key->_find_key_floor->dev_pm_opp_find_bw_floor",
        "var_path": "arg->arg->arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "_find_key_ceil",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->_find_key->_find_key_ceil",
        "var_path": "arg->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_pm_opp_find_level_ceil",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->_find_key->_find_key_ceil->dev_pm_opp_find_level_ceil",
        "var_path": "arg->arg->arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_pm_opp_find_freq_ceil",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 24,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->_find_key->_find_key_ceil->dev_pm_opp_find_freq_ceil",
        "var_path": "arg->arg->arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_pm_opp_find_bw_ceil",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->_find_key->_find_key_ceil->dev_pm_opp_find_bw_ceil",
        "var_path": "arg->arg->arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dev_pm_opp_find_freq_ceil_indexed",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->_find_key->_find_key_ceil->dev_pm_opp_find_freq_ceil_indexed",
        "var_path": "arg->arg->arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "_find_freq_ceil",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dev_pm_opp_get->_opp_table_find_key->_opp_table_find_key_ceil->_find_freq_ceil",
        "var_path": "arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dlm_lookup_lockres",
        "SecOp": "dlm_lockres_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->dlm_lockres_get->__dlm_lookup_lockres_full->__dlm_lookup_lockres->dlm_lookup_lockres",
        "var_path": "arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "j1939_xtp_rx_rts_session_new",
        "SecOp": "j1939_session_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->j1939_session_get->j1939_session_get_by_addr_locked->j1939_session_activate->j1939_xtp_rx_rts_session_new",
        "var_path": "arg->arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "dss_of_port_get_parent_device",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get->of_get_parent->dss_of_port_get_parent_device",
        "var_path": "arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "of_find_node_by_path",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 183,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get->of_find_node_opts_by_path->of_find_node_by_path",
        "var_path": "arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "pseries_of_derive_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get->of_find_node_opts_by_path->of_find_node_by_path->of_find_node_opts_by_path->of_find_node_by_path->pseries_of_derive_parent",
        "var_path": "arg->arg->arg->arg->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "find_pe_total_msi",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->refcount_inc->kref_get->kobject_get->of_node_get->__find_pe_total_msi->find_pe_total_msi",
        "var_path": "arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "exp_get_by_name",
        "SecOp": "exp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->cache_get_rcu->sunrpc_cache_find_rcu->sunrpc_cache_lookup_rcu->svc_export_lookup->exp_get_by_name",
        "var_path": "arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "exp_find",
        "SecOp": "exp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->cache_get_rcu->sunrpc_cache_find_rcu->sunrpc_cache_lookup_rcu->svc_export_lookup->exp_get_by_name->exp_find",
        "var_path": "arg->arg->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rqst_exp_find",
        "SecOp": "exp_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 8,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->cache_get_rcu->sunrpc_cache_find_rcu->sunrpc_cache_lookup_rcu->svc_export_lookup->exp_get_by_name->exp_find->rqst_exp_find",
        "var_path": "arg->arg->retval->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rqst_find_fsidzero_export",
        "SecOp": "exp_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 9,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->cache_get_rcu->sunrpc_cache_find_rcu->sunrpc_cache_lookup_rcu->svc_export_lookup->exp_get_by_name->exp_find->rqst_exp_find->rqst_find_fsidzero_export",
        "var_path": "arg->arg->retval->retval->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "rqst_exp_get_by_name",
        "SecOp": "exp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->cache_get_rcu->sunrpc_cache_find_rcu->sunrpc_cache_lookup_rcu->svc_export_lookup->exp_get_by_name->rqst_exp_get_by_name",
        "var_path": "arg->arg->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "exp_parent",
        "SecOp": "exp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->cache_get_rcu->sunrpc_cache_find_rcu->sunrpc_cache_lookup_rcu->svc_export_lookup->exp_get_by_name->exp_parent",
        "var_path": "arg->arg->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "aa_label_parse",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "refcount_inc_not_zero->kref_get_unless_zero->__aa_get_label->__vec_find->vec_find->aa_label_strn_parse->aa_label_parse",
        "var_path": "arg->arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc_not_zero"
    },
    {
        "API": "btrfs_get_delayed_node",
        "SecOp": "refcount_dec",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "refcount_inc->btrfs_get_delayed_node",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "irdma_find_listener",
        "SecOp": "refcount_dec",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "refcount_inc->irdma_find_listener",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "gss_add_msg",
        "SecOp": "refcount_dec",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "refcount_inc->gss_add_msg",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "sample__resolve_bstack",
        "SecOp": "free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "refcount_inc->thread__get->thread__find_map->thread__find_symbol->thread__find_cpumode_addr_location->ip__resolve_ams->sample__resolve_bstack",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "svc_rdma_create_xprt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc->ref_tracker_alloc->__netns_tracker_alloc->netns_tracker_alloc->get_net_track->svc_xprt_init->svc_rdma_create_xprt",
        "var_path": "arg->arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "inet_csk_clone_lock",
        "SecOp": "sk_free_unlock_clone",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "refcount_inc->ref_tracker_alloc->__netns_tracker_alloc->netns_tracker_alloc->get_net_track->sk_clone_lock->inet_csk_clone_lock",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "tcp_create_openreq_child",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "refcount_inc->ref_tracker_alloc->__netns_tracker_alloc->netns_tracker_alloc->get_net_track->sk_clone_lock->inet_csk_clone_lock->tcp_create_openreq_child",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "pci_get_device_func",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "refcount_inc->kref_get->kobject_get->get_device->bus_find_device->pci_get_dev_by_id->pci_get_subsys->pci_get_device->pci_get_device_func",
        "var_path": "arg->arg->retval->arg->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "gpiod_get_index",
        "SecOp": "gpiod_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 7,
        "API_path": "refcount_inc->kref_get->kobject_get->get_device->gpio_device_get->gpiod_request->gpiod_find_and_request->gpiod_get_index",
        "var_path": "arg->arg->retval->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "gpiod_get_optional",
        "SecOp": "gpiod_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 9,
        "API_path": "refcount_inc->kref_get->kobject_get->get_device->gpio_device_get->gpiod_request->gpiod_find_and_request->gpiod_get_index->gpiod_get_index_optional->gpiod_get_optional",
        "var_path": "arg->arg->retval->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "lm363x_regulator_of_get_enable_gpio",
        "SecOp": "gpiod_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "refcount_inc->kref_get->kobject_get->get_device->gpio_device_get->gpiod_request->gpiod_find_and_request->gpiod_get_index->gpiod_get_index_optional->lm363x_regulator_of_get_enable_gpio",
        "var_path": "arg->arg->retval->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "gpiod_get",
        "SecOp": "gpiod_put",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 8,
        "API_path": "refcount_inc->kref_get->kobject_get->get_device->gpio_device_get->gpiod_request->gpiod_find_and_request->gpiod_get_index->gpiod_get",
        "var_path": "arg->arg->retval->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "fwnode_gpiod_get_index",
        "SecOp": "gpiod_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 7,
        "API_path": "refcount_inc->kref_get->kobject_get->get_device->gpio_device_get->gpiod_request->gpiod_find_and_request->fwnode_gpiod_get_index",
        "var_path": "arg->arg->retval->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "refcount_inc"
    },
    {
        "API": "gmin_cfg_get",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kstrdup->gmin_cfg_get_dmi_override->gmin_cfg_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "dfs_cache_canonical_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kstrdup->dfs_cache_canonical_path",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "dfs_get_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kstrdup->dfs_cache_canonical_path->dfs_get_path",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "acpi_get_subsystem_id",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->acpi_get_subsystem_id",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "ipaq_micro_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->ipaq_micro_str",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "kstrdup_quotable_file",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->kstrdup_quotable_file",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "safe_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->safe_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "scsi_dh_attached_handler_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->scsi_dh_attached_handler_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "kstrdup_and_replace",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "kstrdup->kstrdup_and_replace",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "clkctrl_get_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kstrdup->kstrdup_and_replace->clkctrl_get_name",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "rpc_sockaddr2uaddr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kstrdup->rpc_sockaddr2uaddr",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "usb_get_gadget_udc_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->usb_get_gadget_udc_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "extract_sharename",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kstrdup->extract_sharename",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "target_ts_to_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kstrdup->target_append_str->target_ts_to_str",
        "var_path": "retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "xt_request_find_target",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "try_module_get->xt_find_target->xt_request_find_target",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "iscsit_get_transport",
        "SecOp": "iscsit_put_transport",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->iscsit_get_transport",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "core_get_backend",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->core_get_backend",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "__ip_vs_pe_getbyname",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->__ip_vs_pe_getbyname",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "ip_vs_pe_getbyname",
        "SecOp": "ip_vs_pe_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->__ip_vs_pe_getbyname->ip_vs_pe_getbyname",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "rpcauth_get_authops",
        "SecOp": "rpcauth_put_authops",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "try_module_get->rpcauth_get_authops",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "iio_get_sw_device_type",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->iio_get_sw_device_type",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "find_ife_oplist",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "try_module_get->find_ife_oplist",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "get_mtd_chip_driver",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->get_mtd_chip_driver",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "i2c_get_adapter_by_fwnode",
        "SecOp": "i2c_put_adapter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->i2c_get_adapter_by_fwnode",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "of_get_i2c_adapter_by_node",
        "SecOp": "i2c_put_adapter",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "try_module_get->i2c_get_adapter_by_fwnode->of_get_i2c_adapter_by_node",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "mux_parent_adapter",
        "SecOp": "i2c_put_adapter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "try_module_get->i2c_get_adapter_by_fwnode->of_get_i2c_adapter_by_node->mux_parent_adapter",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "i2c_mux_pinctrl_parent_adapter",
        "SecOp": "i2c_put_adapter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "try_module_get->i2c_get_adapter_by_fwnode->of_get_i2c_adapter_by_node->i2c_mux_pinctrl_parent_adapter",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "spufs_calls_get",
        "SecOp": "spufs_calls_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "try_module_get->spufs_calls_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "ip_vs_scheduler_get",
        "SecOp": "ip_vs_scheduler_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "try_module_get->ip_vs_sched_getbyname->ip_vs_scheduler_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "stm_find_device",
        "SecOp": "stm_put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "try_module_get->stm_find_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "fpga_region_get",
        "SecOp": "fpga_region_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->fpga_region_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "nft_obj_type_get",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->nft_obj_type_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "nf_sockopt_find",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "try_module_get->nf_sockopt_find",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "dm_get_target_type",
        "SecOp": "dm_put_target_type",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "try_module_get->get_target_type->dm_get_target_type",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "alg_get_type",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->alg_get_type",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "lookup_ts_algo",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->lookup_ts_algo",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "xfrm_get_translator",
        "SecOp": "xfrm_put_translator",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "try_module_get->xfrm_get_translator",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "xt_find_table_lock",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 1,
        "API_path": "try_module_get->xt_find_table_lock",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "xt_request_find_table_lock",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "try_module_get->xt_find_table_lock->xt_request_find_table_lock",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "dm_get_path_selector",
        "SecOp": "dm_put_path_selector",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->get_path_selector->dm_get_path_selector",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "get_governor",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->get_governor",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "cpufreq_parse_governor",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->get_governor->cpufreq_parse_governor",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "tcf_em_lookup",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->tcf_em_lookup",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "find_pnfs_driver",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->find_pnfs_driver",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "pnfs_find_layoutdriver",
        "SecOp": "pnfs_put_layoutdriver",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->find_pnfs_driver->pnfs_find_layoutdriver",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "nft_expr_type_get",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->nft_expr_type_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "get_type",
        "SecOp": "put_type",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "try_module_get->_get_dirty_log_type->get_type",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "qdisc_lookup_ops",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->qdisc_lookup_ops",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "phonet_proto_get",
        "SecOp": "phonet_proto_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->phonet_proto_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "xt_find_match",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->xt_find_match",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "xt_request_find_match",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "try_module_get->xt_find_match->xt_find_match->xt_find_match->xt_find_match->xt_request_find_match",
        "var_path": "arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "get_xt_match",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "try_module_get->xt_find_match->xt_find_match->xt_find_match->xt_request_find_match->get_xt_match",
        "var_path": "arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "can_get_proto",
        "SecOp": "can_put_proto",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->can_get_proto",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "get_policy",
        "SecOp": "put_policy",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "try_module_get->__get_policy_once->get_policy_once->get_policy",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "usb_role_switch_get",
        "SecOp": "usb_role_switch_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "try_module_get->usb_role_switch_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "bpf_crypto_get_type",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->bpf_crypto_get_type",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "of_fpga_region_get_mgr",
        "SecOp": "fpga_mgr_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "try_module_get->__fpga_mgr_get->of_fpga_mgr_get->of_fpga_region_get_mgr",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "fpga_mgr_get",
        "SecOp": "fpga_mgr_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "try_module_get->__fpga_mgr_get->fpga_mgr_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "cxl_calls_get",
        "SecOp": "cxl_calls_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->cxl_calls_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "fpga_bridge_get",
        "SecOp": "fpga_bridge_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->__fpga_bridge_get->fpga_bridge_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "lookup_rules_ops",
        "SecOp": "rules_ops_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "try_module_get->lookup_rules_ops",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "iio_get_sw_trigger_type",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->iio_get_sw_trigger_type",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "team_mode_get",
        "SecOp": "team_mode_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->team_mode_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "dfl_fpga_port_ops_get",
        "SecOp": "dfl_fpga_port_ops_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->dfl_fpga_port_ops_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "__get_fs_type",
        "SecOp": "put_filesystem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->__get_fs_type",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "get_fs_type",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->__get_fs_type->get_fs_type",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "nft_flowtable_type_get",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->nft_flowtable_type_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "find_quota_format",
        "SecOp": "put_quota_format",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->find_quota_format",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "typec_retimer_get",
        "SecOp": "typec_retimer_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->fwnode_typec_retimer_get->typec_retimer_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "trace_get_event_file",
        "SecOp": "trace_put_event_file",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "try_module_get->trace_event_try_get_ref->trace_get_event_file",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "elevator_find_get",
        "SecOp": "elevator_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->elevator_tryget->elevator_find_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "elevator_get_default",
        "SecOp": "elevator_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "try_module_get->elevator_tryget->elevator_find_get->elevator_get_default",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    }
]