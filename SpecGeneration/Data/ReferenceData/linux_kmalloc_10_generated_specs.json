[
    {
        "API": "netxen_alloc_sw_resources",
        "SecOp": "netxen_free_sw_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->netxen_alloc_sw_resources",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "s3c64xx_get_slave_ctrldata",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->s3c64xx_get_slave_ctrldata",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cdev_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cdev_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ccu_pll_create_data",
        "SecOp": "ccu_pll_free_data",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ccu_pll_create_data",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_log_tree",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->alloc_log_tree",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "reiserfs_posix_acl_to_disk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->reiserfs_posix_acl_to_disk",
        "var_path": "retval->retval"
    },
    {
        "API": "acpi_lpat_get_conversion_table",
        "SecOp": "acpi_lpat_free_conversion_table",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acpi_lpat_get_conversion_table",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hwsim_alloc_edge",
        "SecOp": "hwsim_free_edge",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hwsim_alloc_edge",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ksmbd_init_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->ksmbd_init_sg",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fs3270_alloc_view",
        "SecOp": "fs3270_free_view",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fs3270_alloc_view",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "init_ipath",
        "SecOp": "free_ipath",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->init_ipath",
        "var_path": "retval->retval"
    },
    {
        "API": "vzalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "genwqe_dev_alloc",
        "SecOp": "genwqe_dev_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->genwqe_dev_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_indirect_packed",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_indirect_packed",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_arena",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_arena",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_etr_buf",
        "SecOp": "tmc_free_etr_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tmc_alloc_etr_buf->alloc_etr_buf",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "dm_ima_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dm_ima_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "octeon_alloc_temp_buffer",
        "SecOp": "octeon_free_temp_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->octeon_alloc_temp_buffer",
        "var_path": "retval->arg"
    },
    {
        "API": "get_decomp_stream",
        "SecOp": "put_decomp_stream",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->get_decomp_stream",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_and_copy_ftrace_hash",
        "SecOp": "free_ftrace_hash",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_ftrace_hash->alloc_and_copy_ftrace_hash",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "__mlx4_srq_alloc_icm",
        "SecOp": "__mlx4_srq_free_icm",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_srq_alloc_icm",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "snd_info_create_entry",
        "SecOp": "snd_info_free_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->snd_info_create_entry",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "amdgpu_get_xgmi_hive",
        "SecOp": "amdgpu_put_xgmi_hive",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->amdgpu_get_xgmi_hive",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "intel_crt_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->intel_crt_get_edid",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "clkgen_mux_get_parents",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->clkgen_mux_get_parents",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "mdiobus_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mdiobus_alloc_size->mdiobus_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "aa_get_buffer",
        "SecOp": "aa_put_buffer",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 1,
        "API_path": "kmalloc->aa_get_buffer",
        "var_path": "retval->retval"
    },
    {
        "API": "dma_fence_chain_alloc",
        "SecOp": "dma_fence_chain_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->dma_fence_chain_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "nixge_get_nvmem_address",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read->nixge_get_nvmem_address",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "optee_ffa_config_dyn_shm",
        "SecOp": "tee_shm_pool_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tee_shm_pool_alloc->optee_ffa_config_dyn_shm",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "init_rsttbl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_rsttbl",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "siano_media_device_register",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->siano_media_device_register",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "vas_window_alloc",
        "SecOp": "vas_window_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vas_window_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "capi_message2str",
        "SecOp": "cdebbuf_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->cdebbuf_alloc->capi_message2str",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ovl_alloc_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_alloc_entry",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "create_namespace_io",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->create_namespace_io",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "__of_prop_dup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__of_prop_dup",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "drm_get_edid_switcheroo",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->drm_get_edid_switcheroo",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "snd_pdacf_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->snd_pdacf_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sof_comp_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sof_comp_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xen_copy_pss_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->xen_copy_pss_data",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "pci_mmconfig_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_mmconfig_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mt7601u_usb_alloc_buf",
        "SecOp": "mt7601u_usb_free_buf",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->mt7601u_usb_alloc_buf",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "tomoyo_get_name",
        "SecOp": "tomoyo_put_name",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tomoyo_get_name",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "build_fu_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->build_fu_desc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "b43_bus_dev_bcma_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->b43_bus_dev_bcma_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "usnic_vnic_alloc_res_chunk",
        "SecOp": "usnic_vnic_free_res_chunk",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->usnic_vnic_alloc_res_chunk",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "led_get_default_pattern",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->led_get_default_pattern",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "intel_encoder_current_mode",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_encoder_current_mode",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_msg",
        "SecOp": "free_msg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->alloc_msg",
        "var_path": "retval->retval"
    },
    {
        "API": "cifs_writedata_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->cifs_writedata_direct_alloc->cifs_writedata_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "smb2_get_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->smb_strndup_from_utf16->smb2_get_name",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dln2_prep_buf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->dln2_prep_buf",
        "var_path": "retval->retval"
    },
    {
        "API": "acpi_processor_alloc_pdc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->acpi_processor_alloc_pdc",
        "var_path": "retval->retval"
    },
    {
        "API": "dcn303_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn303_vpg_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tg3_vpd_readblock",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->tg3_vpd_readblock",
        "var_path": "retval->retval"
    },
    {
        "API": "hns_roce_buf_alloc",
        "SecOp": "hns_roce_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hns_roce_buf_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bio_alloc_map_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->bio_alloc_map_data",
        "var_path": "retval->retval"
    },
    {
        "API": "tty3270_alloc_view",
        "SecOp": "tty3270_free_view",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tty3270_alloc_view",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "scsi_get_vpd_buf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->scsi_get_vpd_buf",
        "var_path": "retval->retval"
    },
    {
        "API": "ap_auth_make_challenge",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ap_auth_make_challenge",
        "var_path": "retval->retval"
    },
    {
        "API": "gnss_serial_allocate",
        "SecOp": "gnss_serial_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gnss_serial_allocate",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "get_sg_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "kmalloc->kmalloc_array->sg_kmalloc->get_next_sg->sg_alloc_append_table_from_pages->sg_alloc_table_from_pages_segment->sg_alloc_table_from_pages->get_sg_table",
        "var_path": "retval->retval->retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "bpf_prog_array_alloc",
        "SecOp": "bpf_prog_array_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_prog_array_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_bitset",
        "SecOp": "free_bitset",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->alloc_bitset",
        "var_path": "retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "video_device_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->video_device_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "pnfs_alloc_commit_array",
        "SecOp": "pnfs_free_commit_array",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->pnfs_alloc_commit_array",
        "var_path": "retval->retval"
    },
    {
        "API": "idal_buffer_alloc",
        "SecOp": "idal_buffer_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->idal_buffer_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "dmabuf_imp_alloc_storage",
        "SecOp": "dmabuf_imp_free_storage",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dmabuf_imp_alloc_storage",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "scx200_create_iface",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->scx200_create_iface",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "vme_slave_request",
        "SecOp": "vme_slave_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vme_slave_request",
        "var_path": "retval->retval"
    },
    {
        "API": "afs_vl_get_capabilities",
        "SecOp": "afs_put_call",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->afs_alloc_call->afs_alloc_flat_call->afs_vl_get_capabilities",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "nfs4_alloc_lock_state",
        "SecOp": "nfs4_free_lock_state",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_alloc_lock_state",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "lpfc_bsg_dma_page_alloc",
        "SecOp": "lpfc_bsg_dma_page_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->lpfc_bsg_dma_page_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "nfcsim_device_new",
        "SecOp": "nfcsim_device_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfcsim_device_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sdw_port_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sdw_port_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bin_to_hex_dup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bin_to_hex_dup",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ishtp_cl_allocate",
        "SecOp": "ishtp_cl_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->ishtp_cl_allocate",
        "var_path": "retval->retval"
    },
    {
        "API": "ctnetlink_alloc_filter",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ctnetlink_alloc_filter",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "stm32_mdma_alloc_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->stm32_mdma_alloc_desc",
        "var_path": "retval->retval->arg->retval"
    },
    {
        "API": "tifm_alloc_device",
        "SecOp": "tifm_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tifm_alloc_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_cmd_box",
        "SecOp": "free_cmd_box",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->alloc_cmd_box",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "exynos_drm_gem_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->exynos_drm_gem_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mock_ring",
        "SecOp": "mock_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mock_ring",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_link_table_buf",
        "SecOp": "free_link_table_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->hns_roce_buf_alloc->alloc_link_table_buf",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "mei_cl_enqueue_ctrl_wr_cb",
        "SecOp": "mei_io_cb_free",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mei_io_cb_init->mei_cl_alloc_cb->mei_cl_enqueue_ctrl_wr_cb",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "iwl_pcie_tx_alloc",
        "SecOp": "iwl_pcie_tx_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->iwl_pcie_tx_alloc",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "mlx5_alloc_bfreg",
        "SecOp": "mlx5_free_bfreg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->alloc_uars_page->alloc_bfreg->mlx5_alloc_bfreg",
        "var_path": "retval->retval->retval->retval->arg"
    },
    {
        "API": "hpda_alloc_ctlr_info",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hpda_alloc_ctlr_info",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rt2x00pci_alloc_reg",
        "SecOp": "rt2x00pci_free_reg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rt2x00pci_alloc_reg",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "allocate_partition",
        "SecOp": "free_partition",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->allocate_partition",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sky2_alloc_buffers",
        "SecOp": "sky2_free_buffers",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->sky2_alloc_buffers",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "convert_allocate_dvs_6axis_config",
        "SecOp": "ia_css_host_data_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->ia_css_host_data_allocate->convert_allocate_dvs_6axis_config",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlxsw_sp_fid_dummy_get",
        "SecOp": "mlxsw_sp_fid_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_fid_get->mlxsw_sp_fid_dummy_get",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "hpsa_alloc_sas_port",
        "SecOp": "hpsa_free_sas_port",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hpsa_alloc_sas_port",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ia_css_params_alloc_convert_sctbl",
        "SecOp": "ia_css_host_data_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->ia_css_host_data_allocate->ia_css_params_alloc_convert_sctbl",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "megasas_alloc_cmds",
        "SecOp": "megasas_free_cmds",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->megasas_create_frame_pool->megasas_alloc_cmds",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "msm_parse_post_deps",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->msm_parse_post_deps",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "airspy_alloc_stream_bufs",
        "SecOp": "airspy_free_stream_bufs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->airspy_alloc_stream_bufs",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "xfs_alloc_buftarg",
        "SecOp": "xfs_free_buftarg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmem_alloc->kmem_zalloc->xfs_alloc_buftarg",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "mask_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mask_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "mlxfw_mfa2_file_component_get",
        "SecOp": "mlxfw_mfa2_file_component_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->mlxfw_mfa2_file_component_get",
        "var_path": "retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "jffs2_write_dirent",
        "SecOp": "jffs2_free_full_dirent",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->jffs2_alloc_full_dirent->jffs2_write_dirent",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bnxt_alloc_mem",
        "SecOp": "bnxt_free_mem",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->bnxt_alloc_ring->bnxt_alloc_tx_rings->bnxt_alloc_mem",
        "var_path": "retval->retval->retval->retval->retval->arg->arg->arg"
    },
    {
        "API": "v4l2_subdev_alloc_state",
        "SecOp": "v4l2_subdev_free_state",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->v4l2_subdev_alloc_state",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ffs_data_new",
        "SecOp": "ffs_data_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ffs_data_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "snd_usb_get_audioformat_uac3",
        "SecOp": "audioformat_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->audio_format_alloc_init->snd_usb_get_audioformat_uac3",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "brcmf_alloc_internal_escan_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->brcmf_alloc_internal_escan_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx4_mpt_alloc_icm",
        "SecOp": "mlx4_mpt_free_icm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_mpt_alloc_icm->mlx4_mpt_alloc_icm",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "__renesas_usb3_ep_alloc_request",
        "SecOp": "__renesas_usb3_ep_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__renesas_usb3_ep_alloc_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_msg",
        "SecOp": "free_msg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->alloc_cmd_box->mlx5_alloc_cmd_msg->alloc_msg",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "alloc_lvn",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_lvn",
        "var_path": "retval->retval"
    },
    {
        "API": "expr_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->expr_str",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xz_dec_init",
        "SecOp": "xz_dec_end",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->xz_dec_init",
        "var_path": "retval->retval"
    },
    {
        "API": "get_cg_rpool_locked",
        "SecOp": "free_cg_rpool_locked",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_cg_rpool_locked",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "udma_prep_dma_cyclic_pkt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->udma_prep_dma_cyclic_pkt",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_workqueue_attrs",
        "SecOp": "free_workqueue_attrs",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_workqueue_attrs",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "brcmf_pcie_prepare_fw_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->brcmf_fw_alloc_request->brcmf_pcie_prepare_fw_request",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "ath11k_core_alloc",
        "SecOp": "ath11k_core_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ath11k_core_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "md_bitmap_create",
        "SecOp": "md_bitmap_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->md_bitmap_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "platform_msi_domain_alloc_irqs",
        "SecOp": "platform_msi_domain_free_irqs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->platform_msi_alloc_priv_data->platform_msi_domain_alloc_irqs",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "alloc_buffer",
        "SecOp": "free_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->alloc_buffer_data->alloc_buffer",
        "var_path": "retval->retval->arg->retval"
    },
    {
        "API": "ssd1307fb_alloc_array",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ssd1307fb_alloc_array",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tipc_publ_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tipc_publ_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfs4_alloc_open_state",
        "SecOp": "nfs4_free_open_state",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_alloc_open_state",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ipr_alloc_ucode_buffer",
        "SecOp": "ipr_free_ucode_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ipr_alloc_ucode_buffer",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "r1bio_pool_alloc",
        "SecOp": "rbio_pool_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->r1bio_pool_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "flow_offload_alloc",
        "SecOp": "flow_offload_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->flow_offload_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_flow_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_flow_table",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5_sf_alloc",
        "SecOp": "mlx5_sf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_sf_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bcm47xx_nvram_get_contents",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vmalloc->bcm47xx_nvram_get_contents",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "nfp_cpp_mutex_alloc",
        "SecOp": "nfp_cpp_mutex_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_cpp_mutex_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hci_alloc_xfer",
        "SecOp": "hci_free_xfer",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hci_alloc_xfer",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5_esw_dl_port_alloc",
        "SecOp": "mlx5_esw_dl_port_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_esw_dl_port_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "make_slot_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->make_slot_name",
        "var_path": "retval->retval"
    },
    {
        "API": "bpf_test_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_test_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "squashfs_page_actor_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->squashfs_page_actor_init",
        "var_path": "retval->retval"
    },
    {
        "API": "nfp_cpp_area_alloc",
        "SecOp": "nfp_cpp_area_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nfp_cpp_area_alloc_with_name->nfp_cpp_area_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "memstick_alloc_card",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->memstick_alloc_card",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sky2_init_netdev",
        "SecOp": "free_netdev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read->of_get_mac_addr_nvmem->of_get_mac_address->of_get_ethdev_address->sky2_init_netdev",
        "var_path": "retval->retval->retval->retval->arg->arg->retval"
    },
    {
        "API": "net_dm_hw_metadata_copy",
        "SecOp": "net_dm_hw_metadata_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->net_dm_hw_metadata_copy",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_fs_devices",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_fs_devices",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fsverity_prepare_hash_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->fsverity_prepare_hash_state",
        "var_path": "retval->retval"
    },
    {
        "API": "cfctrl_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cfctrl_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "zcrypt_queue_alloc",
        "SecOp": "zcrypt_queue_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->zcrypt_queue_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_watch_adapter",
        "SecOp": "free_watch_adapter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_watch_adapter",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfsd4_cltrack_client_has_session",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->nfsd4_cltrack_client_has_session",
        "var_path": "retval->retval"
    },
    {
        "API": "btrtl_initialize",
        "SecOp": "btrtl_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrtl_initialize",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qeth_get_adapter_cmd",
        "SecOp": "qeth_put_cmd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->qeth_alloc_cmd->qeth_ipa_alloc_cmd->qeth_get_adapter_cmd",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "optee_config_shm_memremap",
        "SecOp": "tee_shm_pool_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tee_shm_pool_alloc->optee_config_shm_memremap",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "usnic_fwd_dev_alloc",
        "SecOp": "usnic_fwd_dev_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->usnic_fwd_dev_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ib_alloc_cq_any",
        "SecOp": "ib_free_cq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->create_cq->__ib_alloc_cq->__ib_alloc_cq_any->ib_alloc_cq_any",
        "var_path": "retval->retval->arg->retval->retval->retval"
    },
    {
        "API": "audit_to_entry_common",
        "SecOp": "audit_free_rule",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->audit_init_entry->audit_to_entry_common",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "alloc_priority_group",
        "SecOp": "free_priority_group",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_priority_group",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_choose_arg_map",
        "SecOp": "free_choose_arg_map",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_choose_arg_map",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fuse_io_alloc",
        "SecOp": "fuse_io_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_io_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "memstick_alloc_host",
        "SecOp": "memstick_free_host",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->memstick_alloc_host",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "b43legacy_generate_probe_resp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->b43legacy_generate_probe_resp",
        "var_path": "retval->retval"
    },
    {
        "API": "ddw_property_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ddw_property_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__register_sysctl_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__register_sysctl_table",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rpcrdma_regbuf_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rpcrdma_regbuf_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "linear_conf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->linear_conf",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "enetc_alloc_rxbdr",
        "SecOp": "enetc_free_rxbdr",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->enetc_alloc_rxbdr",
        "var_path": "retval->retval->retval->retval->retval->arg"
    },
    {
        "API": "rxe_create_mmap_info",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rxe_create_mmap_info",
        "var_path": "retval->retval"
    },
    {
        "API": "qedr_alloc_resources",
        "SecOp": "qedr_free_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->qedr_alloc_resources",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "gmap_alloc",
        "SecOp": "gmap_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gmap_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dcn31_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn31_vpg_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "drm_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 27,
        "depth": 3,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "qla_edb_node_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla_edb_node_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "snd_usb_find_power_domain",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->snd_usb_find_power_domain",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rpc_alloc_iostats",
        "SecOp": "rpc_free_iostats",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->rpc_alloc_iostats",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "trace_alloc_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->trace_alloc_entry",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "TB_TEST_DMA_TUNNEL2",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_dma->TB_TEST_DMA_TUNNEL2",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "ipmi_alloc_smi_msg",
        "SecOp": "ipmi_free_smi_msg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ipmi_alloc_smi_msg",
        "var_path": "retval->retval"
    },
    {
        "API": "bond_verify_device_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bond_verify_device_path",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "urfile_alloc",
        "SecOp": "urfile_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->urfile_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "efa_vmalloc_buf_to_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->efa_vmalloc_buf_to_sg",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qp_host_alloc_queue",
        "SecOp": "qp_host_free_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qp_host_alloc_queue",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "raw3270_request_alloc",
        "SecOp": "raw3270_request_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->raw3270_request_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xhci_alloc_virt_device",
        "SecOp": "xhci_free_virt_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_alloc_container_ctx->xhci_alloc_virt_device",
        "var_path": "retval->retval->arg->arg->retval->arg"
    },
    {
        "API": "nfsd4_cltrack_legacy_recdir",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfsd4_cltrack_legacy_recdir",
        "var_path": "retval->retval"
    },
    {
        "API": "vpfe_initialize",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vpfe_initialize",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dcn30_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn30_vpg_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tegra_xudc_alloc_eps",
        "SecOp": "tegra_xudc_free_eps",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->tegra_xudc_alloc_ep->tegra_xudc_alloc_eps",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "cow_malloc",
        "SecOp": "cow_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->uml_kmalloc->cow_malloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hisi_acc_create_sgl_pool",
        "SecOp": "hisi_acc_free_sgl_pool",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hisi_acc_create_sgl_pool",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ccw_device_get_util_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ccw_device_get_util_str",
        "var_path": "retval->retval"
    },
    {
        "API": "setup_kdump_cmdline",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->setup_kdump_cmdline",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfc_mei_phy_alloc",
        "SecOp": "nfc_mei_phy_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfc_mei_phy_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "raid_set_alloc",
        "SecOp": "raid_set_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->raid_set_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "reada_find_extent",
        "SecOp": "reada_extent_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->reada_find_extent",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "of_at91_clk_master_get_characteristics",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->of_at91_clk_master_get_characteristics",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_mad_private",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_mad_private",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5e_alloc_cq",
        "SecOp": "mlx5e_free_cq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx5_frag_buf_alloc_node->mlx5_cqwq_create->mlx5e_alloc_cq_common->mlx5e_alloc_cq",
        "var_path": "retval->retval->retval->arg->arg->arg->arg"
    },
    {
        "API": "vme_master_request",
        "SecOp": "vme_master_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vme_master_request",
        "var_path": "retval->retval"
    },
    {
        "API": "hso_create_device",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hso_create_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ntfs_create_reparse_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ntfs_create_reparse_buffer",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_test_dev_kmod",
        "SecOp": "free_test_dev_kmod",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->alloc_test_dev_kmod",
        "var_path": "retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "btrfs_alloc_dummy_fs_info",
        "SecOp": "btrfs_free_dummy_fs_info",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_dummy_fs_info",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mtk_alloc_clk_data",
        "SecOp": "mtk_free_clk_data",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mtk_alloc_clk_data",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "synaptics_i2c_touch_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->synaptics_i2c_touch_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "flow_resources_alloc",
        "SecOp": "ib_uverbs_flow_resources_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->flow_resources_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_bprm",
        "SecOp": "free_bprm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_bprm",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "capture_engine",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->intel_engine_coredump_alloc->capture_engine",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "btrfs_alloc_delalloc_work",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->btrfs_alloc_delalloc_work",
        "var_path": "retval->retval"
    },
    {
        "API": "generate_dma_contract",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->generate_dma_contract",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "setup_initial_poll",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->uml_kmalloc->setup_initial_poll",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dcn301_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn301_afmt_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5_fpga_ipsec_cmd_exec",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_fpga_ipsec_cmd_exec",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "next_free_urb",
        "SecOp": "free_urb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->usb_alloc_urb->next_free_urb",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "kcalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1151,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->kcalloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ldc_alloc",
        "SecOp": "ldc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ldc_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlxsw_sp_rif_mac_profile_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_rif_mac_profile_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "acpi_alloc_fwnode_static",
        "SecOp": "acpi_free_fwnode_static",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acpi_alloc_fwnode_static",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_qp_db",
        "SecOp": "free_qp_db",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->hns_roce_alloc_db_pgdir->hns_roce_alloc_db->alloc_kernel_qp_db->alloc_qp_db",
        "var_path": "retval->retval->retval->arg->arg->arg"
    },
    {
        "API": "ddcb_requ_alloc",
        "SecOp": "ddcb_requ_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ddcb_requ_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "damon_new_target",
        "SecOp": "damon_free_target",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "kmalloc->damon_new_target",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_conn_from_crses",
        "SecOp": "free_conn",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->alloc_conn->alloc_conn_from_crses",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "property_entries_dup",
        "SecOp": "property_entries_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->property_entry_copy_data->property_entries_dup",
        "var_path": "retval->arg->retval"
    },
    {
        "API": "umem_frag_buf_alloc",
        "SecOp": "umem_frag_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx5_frag_buf_alloc_node->umem_frag_buf_alloc",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "vxlan_fdb_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vxlan_fdb_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_pages_exact",
        "SecOp": "free_pages_exact",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 1,
        "API_path": "kmalloc->alloc_pages_exact",
        "var_path": "retval->retval"
    },
    {
        "API": "fpga_mgr_create",
        "SecOp": "fpga_mgr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fpga_mgr_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qla2x00_alloc_fcport",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla2x00_alloc_fcport",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dcn301_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn301_vpg_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfs4_pathname_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->nfs4_pathname_string",
        "var_path": "retval->retval"
    },
    {
        "API": "wq_entry_get",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->wq_entry_get",
        "var_path": "retval->retval"
    },
    {
        "API": "raw3215_alloc_info",
        "SecOp": "raw3215_free_info",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->raw3215_alloc_info",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ovl_get_redirect_xattr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_get_redirect_xattr",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfs_alloc_fattr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->nfs_alloc_fattr",
        "var_path": "retval->retval"
    },
    {
        "API": "load_elf_phdrs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->load_elf_phdrs",
        "var_path": "retval->retval"
    },
    {
        "API": "afs_alloc_read",
        "SecOp": "afs_put_read",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->afs_alloc_read",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "w1_alloc_dev",
        "SecOp": "w1_free_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->w1_alloc_dev",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fuse_alloc_forget",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_alloc_forget",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nouveau_bo_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nouveau_bo_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ocfs2_acl_to_xattr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ocfs2_acl_to_xattr",
        "var_path": "retval->retval"
    },
    {
        "API": "ptn3460_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ptn3460_get_edid",
        "var_path": "retval->retval"
    },
    {
        "API": "vsp1_video_pipeline_get",
        "SecOp": "vsp1_video_pipeline_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vsp1_video_pipeline_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "of_at91_clk_pll_get_characteristics",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->of_at91_clk_pll_get_characteristics",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "iopf_queue_alloc",
        "SecOp": "iopf_queue_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_workqueue->iopf_queue_alloc",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "nfs_alloc_fattr_with_label",
        "SecOp": "nfs_free_fattr",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "kmalloc->nfs_alloc_fattr->nfs_alloc_fattr_with_label",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ghes_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ghes_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dmar_alloc_dev_scope",
        "SecOp": "dmar_free_dev_scope",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->dmar_alloc_dev_scope",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "pqi_alloc_sas_node",
        "SecOp": "pqi_free_sas_node",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pqi_alloc_sas_node",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfs4_pnfs_ds_addr_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_pnfs_ds_addr_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "pci_alloc_bus",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_alloc_bus",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mthca_alloc_icm",
        "SecOp": "mthca_free_icm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->mthca_alloc_icm",
        "var_path": "retval->retval"
    },
    {
        "API": "dup_and_fixup_symbol_prop",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dup_and_fixup_symbol_prop",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "drm_do_get_edid_base_block",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->drm_do_get_edid_base_block",
        "var_path": "retval->retval"
    },
    {
        "API": "pmcraid_alloc_sglist",
        "SecOp": "pmcraid_free_sglist",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pmcraid_alloc_sglist",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mousevsc_alloc_device",
        "SecOp": "mousevsc_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mousevsc_alloc_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ovl_get_redirect",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ovl_get_redirect",
        "var_path": "retval->retval"
    },
    {
        "API": "psbfb_alloc",
        "SecOp": "psb_gtt_free_range",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->psb_gtt_alloc_range->psbfb_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "irda_usb_find_class_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->irda_usb_find_class_desc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cdnsp_ring_alloc",
        "SecOp": "cdnsp_ring_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->cdnsp_segment_alloc->cdnsp_alloc_segments_for_ring->cdnsp_ring_alloc",
        "var_path": "retval->retval->arg->arg->arg->arg->retval"
    },
    {
        "API": "vlan_vid_info_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vlan_vid_info_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "run_alloc",
        "SecOp": "run_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->run_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fusb300_alloc_request",
        "SecOp": "fusb300_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fusb300_alloc_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ibmveth_alloc_buffer_pool",
        "SecOp": "ibmveth_free_buffer_pool",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->ibmveth_alloc_buffer_pool",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "init_peer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_peer",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "brcmf_fw_alloc_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->brcmf_fw_alloc_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5_chains_get_chain_mapping",
        "SecOp": "mlx5_chains_put_chain_mapping",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mapping_add->mlx5_chains_get_chain_mapping",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "vmalloc_to_sgt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vmalloc_to_sgt",
        "var_path": "retval->retval"
    },
    {
        "API": "crypto_larval_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->crypto_larval_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cifs_get_tcp_session",
        "SecOp": "cifs_put_tcp_session",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->allocate_mr_list->_smbd_get_connection->smbd_get_connection->cifs_get_tcp_session",
        "var_path": "retval->retval->retval->arg->retval->retval->arg"
    },
    {
        "API": "gssp_alloc_receive_pages",
        "SecOp": "gssp_free_receive_pages",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->gssp_alloc_receive_pages",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "iwl_parse_eeprom_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iwl_parse_eeprom_data",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mpi_get_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->mpi_get_buffer",
        "var_path": "retval->retval"
    },
    {
        "API": "cdnsp_ring_alloc",
        "SecOp": "cdnsp_ring_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->cdnsp_segment_alloc->cdnsp_alloc_segments_for_ring->cdnsp_ring_alloc",
        "var_path": "retval->retval->arg->arg->arg->arg->arg"
    },
    {
        "API": "xilinx_dpdma_chan_alloc_tx_desc",
        "SecOp": "xilinx_dpdma_chan_free_tx_desc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xilinx_dpdma_chan_alloc_tx_desc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mcb_alloc_dev",
        "SecOp": "mcb_free_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mcb_alloc_dev",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "convert_chmap_v3",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->convert_chmap_v3",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__nfp_eth_read_ports",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__nfp_eth_read_ports",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "convert_allocate_fpntbl",
        "SecOp": "ia_css_host_data_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->ia_css_host_data_allocate->convert_allocate_fpntbl",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sas_phy_alloc",
        "SecOp": "sas_phy_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sas_phy_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_tree_mod_elem",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_tree_mod_elem",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tomoyo_print_bprm",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tomoyo_print_bprm",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "vbox_create_plane",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vbox_create_plane",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "megasas_compat_iocpacket_get_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->megasas_compat_iocpacket_get_user",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "l2tp_session_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->l2tp_session_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "acpi_ec_alloc",
        "SecOp": "acpi_ec_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acpi_ec_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "create_i2c",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_i2c",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "aa_load_ent_alloc",
        "SecOp": "aa_load_ent_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->aa_load_ent_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx4_alloc_icm",
        "SecOp": "mlx4_free_icm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->mlx4_alloc_icm",
        "var_path": "retval->retval"
    },
    {
        "API": "mlx4_table_get",
        "SecOp": "mlx4_table_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "bpf_prog_alloc_no_stats",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->__vmalloc->bpf_prog_alloc_no_stats",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dcn302_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn302_vpg_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "lwtunnel_state_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lwtunnel_state_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hpfs_get_ea",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->get_indirect_ea->hpfs_get_ea",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "zcrypt_card_alloc",
        "SecOp": "zcrypt_card_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->zcrypt_card_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sctp_unpack_cookie",
        "SecOp": "sctp_association_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->sctp_association_new->sctp_unpack_cookie",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "ahash_request_alloc",
        "SecOp": "ahash_request_free",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 1,
        "API_path": "kmalloc->ahash_request_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_cache_mr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_cache_mr",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "smcd_alloc_dev",
        "SecOp": "smcd_free_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->smcd_alloc_dev",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "get_workspace",
        "SecOp": "put_workspace",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->lzo_alloc_workspace->alloc_workspace->get_workspace",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "alloc_tc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_tc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ssip_alloc_data",
        "SecOp": "hsi_free_msg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->hsi_alloc_msg->ssip_alloc_data",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "ocrdma_init_emb_mqe",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 26,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocrdma_init_emb_mqe",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "lcs_alloc_reply",
        "SecOp": "lcs_put_reply",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lcs_alloc_reply",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "software_node_alloc",
        "SecOp": "software_node_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->property_entry_copy_data->property_entries_dup->software_node_alloc",
        "var_path": "retval->arg->retval->retval"
    },
    {
        "API": "pcmcia_make_resource",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pcmcia_make_resource",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "gpiochip_alloc_valid_mask",
        "SecOp": "gpiochip_free_valid_mask",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->gpiochip_allocate_mask->gpiochip_alloc_valid_mask",
        "var_path": "retval->retval->retval->retval->arg"
    },
    {
        "API": "create_new_subsystem",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->create_new_subsystem",
        "var_path": "retval->retval"
    },
    {
        "API": "dmar_alloc_pci_notify_info",
        "SecOp": "dmar_free_pci_notify_info",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dmar_alloc_pci_notify_info",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "core_dev_init_initiator_node_lun_acl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->core_dev_init_initiator_node_lun_acl",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ieee80211_alloc_chanctx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ieee80211_alloc_chanctx",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mi_get",
        "SecOp": "mi_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->mi_init->mi_get",
        "var_path": "retval->arg->arg"
    },
    {
        "API": "request_arr_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->request_arr_init",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "tb_tunnel_alloc_dp",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_dp",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "TB_TEST_USB3_TUNNEL",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_usb3->TB_TEST_USB3_TUNNEL",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "new_fm_vbuf",
        "SecOp": "ubi_free_vid_buf",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ubi_alloc_vid_buf->new_fm_vbuf",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "usbctlx_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->usbctlx_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hpsa_alloc_sas_phy",
        "SecOp": "hpsa_free_sas_phy",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hpsa_alloc_sas_phy",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "msm_parse_deps",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->msm_parse_deps",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "its_lpi_alloc",
        "SecOp": "its_lpi_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->its_lpi_alloc",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "copy_gadget_strings",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->copy_gadget_strings",
        "var_path": "retval->retval"
    },
    {
        "API": "artpec6_crypto_alloc_bounce",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->artpec6_crypto_alloc_bounce",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qede_alloc_fp_array",
        "SecOp": "qede_free_fp_array",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->qede_alloc_fp_array",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "cfv_alloc_and_copy_to_shm",
        "SecOp": "free_buf_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->cfv_alloc_and_copy_to_shm",
        "var_path": "retval->retval"
    },
    {
        "API": "mlx5_get_label_mapping",
        "SecOp": "mlx5_put_label_mapping",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mapping_add->mlx5_get_label_mapping",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "bitmap_zalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "btrfs_create_dio_private",
        "SecOp": "btrfs_dio_private_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_create_dio_private",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__iommu_alloc_buffer",
        "SecOp": "__iommu_free_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->__iommu_alloc_buffer",
        "var_path": "retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "ftrace_add_rec_direct",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ftrace_add_rec_direct",
        "var_path": "retval->retval"
    },
    {
        "API": "qedi_alloc_fp",
        "SecOp": "qedi_free_fp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->qedi_alloc_fp",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "iio_buffers_alloc_sysfs_and_mask",
        "SecOp": "iio_buffers_free_sysfs_and_mask",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->__iio_buffer_alloc_sysfs_and_mask->iio_buffers_alloc_sysfs_and_mask",
        "var_path": "retval->retval->retval->retval->arg->arg"
    },
    {
        "API": "ath10k_wmi_tlv_parse_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ath10k_wmi_tlv_parse_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "komeda_get_layer_fourcc_list",
        "SecOp": "komeda_put_fourcc_list",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->komeda_get_layer_fourcc_list",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "snd_timer_instance_new",
        "SecOp": "snd_timer_instance_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->snd_timer_instance_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mvpp2_frag_alloc",
        "SecOp": "mvpp2_frag_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mvpp2_frag_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "create_pmu_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_pmu_entry",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sk_psock_create_ingress_msg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sk_psock_create_ingress_msg",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ionic_bus_alloc_irq_vectors",
        "SecOp": "ionic_bus_free_irq_vectors",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->irq_create_affinity_masks->pci_alloc_irq_vectors_affinity->pci_alloc_irq_vectors->ionic_bus_alloc_irq_vectors",
        "var_path": "retval->retval->retval->retval->arg->arg->arg"
    },
    {
        "API": "ibm_slot_from_id",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ibm_slot_from_id",
        "var_path": "retval->retval"
    },
    {
        "API": "acpi_os_allocate",
        "SecOp": "acpi_os_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->acpi_os_allocate",
        "var_path": "retval->retval"
    },
    {
        "API": "init_seen",
        "SecOp": "free_seen",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->init_seen",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "vmalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->__vmalloc->vmalloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nilfs_find_or_create_root",
        "SecOp": "nilfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nilfs_find_or_create_root",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hid_alloc_buffers",
        "SecOp": "hid_free_buffers",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->hid_alloc_buffers",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "flow_block_cb_alloc",
        "SecOp": "flow_block_cb_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->flow_block_cb_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfp_net_pf_alloc_vnics",
        "SecOp": "nfp_net_pf_free_vnics",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->nfp_net_alloc->nfp_net_pf_alloc_vnic->nfp_net_pf_alloc_vnics",
        "var_path": "retval->retval->retval->retval->retval->retval->retval->arg"
    },
    {
        "API": "udma_alloc_tr_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->udma_alloc_tr_desc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ppgtt_alloc_spt",
        "SecOp": "ppgtt_free_spt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_spt->ppgtt_alloc_spt",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "mlx5_devcom_list_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_devcom_list_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "lpfc_alloc_bsg_buffers",
        "SecOp": "lpfc_free_bsg_buffers",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->lpfc_mbuf_alloc->lpfc_alloc_bsg_buffers",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "tb_property_copy_dir",
        "SecOp": "tb_property_free_dir",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tb_property_create_dir->tb_property_copy_dir",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "flow_rule_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->flow_rule_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qm_ctx_alloc",
        "SecOp": "qm_ctx_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qm_ctx_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "convert_allocate_morph_plane",
        "SecOp": "ia_css_host_data_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->ia_css_host_data_allocate->convert_allocate_morph_plane",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hash_alloc_result",
        "SecOp": "hash_free_result",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->sock_kmalloc->hash_alloc_result",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "m66592_alloc_request",
        "SecOp": "m66592_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->m66592_alloc_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mei_cl_alloc_cb",
        "SecOp": "mei_io_cb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mei_io_cb_init->mei_cl_alloc_cb",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "rnbd_get_iu",
        "SecOp": "rnbd_put_iu",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rnbd_get_iu",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "genpd_alloc_dev_data",
        "SecOp": "genpd_free_dev_data",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->genpd_alloc_dev_data",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_ep",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ep",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlxsw_sp_rif_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_rif_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dw_hdmi_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->dw_hdmi_get_edid",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "usb_alloc_urb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "kmalloc->usb_alloc_urb",
        "var_path": "retval->retval"
    },
    {
        "API": "snd_info_create_card_entry",
        "SecOp": "snd_info_free_entry",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->snd_info_create_entry->snd_info_create_card_entry",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "pcibios_alloc_controller",
        "SecOp": "pcibios_free_controller",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->zalloc_maybe_bootmem->pcibios_alloc_controller",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "dma_alloc_noncontiguous",
        "SecOp": "dma_free_noncontiguous",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->alloc_single_sgt->dma_alloc_noncontiguous",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fuse_writepage_args_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_writepage_args_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "r8a66597_make_td",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->r8a66597_make_td",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fs_context_for_reconfigure",
        "SecOp": "put_fs_context",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_fs_context->fs_context_for_reconfigure",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "nfc_digital_allocate_device",
        "SecOp": "nfc_digital_free_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfc_digital_allocate_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5e_alloc_rq",
        "SecOp": "mlx5e_free_rq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->kvmalloc_node->kvzalloc_node->mlx5e_alloc_rq",
        "var_path": "retval->retval->retval->retval->retval->retval->arg"
    },
    {
        "API": "batadv_dat_select_candidates",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->batadv_dat_select_candidates",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "opa_vnic_alloc_mac_tbl",
        "SecOp": "opa_vnic_free_mac_tbl",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->opa_vnic_alloc_mac_tbl",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "intel_vgpu_alloc_resource",
        "SecOp": "intel_vgpu_free_resource",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_resource->intel_vgpu_alloc_resource",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "ah_alloc_tmp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->ah_alloc_tmp",
        "var_path": "retval->retval"
    },
    {
        "API": "psb_intel_sdvo_get_analog_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->psb_intel_sdvo_get_analog_edid",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "nvmet_rdma_alloc_cmds",
        "SecOp": "nvmet_rdma_free_cmds",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->nvmet_rdma_alloc_cmd->nvmet_rdma_alloc_cmds",
        "var_path": "retval->arg->retval"
    },
    {
        "API": "alloc_group_attrs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_group_attrs",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "prestera_flow_block_get",
        "SecOp": "prestera_flow_block_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->flow_block_cb_alloc->prestera_flow_block_get",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "hpfs_alloc_dnode",
        "SecOp": "hpfs_free_dnode",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->hpfs_get_4sectors->hpfs_alloc_dnode",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "dca_allocate_domain",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dca_allocate_domain",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "kvm_alloc_msr_filter",
        "SecOp": "kvm_free_msr_filter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->kvm_alloc_msr_filter",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "svm_range_new",
        "SecOp": "svm_range_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->svm_range_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sf_zone_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sf_zone_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "udma_prep_dma_cyclic_tr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->udma_alloc_tr_desc->udma_prep_dma_cyclic_tr",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "_allocate_lcu",
        "SecOp": "_free_lcu",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->_allocate_lcu",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qlcnic_alloc_sw_resources",
        "SecOp": "qlcnic_free_sw_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->qlcnic_alloc_sw_resources",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "udma_prep_slave_sg_pkt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->udma_prep_slave_sg_pkt",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "wq_sysfs_prep_attrs",
        "SecOp": "free_workqueue_attrs",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_workqueue_attrs->wq_sysfs_prep_attrs",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "bpf_ctx_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_ctx_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cifs_writedata_direct_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cifs_writedata_direct_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlxsw_sp_fid_8021q_get",
        "SecOp": "mlxsw_sp_fid_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_fid_get->mlxsw_sp_fid_8021q_get",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "alloc_n2cp",
        "SecOp": "free_n2cp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_n2cp",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tegra_dma_desc_get",
        "SecOp": "tegra_dma_desc_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tegra_dma_desc_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rtrs_iu_alloc",
        "SecOp": "rtrs_iu_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->rtrs_iu_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "afs_alloc_server",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->afs_alloc_server",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "create_var",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_var",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "zram_meta_alloc",
        "SecOp": "zram_meta_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->zram_meta_alloc",
        "var_path": "retval->retval->retval->retval->retval->arg"
    },
    {
        "API": "intel_gt_coredump_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_gt_coredump_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fsg_common_setup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fsg_common_setup",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "getname",
        "SecOp": "putname",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->getname_flags->getname",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "ulist_alloc",
        "SecOp": "ulist_free",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 1,
        "API_path": "kmalloc->ulist_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "ccu_div_create_data",
        "SecOp": "ccu_div_free_data",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ccu_div_create_data",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "b43_bus_dev_ssb_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->b43_bus_dev_ssb_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "afs_alloc_call",
        "SecOp": "afs_put_call",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->afs_alloc_call",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "parse_lease_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->parse_lease_state",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qdisc_get_stab",
        "SecOp": "qdisc_put_stab",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->qdisc_get_stab",
        "var_path": "retval->retval"
    },
    {
        "API": "pqi_alloc_sas_port",
        "SecOp": "pqi_free_sas_port",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pqi_alloc_sas_port",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "intel_gpio_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_gpio_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ovs_vport_alloc",
        "SecOp": "ovs_vport_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->ovs_vport_set_upcall_portids->ovs_vport_alloc",
        "var_path": "retval->arg->retval"
    },
    {
        "API": "enetc_alloc_si_resources",
        "SecOp": "enetc_free_si_resources",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->enetc_alloc_si_resources",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "do_kimage_alloc_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->do_kimage_alloc_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "get_rndis_request",
        "SecOp": "put_rndis_request",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_rndis_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nla_strdup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 1,
        "API_path": "kmalloc->nla_strdup",
        "var_path": "retval->retval"
    },
    {
        "API": "net_dm_hw_reset_per_cpu_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->net_dm_hw_reset_per_cpu_data",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dwc2_hcd_urb_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dwc2_hcd_urb_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dbc_alloc_ctx",
        "SecOp": "dbc_free_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dbc_alloc_ctx",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "uvesafb_prep",
        "SecOp": "uvesafb_free",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->uvesafb_prep",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nvmem_cell_read_variable_common",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read->nvmem_cell_read_variable_common",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "bpf_sk_storage_clone_elem",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->bpf_map_kzalloc->bpf_selem_alloc->bpf_sk_storage_clone_elem",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "fsl_mc_msi_alloc_descs",
        "SecOp": "fsl_mc_msi_free_descs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_msi_entry->fsl_mc_msi_alloc_descs",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "mlx4_alloc_cmd_mailbox",
        "SecOp": "mlx4_free_cmd_mailbox",
        "hasUsage": true,
        "usageCount": 83,
        "depth": 1,
        "API_path": "kmalloc->mlx4_alloc_cmd_mailbox",
        "var_path": "retval->retval"
    },
    {
        "API": "__register_chrdev_region",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__register_chrdev_region",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "taprio_offload_alloc",
        "SecOp": "taprio_offload_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->taprio_offload_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cyberpro_alloc_fb_info",
        "SecOp": "cyberpro_free_fb_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cyberpro_alloc_fb_info",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "kmalloc_array",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 447,
        "depth": 1,
        "API_path": "kmalloc->kmalloc_array",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_cld_upcall",
        "SecOp": "free_cld_upcall",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_cld_upcall",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tifm_alloc_adapter",
        "SecOp": "tifm_free_adapter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tifm_alloc_adapter",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "blk_alloc_queue_stats",
        "SecOp": "blk_free_queue_stats",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->blk_alloc_queue_stats",
        "var_path": "retval->retval"
    },
    {
        "API": "gfs2_rlist_alloc",
        "SecOp": "gfs2_rlist_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->gfs2_rlist_alloc",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "mtd_kmalloc_up_to",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->mtd_kmalloc_up_to",
        "var_path": "retval->retval"
    },
    {
        "API": "ocfs2_dx_dir_kmalloc_leaves",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ocfs2_dx_dir_kmalloc_leaves",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "rq_buf_alloc",
        "SecOp": "rq_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx5_frag_buf_alloc_node->rq_buf_alloc",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "cifs_build_path_to_root",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->cifs_build_path_to_root",
        "var_path": "retval->retval"
    },
    {
        "API": "jent_zalloc",
        "SecOp": "jent_zfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->jent_zalloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "btrfsic_block_alloc",
        "SecOp": "btrfsic_block_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfsic_block_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hns_roce_alloc_cmd_mailbox",
        "SecOp": "hns_roce_free_cmd_mailbox",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->hns_roce_alloc_cmd_mailbox",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "virtnet_alloc_queues",
        "SecOp": "virtnet_free_queues",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->virtnet_alloc_queues",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "alloc_ucounts",
        "SecOp": "put_ucounts",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ucounts",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_cell",
        "SecOp": "free_cell",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_cell",
        "var_path": "retval->retval"
    },
    {
        "API": "snd_info_create_module_entry",
        "SecOp": "snd_info_free_entry",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->snd_info_create_entry->snd_info_create_module_entry",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "get_dname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->get_dname",
        "var_path": "retval->retval"
    },
    {
        "API": "ieee80211_alloc_txb",
        "SecOp": "ieee80211_txb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ieee80211_alloc_txb",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_smp_req",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_smp_req",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "vring_alloc_queue",
        "SecOp": "vring_free_queue",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->alloc_pages_exact->vring_alloc_queue",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "r8a66597_alloc_request",
        "SecOp": "r8a66597_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->r8a66597_alloc_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bnx2x_frag_alloc",
        "SecOp": "bnx2x_frag_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->bnx2x_frag_alloc",
        "var_path": "retval->arg"
    },
    {
        "API": "ocelot_vcap_filter_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocelot_vcap_filter_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "gr_alloc_request",
        "SecOp": "gr_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gr_alloc_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5e_rq_shampo_hd_alloc",
        "SecOp": "mlx5e_rq_shampo_hd_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->kvmalloc_node->kvzalloc_node->mlx5e_rq_shampo_hd_alloc",
        "var_path": "retval->retval->retval->retval->retval->retval->arg"
    },
    {
        "API": "tegra_bo_alloc_object",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tegra_bo_alloc_object",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "virtio_transport_alloc_pkt",
        "SecOp": "virtio_transport_free_pkt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->virtio_transport_alloc_pkt",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "track_data_alloc",
        "SecOp": "track_data_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->track_data_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5_get_uars_page",
        "SecOp": "mlx5_put_uars_page",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_uars_page->mlx5_get_uars_page",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "metadata_open",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->metadata_open",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mte_allocate_tag_storage",
        "SecOp": "mte_free_tag_storage",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->mte_allocate_tag_storage",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_vudc_device",
        "SecOp": "put_vudc_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_vudc_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__reuseport_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__reuseport_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ar5523_alloc_rx_cmd",
        "SecOp": "ar5523_free_rx_cmd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->ar5523_alloc_rx_cmd",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "mthca_alloc_icm_table",
        "SecOp": "mthca_free_icm_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mthca_alloc_icm_table",
        "var_path": "retval->retval"
    },
    {
        "API": "svc_rdma_send_ctxt_get",
        "SecOp": "svc_rdma_send_ctxt_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->svc_rdma_send_ctxt_alloc->svc_rdma_send_ctxt_get",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "ipw_alloc_error_log",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ipw_alloc_error_log",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_ubifs_info",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ubifs_info",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rsa_edesc_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rsa_edesc_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5e_alloc_txqsq",
        "SecOp": "mlx5e_free_txqsq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->kvmalloc_node->kvzalloc_node->mlx5e_alloc_txqsq_db->mlx5e_alloc_txqsq",
        "var_path": "retval->retval->retval->retval->retval->retval->arg->arg"
    },
    {
        "API": "create_local",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_local",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_smp_resp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_smp_resp",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nf_ct_tmpl_alloc",
        "SecOp": "nf_ct_tmpl_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nf_ct_tmpl_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "amdtee_config_shm",
        "SecOp": "tee_shm_pool_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tee_shm_pool_alloc->amdtee_config_shm",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "nvmem_cell_prepare_write_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvmem_cell_prepare_write_buffer",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "intel_crtc_alloc",
        "SecOp": "intel_crtc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_crtc_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_pvd",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_pvd",
        "var_path": "retval->retval"
    },
    {
        "API": "cdebbuf_alloc",
        "SecOp": "cdebbuf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->cdebbuf_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "mlx5_devlink_alloc",
        "SecOp": "mlx5_devlink_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->devlink_alloc_ns->devlink_alloc->mlx5_devlink_alloc",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "nfs_alloc_seqid",
        "SecOp": "nfs_free_seqid",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfs_alloc_seqid",
        "var_path": "retval->retval"
    },
    {
        "API": "nft_obj_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nft_obj_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sti_get_bmode_rom",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->sti_get_bmode_rom",
        "var_path": "retval->retval"
    },
    {
        "API": "rtw_build_rsvd_page",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rtw_build_rsvd_page",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ext4_find_extent",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ext4_find_extent",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "mlx4_cq_alloc_icm",
        "SecOp": "mlx4_cq_free_icm",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_cq_alloc_icm->mlx4_cq_alloc_icm",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "mlx4_cq_alloc",
        "SecOp": "mlx4_cq_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_cq_alloc_icm->mlx4_cq_alloc_icm->mlx4_cq_alloc",
        "var_path": "retval->retval->arg->arg->arg->arg"
    },
    {
        "API": "alloc_qpc",
        "SecOp": "free_qpc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hns_roce_alloc_hem->hns_roce_table_get->alloc_qpc",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "mlx5_get_uars_page",
        "SecOp": "mlx5_put_uars_page",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_uars_page->mlx5_get_uars_page",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "find_or_allocate_block",
        "SecOp": "free_blocked_lock",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->find_or_allocate_block",
        "var_path": "retval->retval"
    },
    {
        "API": "TB_TEST_PCIE_TUNNEL",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_pci->TB_TEST_PCIE_TUNNEL",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "ext4_li_request_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ext4_li_request_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__get_or_create_frag",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->__get_or_create_frag",
        "var_path": "retval->retval"
    },
    {
        "API": "jz4780_dma_desc_alloc",
        "SecOp": "jz4780_dma_desc_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->jz4780_dma_desc_alloc",
        "var_path": "retval->retval->arg->retval"
    },
    {
        "API": "mlx5_vdpa_alloc_resources",
        "SecOp": "mlx5_vdpa_free_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->__alloc_pd->alloc_pd->mlx5_vdpa_alloc_resources",
        "var_path": "retval->retval->retval->retval->arg"
    },
    {
        "API": "mvs_pci_alloc",
        "SecOp": "mvs_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mvs_pci_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cifs_get_tcp_session",
        "SecOp": "cifs_put_tcp_session",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->allocate_mr_list->_smbd_get_connection->smbd_get_connection->cifs_get_tcp_session",
        "var_path": "retval->retval->retval->arg->retval->arg->arg"
    },
    {
        "API": "init_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->init_desc",
        "var_path": "retval->retval"
    },
    {
        "API": "tape_alloc_request",
        "SecOp": "tape_free_request",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tape_alloc_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bnad_tx_res_alloc",
        "SecOp": "bnad_tx_res_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bnad_txrx_irq_alloc->bnad_tx_res_alloc",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "keyring_restriction_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->keyring_restriction_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "psb_intel_sdvo_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->psb_intel_sdvo_get_edid",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "bnx2x_alloc_mem_bp",
        "SecOp": "bnx2x_free_mem_bp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bnx2x_alloc_mem_bp",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "pqi_alloc_sas_phy",
        "SecOp": "pqi_free_sas_phy",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pqi_alloc_sas_phy",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_fence",
        "SecOp": "free_fence",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 1,
        "API_path": "kmalloc->alloc_fence",
        "var_path": "retval->retval"
    },
    {
        "API": "cdns_mhdp_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->cdns_mhdp_get_edid",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "bpf_map_kzalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_map_kzalloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mtr_alloc_bufs",
        "SecOp": "mtr_free_bufs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->sg_kmalloc->get_next_sg->sg_alloc_append_table_from_pages->ib_umem_get->mtr_alloc_bufs",
        "var_path": "retval->retval->retval->retval->arg->arg->arg"
    },
    {
        "API": "nci_allocate_device",
        "SecOp": "nci_free_device",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nci_allocate_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tb_path_alloc",
        "SecOp": "tb_path_free",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_path_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "create_vblank_event",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_vblank_event",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "blkg_alloc",
        "SecOp": "blkg_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->percpu_ref_init->blkg_alloc",
        "var_path": "retval->retval->arg->retval"
    },
    {
        "API": "qeth_alloc_card",
        "SecOp": "qeth_core_free_card",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qeth_alloc_card",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qla24xx_alloc_purex_item",
        "SecOp": "qla24xx_free_purex_item",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla24xx_alloc_purex_item",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mipi_dsi_device_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mipi_dsi_device_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "skcipher_request_alloc",
        "SecOp": "skcipher_request_free",
        "hasUsage": true,
        "usageCount": 21,
        "depth": 1,
        "API_path": "kmalloc->skcipher_request_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "nouveau_dmem_page_alloc_locked",
        "SecOp": "nouveau_dmem_page_free_locked",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->nouveau_bo_alloc->nouveau_bo_new->nouveau_dmem_chunk_alloc->nouveau_dmem_page_alloc_locked",
        "var_path": "retval->retval->retval->arg->arg->arg"
    },
    {
        "API": "usbtest_alloc_urb",
        "SecOp": "simple_free_urb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->usbtest_alloc_urb",
        "var_path": "retval->retval->arg->retval"
    },
    {
        "API": "nfp_net_pf_alloc_vnic",
        "SecOp": "nfp_net_pf_free_vnic",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->nfp_net_alloc->nfp_net_pf_alloc_vnic",
        "var_path": "retval->retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "alloc_sess",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_sess",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mei_cl_allocate",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mei_cl_allocate",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_flex_gd",
        "SecOp": "free_flex_gd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_flex_gd",
        "var_path": "retval->retval"
    },
    {
        "API": "nfs3_alloc_createdata",
        "SecOp": "nfs3_free_createdata",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs3_alloc_createdata",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "csio_hw_alloc",
        "SecOp": "csio_hw_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->csio_hw_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ioasid_alloc_allocator",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ioasid_alloc_allocator",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "acomp_request_alloc",
        "SecOp": "acomp_request_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__acomp_request_alloc->acomp_request_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "dasd_alloc_device",
        "SecOp": "dasd_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dasd_alloc_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_cq_db",
        "SecOp": "free_cq_db",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->hns_roce_alloc_db_pgdir->hns_roce_alloc_db->alloc_cq_db",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "convert_to_unix_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->convert_to_unix_name",
        "var_path": "retval->retval"
    },
    {
        "API": "input_allocate_device",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->input_allocate_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfs4_alloc_state_owner",
        "SecOp": "nfs4_free_state_owner",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_alloc_state_owner",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cq_frag_buf_alloc",
        "SecOp": "cq_frag_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx5_frag_buf_alloc_node->cq_frag_buf_alloc",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "intel_sdvo_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->intel_sdvo_get_edid",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "alloc_pdev",
        "SecOp": "free_pdev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_pdev",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "edac_mc_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->edac_mc_alloc_dimms->edac_mc_alloc",
        "var_path": "retval->retval->retval->arg->retval"
    },
    {
        "API": "uml_kmalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 1,
        "API_path": "kmalloc->uml_kmalloc",
        "var_path": "retval->retval"
    },
    {
        "API": "samsung_clk_alloc_reg_dump",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->samsung_clk_alloc_reg_dump",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "brcmf_usb_prepare_fw_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->brcmf_fw_alloc_request->brcmf_usb_prepare_fw_request",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "btf_parse",
        "SecOp": "btf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btf_parse",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "drm_gem_shmem_get_sg_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->drm_prime_pages_to_sg->drm_gem_shmem_get_sg_table",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sid_to_key_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->sid_to_key_str",
        "var_path": "retval->retval"
    },
    {
        "API": "dlm_alloc_ctxt",
        "SecOp": "dlm_free_ctxt_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dlm_alloc_ctxt",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "objagg_stats_get",
        "SecOp": "objagg_stats_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->objagg_stats_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "edac_device_alloc_ctl_info",
        "SecOp": "edac_device_free_ctl_info",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->edac_device_alloc_ctl_info",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rt2x00usb_alloc_reg",
        "SecOp": "rt2x00usb_free_reg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rt2x00usb_alloc_reg",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "alloc_engines",
        "SecOp": "free_engines",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_engines",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ceph_monmap_decode",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ceph_monmap_decode",
        "var_path": "retval->retval"
    },
    {
        "API": "nfs4_alloc_ds_server",
        "SecOp": "nfs4_free_ds_server",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfs4_alloc_ds_server",
        "var_path": "retval->retval"
    },
    {
        "API": "hpfs_get_ea",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->hpfs_get_ea",
        "var_path": "retval->retval"
    },
    {
        "API": "nfs_cache_defer_req_alloc",
        "SecOp": "nfs_cache_defer_req_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs_cache_defer_req_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "kvm_arch_alloc_vm",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->__vmalloc->kvm_arch_alloc_vm",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "siw_pbl_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->siw_pbl_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "get_free_dqblk",
        "SecOp": "put_free_dqblk",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->get_free_dqblk",
        "var_path": "retval->arg"
    },
    {
        "API": "acc_alloc_fw",
        "SecOp": "acc_free_fw",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acc_alloc_fw",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_ai",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ai",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "vmxnet3_copy_mc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vmxnet3_copy_mc",
        "var_path": "retval->retval"
    },
    {
        "API": "audio_format_alloc_init",
        "SecOp": "audioformat_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->audio_format_alloc_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_srv_ctx",
        "SecOp": "free_srv_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_srv_ctx",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "enetc_alloc_rx_resources",
        "SecOp": "enetc_free_rx_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->enetc_alloc_rxbdr->enetc_alloc_rx_resources",
        "var_path": "retval->retval->retval->retval->retval->arg->arg"
    },
    {
        "API": "ocfs2_alloc_quota_recovery",
        "SecOp": "ocfs2_free_quota_recovery",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ocfs2_alloc_quota_recovery",
        "var_path": "retval->retval"
    },
    {
        "API": "it821x_firmware_command",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->it821x_firmware_command",
        "var_path": "retval->retval"
    },
    {
        "API": "idma64_alloc_desc",
        "SecOp": "idma64_desc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->idma64_alloc_desc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "snd_usb_get_audioformat_uac12",
        "SecOp": "audioformat_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->audio_format_alloc_init->snd_usb_get_audioformat_uac12",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "alloc_fdtable",
        "SecOp": "__free_fdtable",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_fdtable",
        "var_path": "retval->retval"
    },
    {
        "API": "tape_alloc_device",
        "SecOp": "tape_put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tape_alloc_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xhci_alloc_container_ctx",
        "SecOp": "xhci_free_container_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_alloc_container_ctx",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "alloc_node_to_cpumask",
        "SecOp": "free_node_to_cpumask",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_node_to_cpumask",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "k3_dsp_rproc_of_get_tsp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->k3_dsp_rproc_of_get_tsp",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5_alloc_flow_attr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_alloc_flow_attr",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "handle_rpc_func_cmd_shm_alloc",
        "SecOp": "handle_rpc_func_cmd_shm_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tee_shm_alloc->handle_rpc_func_cmd_shm_alloc",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "__open_export_target_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->register_session->__open_export_target_session",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "brcmf_fw_nvram_from_efi",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->brcmf_fw_nvram_from_efi",
        "var_path": "retval->retval"
    },
    {
        "API": "setup_conf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_thread_groups->setup_conf",
        "var_path": "retval->retval->retval->arg->retval"
    },
    {
        "API": "pfkey_sadb2xfrm_user_sec_ctx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->pfkey_sadb2xfrm_user_sec_ctx",
        "var_path": "retval->retval"
    },
    {
        "API": "debug_info_alloc",
        "SecOp": "debug_info_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->debug_info_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "bpf_selem_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->bpf_map_kzalloc->bpf_selem_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "extract_hostname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->extract_hostname",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_rbio",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_rbio",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mhi_alloc_controller",
        "SecOp": "mhi_free_controller",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mhi_alloc_controller",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfp_cpp_from_nfp6000_pcie",
        "SecOp": "nfp_cpp_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_cpp_from_nfp6000_pcie",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hinic_alloc_cmdq_buf",
        "SecOp": "hinic_free_cmdq_buf",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->hinic_alloc_cmdq_buf",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "dw_edma_alloc_desc",
        "SecOp": "dw_edma_free_desc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dw_edma_alloc_desc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "jffs2_acl_to_medium",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->jffs2_acl_to_medium",
        "var_path": "retval->retval"
    },
    {
        "API": "irq_domain_alloc_fwnode",
        "SecOp": "irq_domain_free_fwnode",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__irq_domain_alloc_fwnode->irq_domain_alloc_fwnode",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "kdb_strdup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->kdb_strdup",
        "var_path": "retval->retval"
    },
    {
        "API": "vic_provinfo_alloc",
        "SecOp": "vic_provinfo_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vic_provinfo_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nft_trans_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nft_trans_alloc_gfp->nft_trans_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "mcp_host_alloc",
        "SecOp": "mcp_host_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mcp_host_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "vgpu_alloc_mm",
        "SecOp": "vgpu_free_mm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vgpu_alloc_mm",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_clt",
        "SecOp": "free_clt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_clt",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfp_port_alloc",
        "SecOp": "nfp_port_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_port_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ocfs2_new_path_from_path",
        "SecOp": "ocfs2_free_path",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ocfs2_new_path->ocfs2_new_path_from_path",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "oprom_get_vbt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->oprom_get_vbt",
        "var_path": "retval->retval"
    },
    {
        "API": "__iio_buffer_alloc_sysfs_and_mask",
        "SecOp": "__iio_buffer_free_sysfs_and_mask",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->__iio_buffer_alloc_sysfs_and_mask",
        "var_path": "retval->retval->retval->retval->arg"
    },
    {
        "API": "rio_alloc_net",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rio_alloc_net",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "of_icc_get_from_provider",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->of_icc_get_from_provider",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "platform_msi_alloc_priv_data",
        "SecOp": "platform_msi_free_priv_data",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->platform_msi_alloc_priv_data",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "svc_rdma_read_info_alloc",
        "SecOp": "svc_rdma_read_info_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->svc_rdma_read_info_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_inout",
        "SecOp": "free_inout",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_inout",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "bpf_trampoline_get_progs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bpf_trampoline_get_progs",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "mmc_alloc_host",
        "SecOp": "mmc_free_host",
        "hasUsage": true,
        "usageCount": 32,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mmc_alloc_host",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bcm_vk_dma_alloc",
        "SecOp": "bcm_vk_dma_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->bcm_vk_dma_alloc",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "psb_mmu_alloc_pt",
        "SecOp": "psb_mmu_free_pt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->psb_mmu_alloc_pt",
        "var_path": "retval->retval"
    },
    {
        "API": "svm_range_clone",
        "SecOp": "svm_range_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->svm_range_new->svm_range_clone",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "pcpu_alloc_chunk",
        "SecOp": "pcpu_free_chunk",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->pcpu_mem_zalloc->pcpu_alloc_chunk",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "mthca_pd_alloc",
        "SecOp": "mthca_pd_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "kmalloc->mthca_alloc_icm->mthca_table_get->mthca_mr_alloc->mthca_mr_alloc_notrans->mthca_pd_alloc",
        "var_path": "retval->retval->arg->arg->arg->arg"
    },
    {
        "API": "udma_prep_slave_sg_tr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->udma_alloc_tr_desc->udma_prep_slave_sg_tr",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "new_pcichild_device",
        "SecOp": "put_pcichild",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->new_pcichild_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5_eswitch_termtbl_get_create",
        "SecOp": "mlx5_eswitch_termtbl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx5_add_flow_rules->mlx5_eswitch_termtbl_create->mlx5_eswitch_termtbl_get_create",
        "var_path": "retval->retval->retval->arg->arg->retval"
    },
    {
        "API": "fuse_pages_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_pages_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mthca_alloc_icm_table",
        "SecOp": "mthca_free_icm_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->mthca_alloc_icm->mthca_alloc_icm_table",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "platform_msi_alloc_descs",
        "SecOp": "platform_msi_free_descs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->alloc_msi_entry->platform_msi_alloc_descs_with_irq->platform_msi_alloc_descs",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "pci_alloc_host_bridge",
        "SecOp": "pci_free_host_bridge",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_alloc_host_bridge",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "brcmf_sdio_prepare_fw_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->brcmf_fw_alloc_request->brcmf_sdio_prepare_fw_request",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "sk_alloc",
        "SecOp": "sk_free",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "kmalloc->sk_prot_alloc->sk_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "kobject_get_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->kobject_get_path",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "audit_data_to_entry",
        "SecOp": "audit_free_rule",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->alloc_tree->audit_make_tree->audit_data_to_entry",
        "var_path": "retval->retval->arg->retval"
    },
    {
        "API": "alloc_mnt_ns",
        "SecOp": "free_mnt_ns",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_mnt_ns",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "iotlb_alloc_cr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->iotlb_alloc_cr",
        "var_path": "retval->retval"
    },
    {
        "API": "ocfs2_new_path",
        "SecOp": "ocfs2_free_path",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocfs2_new_path",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "iscsit_alloc_portal_group",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iscsit_alloc_portal_group",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "netdev_name_node_head_alloc",
        "SecOp": "netdev_name_node_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->netdev_name_node_alloc->netdev_name_node_head_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ovl_get_fh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_get_fh",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "_alloc_path_selector",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->_alloc_path_selector",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sgl_alloc",
        "SecOp": "sgl_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->sgl_alloc_order->sgl_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "kmem_alloc",
        "SecOp": "kmem_free",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 1,
        "API_path": "kmalloc->kmem_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "ccwchain_alloc",
        "SecOp": "ccwchain_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ccwchain_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "afs_alloc_flat_call",
        "SecOp": "afs_put_call",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->afs_alloc_call->afs_alloc_flat_call",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "ipmr_new_table",
        "SecOp": "ipmr_free_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "kmalloc->kzalloc->nested_table_alloc->nested_bucket_table_alloc->bucket_table_alloc->rhashtable_init->rhltable_init->mr_table_alloc->ipmr_new_table",
        "var_path": "retval->retval->retval->arg->arg->arg->arg->retval->retval"
    },
    {
        "API": "ext2_acl_to_disk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ext2_acl_to_disk",
        "var_path": "retval->retval"
    },
    {
        "API": "rvt_mcast_alloc",
        "SecOp": "rvt_mcast_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rvt_mcast_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nft_trans_alloc_gfp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nft_trans_alloc_gfp",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "efx_ef10_sriov_alloc_vf_vswitching",
        "SecOp": "efx_ef10_sriov_free_vf_vswitching",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->efx_ef10_sriov_alloc_vf_vswitching",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "afs_vl_get_cell_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->afs_alloc_call->afs_alloc_flat_call->afs_yfsvl_get_cell_name->afs_vl_get_cell_name",
        "var_path": "retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "__alloc_dma_rx_desc_resources",
        "SecOp": "__free_dma_rx_desc_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->__alloc_dma_rx_desc_resources",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "mctp_key_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mctp_key_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx4_alloc_cmd_mailbox",
        "SecOp": "mlx4_free_cmd_mailbox",
        "hasUsage": true,
        "usageCount": 83,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->mlx4_alloc_cmd_mailbox",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "tegra_xudc_alloc_ep",
        "SecOp": "tegra_xudc_free_ep",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->tegra_xudc_alloc_ep",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "tomoyo_init_log",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tomoyo_init_log",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tb_nvm_alloc",
        "SecOp": "tb_nvm_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_nvm_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_tty_struct",
        "SecOp": "free_tty_struct",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->tty_ldisc_get->tty_ldisc_init->alloc_tty_struct",
        "var_path": "retval->retval->arg->retval"
    },
    {
        "API": "btrfs_alloc_dummy_root",
        "SecOp": "btrfs_free_dummy_root",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->btrfs_alloc_dummy_root",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "fuse_file_alloc",
        "SecOp": "fuse_file_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_file_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tb_tunnel_alloc_dma",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_dma",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "smk_parse_smack",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->smk_parse_smack",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "raw_alloc_io_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->raw_alloc_io_data",
        "var_path": "retval->retval"
    },
    {
        "API": "mthca_alloc_mailbox",
        "SecOp": "mthca_free_mailbox",
        "hasUsage": true,
        "usageCount": 27,
        "depth": 1,
        "API_path": "kmalloc->mthca_alloc_mailbox",
        "var_path": "retval->retval"
    },
    {
        "API": "nvmet_rdma_get_rsp",
        "SecOp": "nvmet_rdma_put_rsp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->nvmet_rdma_alloc_rsp->nvmet_rdma_get_rsp",
        "var_path": "retval->arg->retval"
    },
    {
        "API": "ip6mr_new_table",
        "SecOp": "ip6mr_free_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "kmalloc->kzalloc->nested_table_alloc->nested_bucket_table_alloc->bucket_table_alloc->rhashtable_init->rhltable_init->mr_table_alloc->ip6mr_new_table",
        "var_path": "retval->retval->retval->arg->arg->arg->arg->retval->retval"
    },
    {
        "API": "alloc_sdesc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->alloc_sdesc",
        "var_path": "retval->retval"
    },
    {
        "API": "mthca_table_get",
        "SecOp": "mthca_table_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->mthca_alloc_icm->mthca_table_get",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "cfg80211_beacon_dup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cfg80211_beacon_dup",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_synth_event",
        "SecOp": "free_synth_event",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_synth_event",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "allocate_partitions",
        "SecOp": "free_partitions",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->allocate_partitions",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "efct_xport_alloc",
        "SecOp": "efct_xport_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->efct_xport_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "acpi_os_allocate_zeroed",
        "SecOp": "acpi_os_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->acpi_os_allocate->acpi_os_allocate_zeroed",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "orangefs_bufmap_alloc",
        "SecOp": "orangefs_bufmap_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->orangefs_bufmap_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "btrfs_create_tree",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->btrfs_create_tree",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "devlink_fmsg_alloc",
        "SecOp": "devlink_fmsg_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->devlink_fmsg_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ceph_create_snap_context",
        "SecOp": "ceph_put_snap_context",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ceph_create_snap_context",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "test_alloc",
        "SecOp": "test_free",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 1,
        "API_path": "kmalloc->test_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "randomised_engines",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->randomised_engines",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "spi_res_alloc",
        "SecOp": "spi_res_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->spi_res_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "net_alloc_generic",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->net_alloc_generic",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "usnic_vnic_alloc",
        "SecOp": "usnic_vnic_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kmalloc_array->kcalloc->usnic_vnic_alloc_res_chunk->usnic_vnic_discover_resources->usnic_vnic_alloc",
        "var_path": "retval->retval->retval->arg->arg->retval"
    },
    {
        "API": "relay_alloc_page_array",
        "SecOp": "relay_free_page_array",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->relay_alloc_page_array",
        "var_path": "retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "cci_pci_alloc_irq",
        "SecOp": "cci_pci_free_irq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->irq_create_affinity_masks->pci_alloc_irq_vectors_affinity->pci_alloc_irq_vectors->cci_pci_alloc_irq",
        "var_path": "retval->retval->retval->retval->arg->arg->arg"
    },
    {
        "API": "axi_desc_alloc",
        "SecOp": "axi_desc_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->axi_desc_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rt2x00soc_alloc_reg",
        "SecOp": "rt2x00soc_free_reg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rt2x00soc_alloc_reg",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "alloc_dca_provider",
        "SecOp": "free_dca_provider",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_dca_provider",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "zfcp_fsf_alloc",
        "SecOp": "zfcp_fsf_req_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->zfcp_fsf_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "vmalloc_to_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->vmalloc_to_sg",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xt_hook_ops_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->xt_hook_ops_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "rtllib_alloc_txb",
        "SecOp": "rtllib_txb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rtllib_alloc_txb",
        "var_path": "retval->retval"
    },
    {
        "API": "get_bitmap_from_slot",
        "SecOp": "md_bitmap_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->md_bitmap_create->get_bitmap_from_slot",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "build_unc_path_to_root",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->build_unc_path_to_root",
        "var_path": "retval->retval"
    },
    {
        "API": "sta_info_alloc",
        "SecOp": "sta_info_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sta_info_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dcn302_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn302_afmt_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "svc_i3c_master_alloc_xfer",
        "SecOp": "svc_i3c_master_free_xfer",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->svc_i3c_master_alloc_xfer",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dwc2_hcd_qh_create",
        "SecOp": "dwc2_hcd_qtd_unlink_and_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kmalloc_array->kcalloc->dwc2_desc_list_alloc->dwc2_hcd_qh_init_ddma->dwc2_hcd_qh_create",
        "var_path": "retval->retval->retval->arg->arg->retval"
    },
    {
        "API": "scan_behind_bridge",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->scan_behind_bridge",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "drm_prime_pages_to_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->drm_prime_pages_to_sg",
        "var_path": "retval->retval"
    },
    {
        "API": "smu_sat_get_sdb_partition",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->smu_sat_get_sdb_partition",
        "var_path": "retval->retval"
    },
    {
        "API": "null_alloc_dev",
        "SecOp": "null_free_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->null_alloc_dev",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "i3c_generic_ibi_alloc_pool",
        "SecOp": "i3c_generic_ibi_free_pool",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i3c_generic_ibi_alloc_pool",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ksmbd_convert_dir_info_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ksmbd_convert_dir_info_name",
        "var_path": "retval->retval"
    },
    {
        "API": "qp_alloc_queue",
        "SecOp": "qp_free_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vmalloc->qp_alloc_queue",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "alloc_function",
        "SecOp": "free_function",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_function",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "TB_TEST_DP_TUNNEL2",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_dp->TB_TEST_DP_TUNNEL2",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "smb_strndup_from_utf16",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->smb_strndup_from_utf16",
        "var_path": "retval->retval"
    },
    {
        "API": "optee_config_dyn_shm",
        "SecOp": "tee_shm_pool_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tee_shm_pool_alloc->optee_config_dyn_shm",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "alloc_srq_idx",
        "SecOp": "free_srq_idx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->alloc_srq_idx",
        "var_path": "retval->retval->retval->retval->arg"
    },
    {
        "API": "rxrpc_alloc_connection",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rxrpc_alloc_connection",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__mlx4_cq_alloc_icm",
        "SecOp": "__mlx4_cq_free_icm",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_cq_alloc_icm",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "fifo_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fifo_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tls_get_rec",
        "SecOp": "tls_free_rec",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tls_get_rec",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlxsw_sp_neigh_entry_alloc",
        "SecOp": "mlxsw_sp_neigh_entry_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_neigh_entry_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfs_alloc_server",
        "SecOp": "nfs_free_server",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs_alloc_server",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_ebda_hpc",
        "SecOp": "free_ebda_hpc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ebda_hpc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mvpp2_frag_alloc",
        "SecOp": "mvpp2_frag_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mvpp2_frag_alloc",
        "var_path": "retval->arg"
    },
    {
        "API": "eeh_pe_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->eeh_pe_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_spt",
        "SecOp": "free_spt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_spt",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fs_path_alloc",
        "SecOp": "fs_path_free",
        "hasUsage": true,
        "usageCount": 22,
        "depth": 1,
        "API_path": "kmalloc->fs_path_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "ahd_alloc",
        "SecOp": "ahd_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ahd_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ip_fib_metrics_init",
        "SecOp": "ip_fib_metrics_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ip_fib_metrics_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "map_iter_alloc",
        "SecOp": "map_iter_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->map_iter_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hd44780_common_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hd44780_common_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "x509_cert_parse",
        "SecOp": "x509_free_certificate",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->x509_cert_parse",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "drm_random_order",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->drm_random_order",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_uprobe",
        "SecOp": "put_uprobe",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_uprobe",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfc_hci_allocate_device",
        "SecOp": "nfc_hci_free_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfc_hci_allocate_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xprt_alloc_bc_req",
        "SecOp": "xprt_free_allocation",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xprt_alloc_bc_req",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ar5523_alloc_tx_cmd",
        "SecOp": "ar5523_free_tx_cmd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->ar5523_alloc_tx_cmd",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "of_iio_channel_get_all",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->of_iio_channel_get_all",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "qla4xxx_get_new_mrb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla4xxx_get_new_mrb",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "svc_fill_symlink_pathname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->svc_fill_symlink_pathname",
        "var_path": "retval->retval"
    },
    {
        "API": "atomisp_css_shading_table_alloc",
        "SecOp": "atomisp_css_shading_table_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->ia_css_shading_table_alloc->atomisp_css_shading_table_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mesh_path_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mesh_path_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tee_alloc_cmd_buffer",
        "SecOp": "tee_free_cmd_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tee_alloc_cmd_buffer",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "platform_device_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->platform_device_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "get_random_order",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->get_random_order",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "attach_one_i2c",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->attach_one_i2c",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfs_alloc_createdata",
        "SecOp": "nfs_free_createdata",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->nfs_alloc_createdata",
        "var_path": "retval->retval"
    },
    {
        "API": "follow_link",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->follow_link",
        "var_path": "retval->retval"
    },
    {
        "API": "intel_plane_alloc",
        "SecOp": "intel_plane_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_plane_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "usb_alloc_coherent",
        "SecOp": "usb_free_coherent",
        "hasUsage": true,
        "usageCount": 42,
        "depth": 2,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qed_alloc_cdev",
        "SecOp": "qed_free_cdev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qed_alloc_cdev",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qdisc_get_rtab",
        "SecOp": "qdisc_put_rtab",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->qdisc_get_rtab",
        "var_path": "retval->retval"
    },
    {
        "API": "calipso_opt_insert",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->calipso_opt_insert",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "get_cert_list",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->get_cert_list",
        "var_path": "retval->retval"
    },
    {
        "API": "vhost_iotlb_alloc",
        "SecOp": "vhost_iotlb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vhost_iotlb_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bnxt_qplib_alloc_rcfw_channel",
        "SecOp": "bnxt_qplib_free_rcfw_channel",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bnxt_qplib_alloc_rcfw_channel",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "dcn303_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn303_afmt_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "new_links",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->new_links",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xfrm_hash_alloc",
        "SecOp": "xfrm_hash_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->xfrm_hash_alloc",
        "var_path": "retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "alloc_chunk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_chunk",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ecard_alloc_card",
        "SecOp": "ecard_free_card",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ecard_alloc_card",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qmi_encode_message",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qmi_encode_message",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bpf_trampoline_get",
        "SecOp": "bpf_trampoline_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->bpf_trampoline_lookup->bpf_trampoline_get",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "nl80211_parse_sched_scan",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nl80211_parse_sched_scan",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bcom_task_alloc",
        "SecOp": "bcom_task_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bcom_task_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "init_temp_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_temp_data",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bnx2_alloc_mem",
        "SecOp": "bnx2_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->bnx2_alloc_rx_mem->bnx2_alloc_mem",
        "var_path": "retval->retval->retval->retval->retval->arg->arg"
    },
    {
        "API": "ahc_alloc",
        "SecOp": "ahc_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ahc_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tty_audit_buf_alloc",
        "SecOp": "tty_audit_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->tty_audit_buf_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_ncp",
        "SecOp": "free_ncp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ncp",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sdma_transfer_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sdma_transfer_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sg_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sg_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tc_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->tc_get_edid",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "create_l2",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_l2",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "aa_alloc_profile",
        "SecOp": "aa_free_profile",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->aa_alloc_profile",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_cqc",
        "SecOp": "free_cqc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hns_roce_alloc_hem->hns_roce_table_get->alloc_cqc",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "mthca_alloc_mtt",
        "SecOp": "mthca_free_mtt",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->__mthca_alloc_mtt->mthca_alloc_mtt",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "iucv_path_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iucv_path_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ddw_list_new_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ddw_list_new_entry",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "vmbus_device_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vmbus_device_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "pod_alloc_sysex_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->line6_alloc_sysex_buffer->pod_alloc_sysex_buffer",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "shadow_alloc",
        "SecOp": "shadow_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->__klp_shadow_get_or_alloc->klp_shadow_alloc->shadow_alloc",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "skcipher_edesc_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->talitos_edesc_alloc->skcipher_edesc_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xsk_map_node_alloc",
        "SecOp": "xsk_map_node_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->bpf_map_kzalloc->xsk_map_node_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "rnbd_srv_init_srv_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rnbd_srv_init_srv_dev",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sugov_policy_alloc",
        "SecOp": "sugov_policy_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sugov_policy_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "jz4780_dma_desc_alloc",
        "SecOp": "jz4780_dma_desc_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->jz4780_dma_desc_alloc",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "btrfs_get_io_failure_record",
        "SecOp": "free_io_failure",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_get_io_failure_record",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ieee802_11_parse_elems",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ieee802_11_parse_elems_crc->ieee802_11_parse_elems",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "nexthop_grp_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nexthop_grp_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "gelic_eurus_sync_cmd",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gelic_eurus_sync_cmd",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__vb2_queue_alloc",
        "SecOp": "__vb2_queue_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__vb2_queue_alloc",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "tee_shm_alloc",
        "SecOp": "tee_shm_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tee_shm_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "io_mapping_create_wc",
        "SecOp": "io_mapping_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->io_mapping_create_wc",
        "var_path": "retval->retval"
    },
    {
        "API": "rnbd_srv_get_full_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rnbd_srv_get_full_path",
        "var_path": "retval->retval"
    },
    {
        "API": "__live_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__live_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "new_nbp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->new_nbp",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "audit_init_entry",
        "SecOp": "audit_free_rule",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->audit_init_entry",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "arpc_alloc",
        "SecOp": "arpc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->arpc_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "selinux_ima_collect_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->selinux_ima_collect_state",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "enetc_alloc_txbdr",
        "SecOp": "enetc_free_txbdr",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->enetc_alloc_txbdr",
        "var_path": "retval->retval->retval->retval->retval->arg"
    },
    {
        "API": "nfsd4_cltrack_grace_start",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->nfsd4_cltrack_grace_start",
        "var_path": "retval->retval"
    },
    {
        "API": "meson_nand_op_get_dma_safe_input_buf",
        "SecOp": "meson_nand_op_put_dma_safe_input_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->meson_nand_op_get_dma_safe_input_buf",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "efc_nport_alloc",
        "SecOp": "efc_nport_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->efc_nport_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_scq",
        "SecOp": "free_scq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_scq",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bnxt_tc_get_tunnel_node",
        "SecOp": "bnxt_tc_put_tunnel_node",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bnxt_tc_get_tunnel_node",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_irq_cpu_rmap",
        "SecOp": "free_irq_cpu_rmap",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_cpu_rmap->alloc_irq_cpu_rmap",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "sctp_make_temp_asoc",
        "SecOp": "sctp_association_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->sctp_association_new->sctp_make_temp_asoc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "mlxsw_pci_alloc_irq_vectors",
        "SecOp": "mlxsw_pci_free_irq_vectors",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->irq_create_affinity_masks->pci_alloc_irq_vectors_affinity->pci_alloc_irq_vectors->mlxsw_pci_alloc_irq_vectors",
        "var_path": "retval->retval->retval->retval->arg->arg->arg"
    },
    {
        "API": "hpsa_alloc_sas_node",
        "SecOp": "hpsa_free_sas_node",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hpsa_alloc_sas_node",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ath11k_wmi_tlv_parse_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 23,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ath11k_wmi_tlv_parse_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "inet_alloc_ifa",
        "SecOp": "inet_free_ifa",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->inet_alloc_ifa",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nilfs_segctor_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nilfs_segctor_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_urbs",
        "SecOp": "free_urbs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_urbs",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "efx_alloc_rss_context_entry",
        "SecOp": "efx_free_rss_context_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->efx_alloc_rss_context_entry",
        "var_path": "retval->retval"
    },
    {
        "API": "ib_cq_pool_get",
        "SecOp": "ib_cq_pool_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "kmalloc->kzalloc->create_cq->__ib_alloc_cq->ib_alloc_cq->ib_alloc_cqs->ib_cq_pool_get",
        "var_path": "retval->retval->arg->retval->arg->arg->arg"
    },
    {
        "API": "ieee802_11_parse_elems_crc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ieee802_11_parse_elems_crc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rnbd_srv_create_set_sess_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->rnbd_sess_dev_alloc->rnbd_srv_create_set_sess_dev",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "fs_context_for_submount",
        "SecOp": "put_fs_context",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_fs_context->fs_context_for_submount",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "hidpp_unifying_get_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hidpp_unifying_get_name",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cxl_alloc_adapter",
        "SecOp": "free_adapter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cxl_alloc_adapter",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sampler_get",
        "SecOp": "sampler_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sampler_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__rbd_dev_create",
        "SecOp": "rbd_dev_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__rbd_dev_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "new_fragment",
        "SecOp": "put_fragment",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->new_fragment",
        "var_path": "retval->retval"
    },
    {
        "API": "mlx4_srq_alloc_icm",
        "SecOp": "mlx4_srq_free_icm",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_srq_alloc_icm->mlx4_srq_alloc_icm",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "wcd_clsh_ctrl_alloc",
        "SecOp": "wcd_clsh_ctrl_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wcd_clsh_ctrl_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "adv7511_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->adv7511_get_edid",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "dcn30_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn30_afmt_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_trace_kprobe",
        "SecOp": "free_trace_kprobe",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_trace_kprobe",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "pvr2_eeprom_fetch",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pvr2_eeprom_fetch",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fuse_dev_alloc_install",
        "SecOp": "fuse_dev_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->fuse_dev_alloc->fuse_dev_alloc_install",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "ubi_eba_create_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ubi_eba_create_table",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qeth_alloc_pool_entry",
        "SecOp": "qeth_free_pool_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qeth_alloc_pool_entry",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "s3c24xx_dma_get_txd",
        "SecOp": "s3c24xx_dma_free_txd",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->s3c24xx_dma_get_txd",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sec_alg_alloc_and_fill_el",
        "SecOp": "sec_alg_free_el",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->sec_alloc_and_fill_hw_sgl->sec_alg_alloc_and_fill_el",
        "var_path": "retval->retval->arg->arg->arg->retval"
    },
    {
        "API": "pci_p2pmem_alloc_sgl",
        "SecOp": "pci_p2pmem_free_sgl",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->pci_p2pmem_alloc_sgl",
        "var_path": "retval->retval"
    },
    {
        "API": "extend_rsttbl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->init_rsttbl->extend_rsttbl",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "xfrm_policy_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xfrm_policy_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_ftrace_hash",
        "SecOp": "free_ftrace_hash",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ftrace_hash",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__alloc_irq_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__alloc_irq_table",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "check_partition",
        "SecOp": "free_partitions",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->allocate_partitions->check_partition",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "find_firmware",
        "SecOp": "free_firmware",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->find_firmware",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nexthop_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nexthop_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rxrpc_alloc_bundle",
        "SecOp": "rxrpc_free_bundle",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rxrpc_alloc_bundle",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "seq_create_client1",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->seq_create_client1",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "TB_TEST_DMA_TUNNEL1",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_dma->TB_TEST_DMA_TUNNEL1",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "exynos_drm_ipp_task_alloc",
        "SecOp": "exynos_drm_ipp_task_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->exynos_drm_ipp_task_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "lt9611uxc_firmware_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lt9611uxc_firmware_read",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "core_tpg_alloc_lun",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->core_tpg_alloc_lun",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hidpp_get_device_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hidpp_get_device_name",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "create_unique_id",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->create_unique_id",
        "var_path": "retval->retval"
    },
    {
        "API": "mlxsw_cmd_mbox_alloc",
        "SecOp": "mlxsw_cmd_mbox_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_cmd_mbox_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "page_array_alloc",
        "SecOp": "page_array_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->f2fs_kmalloc->f2fs_kzalloc->page_array_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "dasd_alloc_block",
        "SecOp": "dasd_free_block",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dasd_alloc_block",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sk_psock_init_link",
        "SecOp": "sk_psock_free_link",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sk_psock_init_link",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bnx2i_alloc_hba",
        "SecOp": "bnx2i_free_hba",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->scsi_host_alloc->iscsi_host_alloc->bnx2i_alloc_hba",
        "var_path": "retval->retval->retval->arg->retval"
    },
    {
        "API": "q6asm_audio_client_alloc",
        "SecOp": "q6asm_audio_client_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->q6asm_audio_client_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__a2mp_build",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__a2mp_build",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rproc_alloc",
        "SecOp": "rproc_free",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rproc_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fs_context_for_mount",
        "SecOp": "put_fs_context",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_fs_context->fs_context_for_mount",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "hpfs_translate_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->hpfs_translate_name",
        "var_path": "retval->retval"
    },
    {
        "API": "tipc_aead_mem_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->tipc_aead_mem_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "ath11k_pci_alloc_msi",
        "SecOp": "ath11k_pci_free_msi",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->irq_create_affinity_masks->pci_alloc_irq_vectors_affinity->pci_alloc_irq_vectors->ath11k_pci_alloc_msi",
        "var_path": "retval->retval->retval->retval->arg->arg->arg"
    },
    {
        "API": "create_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->create_entry",
        "var_path": "retval->retval"
    },
    {
        "API": "amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu",
        "SecOp": "amdgpu_amdkfd_gpuvm_free_memory_of_gpu",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->create_doorbell_sg->amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "p9_client_getattr_dotl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->p9_client_getattr_dotl",
        "var_path": "retval->retval"
    },
    {
        "API": "tls_alloc_aead_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tls_alloc_aead_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "trace_pid_list_alloc",
        "SecOp": "trace_pid_list_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->trace_pid_list_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mdiobus_alloc_size",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mdiobus_alloc_size",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ovl_fid_to_fh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_fid_to_fh",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_mhop_hem",
        "SecOp": "free_mhop_hem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->hns_roce_alloc_hem->alloc_mhop_hem",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "hid_alloc_report_buf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 1,
        "API_path": "kmalloc->hid_alloc_report_buf",
        "var_path": "retval->retval"
    },
    {
        "API": "nft_trans_elem_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->nft_trans_alloc_gfp->nft_trans_alloc->nft_trans_elem_alloc",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "xilinx_dma_alloc_tx_descriptor",
        "SecOp": "xilinx_dma_free_tx_descriptor",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xilinx_dma_alloc_tx_descriptor",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xprt_alloc",
        "SecOp": "xprt_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xprt_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__alloc_pd",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__alloc_pd",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "_tegra_init_pll",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->_tegra_init_pll",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_pg_vec",
        "SecOp": "free_pg_vec",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_pg_vec",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "i915_random_order",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->i915_random_order",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dmabuf_pages_to_sgt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "kmalloc->kmalloc_array->sg_kmalloc->get_next_sg->sg_alloc_append_table_from_pages->sg_alloc_table_from_pages_segment->sg_alloc_table_from_pages->dmabuf_pages_to_sgt",
        "var_path": "retval->retval->retval->retval->retval->retval->arg->retval"
    },
    {
        "API": "str_to_target_ids",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->str_to_target_ids",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "copy_tlv",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->copy_tlv",
        "var_path": "retval->retval"
    },
    {
        "API": "iwl_mvm_update_mcc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iwl_mvm_update_mcc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "init_sbd",
        "SecOp": "free_sbd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_sbd",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__comedi_buf_alloc",
        "SecOp": "__comedi_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->comedi_buf_map_alloc->__comedi_buf_alloc",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "drm_dp_mst_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->drm_dp_mst_get_edid",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "vgic_its_alloc_device",
        "SecOp": "vgic_its_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vgic_its_alloc_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sdw_alloc_slave_rt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sdw_alloc_slave_rt",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "vboxsf_dir_info_alloc",
        "SecOp": "vboxsf_dir_info_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vboxsf_dir_info_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_param_target",
        "SecOp": "free_param_target",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_param_target",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "lpddr_probe_chip",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lpddr_probe_chip",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cdns_i3c_master_alloc_xfer",
        "SecOp": "cdns_i3c_master_free_xfer",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cdns_i3c_master_alloc_xfer",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "drm_file_alloc",
        "SecOp": "drm_file_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->drm_file_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "iscsi_host_alloc",
        "SecOp": "iscsi_host_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->scsi_host_alloc->iscsi_host_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "attr_create_nonres_log",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->attr_create_nonres_log",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "arm_smmu_alloc_shared_cd",
        "SecOp": "arm_smmu_free_shared_cd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->arm_smmu_alloc_shared_cd",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mthca_alloc_wqe_buf",
        "SecOp": "mthca_free_wqe_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__mthca_alloc_mtt->mthca_alloc_mtt->mthca_mr_alloc_phys->mthca_buf_alloc->mthca_alloc_wqe_buf",
        "var_path": "retval->retval->arg->arg->arg->arg"
    },
    {
        "API": "alloc_resource",
        "SecOp": "free_resource",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_resource",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_pipe_info",
        "SecOp": "free_pipe_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_pipe_info",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "wil_vring_alloc",
        "SecOp": "wil_vring_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->wil_vring_alloc",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "alloc_lightbar_cmd_msg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 1,
        "API_path": "kmalloc->alloc_lightbar_cmd_msg",
        "var_path": "retval->retval"
    },
    {
        "API": "wakeup_source_create",
        "SecOp": "wakeup_source_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wakeup_source_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_ws",
        "SecOp": "free_ws",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ws",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rvt_mcast_qp_alloc",
        "SecOp": "rvt_mcast_qp_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rvt_mcast_qp_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "btrfs_backref_iter_alloc",
        "SecOp": "btrfs_backref_iter_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_backref_iter_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "TB_TEST_DP_TUNNEL1",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_dp->TB_TEST_DP_TUNNEL1",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "add_orphan_dir_info",
        "SecOp": "free_orphan_dir_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->add_orphan_dir_info",
        "var_path": "retval->retval"
    },
    {
        "API": "ssam_event_item_alloc",
        "SecOp": "ssam_event_item_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ssam_event_item_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "irq_create_affinity_masks",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->irq_create_affinity_masks",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "mlx5e_tc_init_fib_work",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5e_tc_init_fib_work",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfp_net_pf_alloc_vnic",
        "SecOp": "nfp_net_pf_free_vnic",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->nfp_net_alloc->nfp_net_pf_alloc_vnic",
        "var_path": "retval->retval->retval->retval->retval->retval->arg"
    },
    {
        "API": "alloc_async",
        "SecOp": "free_async",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_async",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "vfio_ccw_alloc_private",
        "SecOp": "vfio_ccw_free_private",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vfio_ccw_alloc_private",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__alloc_dma_tx_desc_resources",
        "SecOp": "__free_dma_tx_desc_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->__alloc_dma_tx_desc_resources",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "ovl_get_lowerstack",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ovl_alloc_entry->ovl_get_lowerstack",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "alloc_context",
        "SecOp": "free_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_context",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "kzalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6786,
        "depth": 1,
        "API_path": "kmalloc->kzalloc",
        "var_path": "retval->retval"
    },
    {
        "API": "dmz_alloc_mblock",
        "SecOp": "dmz_free_mblock",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->dmz_alloc_mblock",
        "var_path": "retval->retval"
    },
    {
        "API": "jffs2_alloc_full_dirent",
        "SecOp": "jffs2_free_full_dirent",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->jffs2_alloc_full_dirent",
        "var_path": "retval->retval"
    },
    {
        "API": "__alloc_atm_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__alloc_atm_dev",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xhci_alloc_stream_info",
        "SecOp": "xhci_free_stream_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->xhci_alloc_stream_ctx->xhci_alloc_stream_info",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "alloc_cipher_test_sglists",
        "SecOp": "free_cipher_test_sglists",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->alloc_cipher_test_sglists",
        "var_path": "retval->retval"
    },
    {
        "API": "nfs4_pnfs_remotestr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_pnfs_remotestr",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5_rl_table_get",
        "SecOp": "mlx5_rl_table_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx5_rl_table_get",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "vxfs_getfsh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vxfs_getfsh",
        "var_path": "retval->retval"
    },
    {
        "API": "create_wlan",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_wlan",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cifs_convert_path_to_utf16",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 2,
        "API_path": "kmalloc->cifs_strndup_to_utf16->cifs_convert_path_to_utf16",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hns_roce_table_get",
        "SecOp": "hns_roce_table_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->hns_roce_alloc_hem->hns_roce_table_get",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "audit_krule_to_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->audit_krule_to_data",
        "var_path": "retval->retval"
    },
    {
        "API": "bucket_table_alloc",
        "SecOp": "bucket_table_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nested_bucket_table_alloc->bucket_table_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "shadow_alloc",
        "SecOp": "shadow_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->__klp_shadow_get_or_alloc->klp_shadow_alloc->shadow_alloc",
        "var_path": "retval->retval->retval->retval->arg"
    },
    {
        "API": "tgec_config",
        "SecOp": "tgec_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tgec_config",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ecc_alloc_point",
        "SecOp": "ecc_free_point",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "kmalloc->ecc_alloc_point",
        "var_path": "retval->retval"
    },
    {
        "API": "svc_rdma_recv_ctxt_get",
        "SecOp": "svc_rdma_recv_ctxt_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->svc_rdma_recv_ctxt_alloc->svc_rdma_recv_ctxt_get",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "zfcp_fsf_req_create",
        "SecOp": "zfcp_fsf_req_free",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 2,
        "API_path": "kmalloc->zfcp_fsf_alloc->zfcp_fsf_req_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mei_cl_alloc_linked",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->mei_cl_allocate->mei_cl_alloc_linked",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fnd_get",
        "SecOp": "fnd_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fnd_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "virtcrypto_alloc_queues",
        "SecOp": "virtcrypto_free_queues",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->virtcrypto_alloc_queues",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "tomoyo_print_header",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->tomoyo_print_header",
        "var_path": "retval->retval"
    },
    {
        "API": "mlx5e_alloc_rq",
        "SecOp": "mlx5e_free_rq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->kvmalloc_node->kvzalloc_node->mlx5e_rq_alloc_mpwqe_info->mlx5e_alloc_rq",
        "var_path": "retval->retval->retval->retval->retval->retval->arg->arg"
    },
    {
        "API": "xhci_dbc_alloc_requests",
        "SecOp": "xhci_dbc_free_requests",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->dbc_alloc_request->xhci_dbc_alloc_requests",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "nubus_get_functional_resource",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nubus_get_functional_resource",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dn_dev_alloc_ifa",
        "SecOp": "dn_dev_free_ifa",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dn_dev_alloc_ifa",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ipoib_path_iter_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ipoib_path_iter_init",
        "var_path": "retval->retval"
    },
    {
        "API": "flexgen_get_parents",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->flexgen_get_parents",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "user_input_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "kmalloc->user_input_str",
        "var_path": "retval->retval"
    },
    {
        "API": "kset_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->kset_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "objagg_hints_stats_get",
        "SecOp": "objagg_stats_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->objagg_hints_stats_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_srq_buf",
        "SecOp": "free_srq_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->alloc_srq_idx->alloc_srq_buf",
        "var_path": "retval->retval->retval->retval->arg->arg"
    },
    {
        "API": "clone_fs_devices",
        "SecOp": "free_fs_devices",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_fs_devices->clone_fs_devices",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "bpf_prog_alloc",
        "SecOp": "bpf_prog_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->bpf_prog_alloc_no_stats->bpf_prog_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "arm_lpae_alloc_pgtable",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->arm_lpae_alloc_pgtable",
        "var_path": "retval->retval"
    },
    {
        "API": "xhci_ring_alloc",
        "SecOp": "xhci_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_segment_alloc->xhci_alloc_segments_for_ring->xhci_ring_alloc",
        "var_path": "retval->retval->arg->arg->arg->arg->arg"
    },
    {
        "API": "nfp_flower_allocate_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->nfp_flower_allocate_new",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_sglist",
        "SecOp": "free_sglist",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_sglist",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dmatest_alloc_test_data",
        "SecOp": "dmatest_free_test_data",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->dmatest_alloc_test_data",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "psb_gtt_alloc_range",
        "SecOp": "psb_gtt_free_range",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->psb_gtt_alloc_range",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "brcmf_alloc_vif",
        "SecOp": "brcmf_free_vif",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->brcmf_alloc_vif",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nvme_add_user_metadata",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nvme_add_user_metadata",
        "var_path": "retval->retval"
    },
    {
        "API": "ath11k_ce_alloc_pipes",
        "SecOp": "ath11k_ce_free_pipes",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->ath11k_ce_alloc_ring->ath11k_ce_alloc_pipe->ath11k_ce_alloc_pipes",
        "var_path": "retval->retval->retval->retval->arg"
    },
    {
        "API": "tb_ctl_pkg_alloc",
        "SecOp": "tb_ctl_pkg_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->tb_ctl_pkg_alloc",
        "var_path": "retval->retval->arg->retval"
    },
    {
        "API": "hinic_devlink_alloc",
        "SecOp": "hinic_devlink_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->devlink_alloc_ns->devlink_alloc->hinic_devlink_alloc",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "__mwl8k_cmd_mac_multicast_adr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__mwl8k_cmd_mac_multicast_adr",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "parse_acl_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->parse_acl_data",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nft_netdev_hook_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nft_netdev_hook_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "dpaa2_eth_alloc_channel",
        "SecOp": "dpaa2_eth_free_channel",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dpaa2_eth_alloc_channel",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "caam_hash_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->caam_hash_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "allocate_flower_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->allocate_flower_entry",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_whitelist",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->alloc_whitelist",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "afs_vl_lookup_vldb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->afs_alloc_call->afs_alloc_flat_call->afs_vl_get_entry_by_name_u->afs_vl_lookup_vldb",
        "var_path": "retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "wl1271_rx_filter_alloc",
        "SecOp": "wl1271_rx_filter_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wl1271_rx_filter_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "pcibios_get_irq_routing_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->pcibios_get_irq_routing_table",
        "var_path": "retval->retval"
    },
    {
        "API": "nfc_llcp_build_tlv",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfc_llcp_build_tlv",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "squashfs_page_actor_init_special",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->squashfs_page_actor_init_special",
        "var_path": "retval->retval"
    },
    {
        "API": "cifs_readdata_direct_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cifs_readdata_direct_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ocfs2_xattr_bucket_new",
        "SecOp": "ocfs2_xattr_bucket_free",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocfs2_xattr_bucket_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qxl_ring_create",
        "SecOp": "qxl_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->qxl_ring_create",
        "var_path": "retval->retval"
    },
    {
        "API": "wrap_dma_fence",
        "SecOp": "free_fence",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->alloc_fence->wrap_dma_fence",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "get_writeback_formats",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->get_writeback_formats",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "fwnet_frag_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->fwnet_frag_new",
        "var_path": "retval->retval"
    },
    {
        "API": "bman_new_pool",
        "SecOp": "bman_free_pool",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->bman_new_pool",
        "var_path": "retval->retval"
    },
    {
        "API": "ksmbd_vfs_make_xattr_posix_acl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ksmbd_vfs_make_xattr_posix_acl",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dw_i3c_master_alloc_xfer",
        "SecOp": "dw_i3c_master_free_xfer",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dw_i3c_master_alloc_xfer",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "iwl_uefi_get_pnvm",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->iwl_uefi_get_pnvm",
        "var_path": "retval->retval"
    },
    {
        "API": "log_create_ra",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->log_create_ra",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mthca_alloc_srq_buf",
        "SecOp": "mthca_free_srq_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__mthca_alloc_mtt->mthca_alloc_mtt->mthca_mr_alloc_phys->mthca_buf_alloc->mthca_alloc_srq_buf",
        "var_path": "retval->retval->arg->arg->arg->arg"
    },
    {
        "API": "nouveau_dmem_page_alloc_locked",
        "SecOp": "nouveau_dmem_page_free_locked",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->nouveau_bo_alloc->nouveau_bo_new->nouveau_dmem_chunk_alloc->nouveau_dmem_page_alloc_locked",
        "var_path": "retval->retval->retval->arg->arg->retval"
    },
    {
        "API": "hns_roce_alloc_cmd_mailbox",
        "SecOp": "hns_roce_free_cmd_mailbox",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 1,
        "API_path": "kmalloc->hns_roce_alloc_cmd_mailbox",
        "var_path": "retval->retval"
    },
    {
        "API": "indx_new",
        "SecOp": "put_indx_node",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->indx_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bnxt_alloc_ring",
        "SecOp": "bnxt_free_ring",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->bnxt_alloc_ring",
        "var_path": "retval->retval->retval->retval->retval->arg"
    },
    {
        "API": "ib_alloc_cq",
        "SecOp": "ib_free_cq",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->create_cq->__ib_alloc_cq->ib_alloc_cq",
        "var_path": "retval->retval->arg->retval->retval"
    },
    {
        "API": "iwl_rfi_get_freq_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iwl_rfi_get_freq_table",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hackrf_alloc_stream_bufs",
        "SecOp": "hackrf_free_stream_bufs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->hackrf_alloc_stream_bufs",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "bpf_map_area_alloc",
        "SecOp": "bpf_map_area_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__bpf_map_area_alloc->bpf_map_area_alloc",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "edac_pci_alloc_ctl_info",
        "SecOp": "edac_pci_free_ctl_info",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->edac_pci_alloc_ctl_info",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dwc2_desc_list_alloc",
        "SecOp": "dwc2_desc_list_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->dwc2_desc_list_alloc",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "vgic_its_alloc_ite",
        "SecOp": "its_free_ite",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vgic_its_alloc_ite",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fs_path_alloc_reversed",
        "SecOp": "fs_path_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->fs_path_alloc->fs_path_alloc_reversed",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "netdev_create_hash",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->netdev_create_hash",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "i2c_get_dma_safe_msg_buf",
        "SecOp": "i2c_put_dma_safe_msg_buf",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i2c_get_dma_safe_msg_buf",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "bnx2x_frag_alloc",
        "SecOp": "bnx2x_frag_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->bnx2x_frag_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "drm_do_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nvmem_cell_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 22,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfs4_alloc_createdata",
        "SecOp": "nfs4_free_createdata",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_alloc_createdata",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "libipw_alloc_txb",
        "SecOp": "libipw_txb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->libipw_alloc_txb",
        "var_path": "retval->retval"
    },
    {
        "API": "bch_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->bch_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "tb_tunnel_alloc_pci",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_pci",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "extract_fw_ver_from_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->extract_fw_ver_from_str",
        "var_path": "retval->retval"
    },
    {
        "API": "ccw_device_get_chp_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->chp_get_chp_desc->ccw_device_get_chp_desc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfp_reprs_alloc",
        "SecOp": "nfp_reprs_clean_and_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_reprs_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "lpfc_hba_alloc",
        "SecOp": "lpfc_hba_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lpfc_hba_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "intel_sdvo_connector_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_sdvo_connector_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5_alloc_cmd_msg",
        "SecOp": "mlx5_free_cmd_msg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_alloc_cmd_msg",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ddb_buffers_alloc",
        "SecOp": "ddb_buffers_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->dma_alloc->ddb_buffers_alloc",
        "var_path": "retval->arg->arg"
    },
    {
        "API": "pci_store_saved_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_store_saved_state",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mpi_alloc_limb_space",
        "SecOp": "mpi_free_limb_space",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->mpi_alloc_limb_space",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_indirect_split",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_indirect_split",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "stm32_exti_host_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->stm32_exti_host_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "btf_parse_module",
        "SecOp": "btf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btf_parse_module",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xhci_alloc_stream_info",
        "SecOp": "xhci_free_stream_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->xhci_alloc_stream_ctx->xhci_alloc_stream_info",
        "var_path": "retval->retval->arg->arg->retval"
    },
    {
        "API": "wilc_parse_join_bss_param",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wilc_parse_join_bss_param",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "go7007_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->go7007_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cs_dsp_read_algs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cs_dsp_read_algs",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mthca_alloc_srq",
        "SecOp": "mthca_free_srq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->__mthca_alloc_mtt->mthca_alloc_mtt->mthca_mr_alloc_phys->mthca_buf_alloc->mthca_alloc_srq_buf->mthca_alloc_srq",
        "var_path": "retval->retval->arg->arg->arg->arg->arg"
    },
    {
        "API": "wiimote_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wiimote_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_clk",
        "SecOp": "free_clk",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_clk",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "smc_wr_alloc_link_mem",
        "SecOp": "smc_wr_free_link_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->smc_wr_alloc_link_mem",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "cxl_alloc_afu",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cxl_alloc_afu",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "p54_convert_db",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->p54_convert_db",
        "var_path": "retval->retval"
    },
    {
        "API": "vduse_dev_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vduse_dev_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "simple_alloc_urb",
        "SecOp": "simple_free_urb",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->usbtest_alloc_urb->simple_alloc_urb",
        "var_path": "retval->retval->arg->retval->retval"
    },
    {
        "API": "iwl_phy_db_init",
        "SecOp": "iwl_phy_db_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iwl_phy_db_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "exfat_get_dentry_set",
        "SecOp": "exfat_free_dentry_set",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->exfat_get_dentry_set",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "register_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->register_session",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xattr_alloc",
        "SecOp": "xattr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->f2fs_kmalloc->f2fs_kzalloc->xattr_alloc",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "intel_sdvo_get_analog_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->intel_sdvo_get_analog_edid",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "fsl_mc_msi_domain_alloc_irqs",
        "SecOp": "fsl_mc_msi_domain_free_irqs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->alloc_msi_entry->fsl_mc_msi_alloc_descs->fsl_mc_msi_domain_alloc_irqs",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "aead_request_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->aead_request_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "pl08x_get_txd",
        "SecOp": "pl08x_free_txd",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pl08x_get_txd",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bnxt_qplib_rcfw_alloc_sbuf",
        "SecOp": "bnxt_qplib_rcfw_free_sbuf",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bnxt_qplib_rcfw_alloc_sbuf",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfp_app_alloc",
        "SecOp": "nfp_app_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_app_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "efa_alloc_mr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->efa_alloc_mr",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dp_meter_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dp_meter_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "load_msg",
        "SecOp": "free_msg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->alloc_msg->load_msg",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "picolcd_send_and_wait",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->picolcd_send_and_wait",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "csi_idmac_get_ipu_resources",
        "SecOp": "csi_idmac_put_ipu_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ipu_idmac_get->csi_idmac_get_ipu_resources",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "create_doorbell_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->create_doorbell_sg",
        "var_path": "retval->retval"
    },
    {
        "API": "nfs_readdir_alloc_pages",
        "SecOp": "nfs_readdir_free_pages",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->nfs_readdir_alloc_pages",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nft_set_elem_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nft_set_elem_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mpi_alloc",
        "SecOp": "mpi_free",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 1,
        "API_path": "kmalloc->mpi_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_dma_desc_resources",
        "SecOp": "free_dma_desc_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kmalloc_array->kcalloc->__alloc_dma_tx_desc_resources->alloc_dma_tx_desc_resources->alloc_dma_desc_resources",
        "var_path": "retval->retval->retval->arg->arg->arg"
    },
    {
        "API": "mem_cgroup_alloc",
        "SecOp": "mem_cgroup_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mem_cgroup_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bnxt_qplib_alloc_res",
        "SecOp": "bnxt_qplib_free_res",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bnxt_qplib_alloc_sgid_tbl->bnxt_qplib_alloc_res",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "ice_get_opt_fw_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ice_get_opt_fw_name",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "enetc_alloc_tx_resources",
        "SecOp": "enetc_free_tx_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->enetc_alloc_txbdr->enetc_alloc_tx_resources",
        "var_path": "retval->retval->retval->retval->retval->arg->arg"
    },
    {
        "API": "mthca_alloc_mailbox",
        "SecOp": "mthca_free_mailbox",
        "hasUsage": true,
        "usageCount": 27,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->mthca_alloc_mailbox",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "iotlb_alloc",
        "SecOp": "vhost_iotlb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->vhost_iotlb_alloc->iotlb_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "scrub_workers_get",
        "SecOp": "scrub_workers_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_workqueue->scrub_workers_get",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "qeth_alloc_qdio_queue",
        "SecOp": "qeth_free_qdio_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qeth_alloc_qdio_queue",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mv_u3d_build_trb_one",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mv_u3d_build_trb_one",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xattr_alloc",
        "SecOp": "xattr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->f2fs_kmalloc->f2fs_kzalloc->xattr_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "qxl_create_plane",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qxl_create_plane",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_srqc",
        "SecOp": "free_srqc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hns_roce_alloc_hem->hns_roce_table_get->alloc_srqc",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "btrfs_backref_alloc_node",
        "SecOp": "btrfs_backref_free_node",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_backref_alloc_node",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ksmbd_inode_get",
        "SecOp": "ksmbd_inode_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ksmbd_inode_get",
        "var_path": "retval->retval"
    },
    {
        "API": "btrfs_alloc_subpage",
        "SecOp": "btrfs_free_subpage",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_subpage",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "aq_ring_alloc",
        "SecOp": "aq_ring_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->aq_ring_alloc",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "esp_alloc_tmp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->esp_alloc_tmp",
        "var_path": "retval->retval"
    },
    {
        "API": "i3c_master_alloc_i2c_dev",
        "SecOp": "i3c_master_free_i2c_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i3c_master_alloc_i2c_dev",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "init_opal_dev",
        "SecOp": "free_opal_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->init_opal_dev",
        "var_path": "retval->retval"
    },
    {
        "API": "ipu_image_convert",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ipu_image_convert",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ahash_edesc_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->talitos_edesc_alloc->ahash_edesc_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tb_tunnel_alloc_usb3",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_usb3",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "intel_frontbuffer_get",
        "SecOp": "intel_frontbuffer_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->intel_frontbuffer_get",
        "var_path": "retval->retval"
    },
    {
        "API": "ax25_create_cb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ax25_create_cb",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ext4_acl_to_disk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ext4_acl_to_disk",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_soc_dts",
        "SecOp": "free_soc_dts",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_soc_dts",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sti_get_wmode_rom",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->sti_get_wmode_rom",
        "var_path": "retval->retval"
    },
    {
        "API": "sdebug_device_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->sdebug_device_create_zones->sdebug_device_create",
        "var_path": "retval->retval->retval->arg->retval"
    },
    {
        "API": "cpi_prepare_req",
        "SecOp": "cpi_free_req",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cpi_prepare_req",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "_allocate_server",
        "SecOp": "_free_server",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->_allocate_server",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "i915_vm_alloc_pt_stash",
        "SecOp": "i915_vm_free_pt_stash",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->alloc_pt->i915_vm_alloc_pt_stash",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "dmabuf_pages_to_sgt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->dmabuf_pages_to_sgt",
        "var_path": "retval->retval"
    },
    {
        "API": "ath10k_htt_rx_alloc",
        "SecOp": "ath10k_htt_rx_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ath10k_htt_rx_alloc",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "dev_new",
        "SecOp": "put_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dev_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5_alloc_cmd_msg",
        "SecOp": "mlx5_free_cmd_msg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->alloc_cmd_box->mlx5_alloc_cmd_msg",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "acpiphp_init_context",
        "SecOp": "acpiphp_put_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acpiphp_init_context",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfsd4_cltrack_legacy_topdir",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfsd4_cltrack_legacy_topdir",
        "var_path": "retval->retval"
    },
    {
        "API": "nfs_alloc_fhandle",
        "SecOp": "nfs_free_fhandle",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "kmalloc->nfs_alloc_fhandle",
        "var_path": "retval->retval"
    },
    {
        "API": "devlink_alloc",
        "SecOp": "devlink_free",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->devlink_alloc_ns->devlink_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "xfrm_policy_construct",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->xfrm_policy_alloc->xfrm_policy_construct",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "blk_stat_alloc_callback",
        "SecOp": "blk_stat_free_callback",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->blk_stat_alloc_callback",
        "var_path": "retval->retval"
    },
    {
        "API": "nvkm_mmu_ptp_get",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvkm_mmu_ptp_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "thermal_of_build_thermal_zone",
        "SecOp": "of_thermal_free_zone",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->thermal_of_build_thermal_zone",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "landlock_create_object",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->landlock_create_object",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "btrfs_backref_alloc_edge",
        "SecOp": "btrfs_backref_free_edge",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_backref_alloc_edge",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "snd_midi_channel_alloc_set",
        "SecOp": "snd_midi_channel_free_set",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->snd_midi_channel_alloc_set",
        "var_path": "retval->retval"
    },
    {
        "API": "cifs_strndup_to_utf16",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->cifs_strndup_to_utf16",
        "var_path": "retval->retval"
    },
    {
        "API": "sst_create_block",
        "SecOp": "sst_free_block",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sst_create_block",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx4_ib_alloc_demux_ctx",
        "SecOp": "mlx4_ib_free_demux_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx4_ib_alloc_demux_ctx",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "mmc_blk_ioctl_copy_from_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mmc_blk_ioctl_copy_from_user",
        "var_path": "retval->retval"
    },
    {
        "API": "nvme_rdma_alloc_ring",
        "SecOp": "nvme_rdma_free_ring",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->nvme_rdma_alloc_ring",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "ima_alloc_key_entry",
        "SecOp": "ima_free_key_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ima_alloc_key_entry",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__nfp_rtsym_table_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->__nfp_rtsym_table_read",
        "var_path": "retval->retval"
    },
    {
        "API": "svc_rdma_create_xprt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->svc_rdma_create_xprt",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rds_dma_hdrs_alloc",
        "SecOp": "rds_dma_hdrs_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->kvmalloc_node->rds_dma_hdrs_alloc",
        "var_path": "retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "srp_ring_alloc",
        "SecOp": "srp_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->srp_ring_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "mpls_rt_alloc",
        "SecOp": "mpls_rt_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mpls_rt_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "compute_generator_polynomial",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->bch_alloc->compute_generator_polynomial",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xhci_alloc_container_ctx",
        "SecOp": "xhci_free_container_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_alloc_container_ctx",
        "var_path": "retval->retval->arg->arg->retval"
    },
    {
        "API": "dwc3_alloc_scratch_buffers",
        "SecOp": "dwc3_free_scratch_buffers",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->dwc3_alloc_scratch_buffers",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "ltree_add_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ltree_add_entry",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_transport",
        "SecOp": "free_transport",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_transport",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfp_net_pf_alloc_irqs",
        "SecOp": "nfp_net_pf_free_irqs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->nfp_net_pf_alloc_irqs",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "txx9dmac_desc_get",
        "SecOp": "txx9dmac_desc_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->txx9dmac_desc_alloc->txx9dmac_desc_get",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "spi_avmm_bridge_ctx_gen",
        "SecOp": "spi_avmm_bridge_ctx_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->spi_avmm_bridge_ctx_gen",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfp_net_alloc",
        "SecOp": "nfp_net_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->nfp_net_alloc",
        "var_path": "retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "dbc_alloc_request",
        "SecOp": "dbc_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dbc_alloc_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "pci_vpd_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->pci_vpd_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_crush_name",
        "SecOp": "free_crush_name",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_crush_name",
        "var_path": "retval->retval"
    },
    {
        "API": "ofs_to_block",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->ofs_to_block",
        "var_path": "retval->retval"
    },
    {
        "API": "mlx4_qp_alloc_icm",
        "SecOp": "mlx4_qp_free_icm",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_qp_alloc_icm->mlx4_qp_alloc_icm",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "get_hem_table",
        "SecOp": "put_hem_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hns_roce_alloc_hem->hns_roce_table_get->get_hem_table",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "cifs_readdata_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->cifs_readdata_direct_alloc->cifs_readdata_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "ibmebus_chomp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ibmebus_chomp",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_chan_prog",
        "SecOp": "free_chan_prog",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_chan_prog",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "p9_client_stat",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->p9_client_stat",
        "var_path": "retval->retval"
    },
    {
        "API": "b43_calibrate_lo_setting",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->b43_calibrate_lo_setting",
        "var_path": "retval->retval"
    },
    {
        "API": "__seq_open_private",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__seq_open_private",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mthca_alloc_mtt",
        "SecOp": "mthca_free_mtt",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->__mthca_alloc_mtt->mthca_alloc_mtt",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "__nfp_nsp_identify",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__nfp_nsp_identify",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "metadata_dst_alloc",
        "SecOp": "metadata_dst_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->metadata_dst_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "btrfs_get_subvol_name_from_objectid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->btrfs_get_subvol_name_from_objectid",
        "var_path": "retval->retval"
    },
    {
        "API": "sctp_association_new",
        "SecOp": "sctp_association_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sctp_association_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "beiscsi_hba_alloc",
        "SecOp": "beiscsi_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->scsi_host_alloc->iscsi_host_alloc->beiscsi_hba_alloc",
        "var_path": "retval->retval->retval->arg->retval"
    },
    {
        "API": "bpf_map_meta_alloc",
        "SecOp": "bpf_map_meta_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_map_meta_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "rxrpc_alloc_local",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rxrpc_alloc_local",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "stack_alloc",
        "SecOp": "stack_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->stack_alloc",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "intel_link_dev_register",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_link_dev_register",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "get_lznt_ctx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_lznt_ctx",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "f2fs_kzalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->f2fs_kmalloc->f2fs_kzalloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "iovec_from_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->iovec_from_user",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ipmi_alloc_recv_msg",
        "SecOp": "ipmi_free_recv_msg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ipmi_alloc_recv_msg",
        "var_path": "retval->retval"
    },
    {
        "API": "dtsec_config",
        "SecOp": "dtsec_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dtsec_config",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hypfs_dbfs_data_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->hypfs_dbfs_data_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_wr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_wr",
        "var_path": "retval->retval"
    },
    {
        "API": "tegra_mipi_request",
        "SecOp": "tegra_mipi_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tegra_mipi_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "gameport_allocate_port",
        "SecOp": "gameport_free_port",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gameport_allocate_port",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mtk_drm_gem_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mtk_drm_gem_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "tb_tunnel_alloc",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "meson_nand_op_get_dma_safe_input_buf",
        "SecOp": "meson_nand_op_put_dma_safe_input_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->meson_nand_op_get_dma_safe_input_buf",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "alloc_rsm_map_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_rsm_map_table",
        "var_path": "retval->retval"
    },
    {
        "API": "tcf_pedit_keys_ex_parse",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->tcf_pedit_keys_ex_parse",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "wbsd_alloc_mmc",
        "SecOp": "wbsd_free_mmc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mmc_alloc_host->wbsd_alloc_mmc",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "iso_sched_alloc",
        "SecOp": "iso_sched_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iso_sched_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dr_action_create_generic",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dr_action_create_generic",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "intel_engine_coredump_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_engine_coredump_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fib6_info_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fib6_info_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "zalloc_maybe_bootmem",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->zalloc_maybe_bootmem",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "claim_region",
        "SecOp": "free_region",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->pcmcia_make_resource->claim_region",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "ath9k_htc_hw_alloc",
        "SecOp": "ath9k_htc_hw_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ath9k_htc_hw_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlxsw_sp_router_xm_ltable_node_get",
        "SecOp": "mlxsw_sp_router_xm_ltable_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_router_xm_ltable_node_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_ldt_struct",
        "SecOp": "free_ldt_struct",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->alloc_ldt_struct",
        "var_path": "retval->retval"
    },
    {
        "API": "f2fs_kmalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->f2fs_kmalloc",
        "var_path": "retval->retval"
    },
    {
        "API": "sctp_pack_cookie",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sctp_pack_cookie",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cifs_build_devname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->cifs_build_devname",
        "var_path": "retval->retval"
    },
    {
        "API": "allocate_fake_cpuc",
        "SecOp": "free_fake_cpuc",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->allocate_fake_cpuc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dma_alloc_noncontiguous",
        "SecOp": "dma_free_noncontiguous",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->alloc_single_sgt->dma_alloc_noncontiguous",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "vrf_map_elem_alloc",
        "SecOp": "vrf_map_elem_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vrf_map_elem_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_apertures",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_apertures",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "init_wifidev",
        "SecOp": "free_netdev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->netdev_name_node_alloc->netdev_name_node_head_alloc->register_netdevice->register_netdev->init_wifidev",
        "var_path": "retval->retval->arg->arg->arg->retval"
    },
    {
        "API": "elf_dump_thread_status",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->elf_dump_thread_status",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "r10bio_pool_alloc",
        "SecOp": "rbio_pool_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->r10bio_pool_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ea_get",
        "SecOp": "ea_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ea_get",
        "var_path": "retval->arg"
    },
    {
        "API": "smb2_lock_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->smb2_lock_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "erofs_read_metadata",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->erofs_read_metadata",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_reloc_control",
        "SecOp": "free_reloc_control",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_reloc_control",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "atari_stram_alloc",
        "SecOp": "atari_stram_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->atari_stram_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cifs_compose_mount_options",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cifs_compose_mount_options",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ipr_alloc_mem",
        "SecOp": "ipr_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->ipr_alloc_cmd_blks->ipr_alloc_mem",
        "var_path": "retval->retval->arg->arg->arg->arg"
    },
    {
        "API": "qla_enode_alloc",
        "SecOp": "qla_enode_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla_enode_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "get_workspace",
        "SecOp": "put_workspace",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->lzo_alloc_workspace->alloc_workspace->get_workspace",
        "var_path": "retval->retval->retval->retval->arg"
    },
    {
        "API": "alx_alloc_rings",
        "SecOp": "alx_free_rings",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alx_alloc_tx_ring->alx_alloc_rings",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "exiu_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->exiu_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "udma_prep_slave_sg_triggered_tr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->udma_alloc_tr_desc->udma_prep_slave_sg_triggered_tr",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "cas_alloc_rxds",
        "SecOp": "cas_free_rxds",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->cas_page_alloc->cas_alloc_rx_desc->cas_alloc_rxds",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "fuse_sync_bucket_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_sync_bucket_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_event_waiters",
        "SecOp": "free_waiters",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_event_waiters",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sample_restore_get",
        "SecOp": "sample_restore_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mlx5_modify_header_alloc->sample_modify_hdr_get->sample_restore_get",
        "var_path": "retval->retval->retval->retval->arg"
    },
    {
        "API": "mtk_gem_prime_get_sg_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mtk_gem_prime_get_sg_table",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bitmap_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ap_add_sta",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ap_add_sta",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hci_alloc_dev",
        "SecOp": "hci_free_dev",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->hci_alloc_dev_priv->hci_alloc_dev",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "sgl_alloc",
        "SecOp": "sgl_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->sgl_alloc_order->sgl_alloc",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "ql_alloc_buffer_queues",
        "SecOp": "ql_free_buffer_queues",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->ql_alloc_buffer_queues",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "hfs_mdb_get",
        "SecOp": "hfs_mdb_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->hfs_find_init->hfsplus_iget->hfs_btree_open->hfs_mdb_get",
        "var_path": "retval->arg->retval->arg->arg"
    },
    {
        "API": "mmc_test_req_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->mmc_test_req_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "intel_th_device_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_th_device_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dcn31_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn31_afmt_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfc_llc_allocate",
        "SecOp": "nfc_llc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfc_llc_allocate",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bpf_jit_alloc_exec",
        "SecOp": "bpf_jit_free_exec",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->bpf_jit_alloc_exec",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "dcn31_apg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn31_apg_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "i915_gpu_coredump_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i915_gpu_coredump_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "btrfs_alloc_dummy_block_group",
        "SecOp": "btrfs_free_dummy_block_group",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_dummy_block_group",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_mdio_bitbang",
        "SecOp": "free_mdio_bitbang",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mdiobus_alloc_size->mdiobus_alloc->alloc_mdio_bitbang",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "ionic_devlink_alloc",
        "SecOp": "ionic_devlink_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->devlink_alloc_ns->devlink_alloc->ionic_devlink_alloc",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "ubi_alloc_vid_buf",
        "SecOp": "ubi_free_vid_buf",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ubi_alloc_vid_buf",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "btrfs_alloc_device",
        "SecOp": "btrfs_free_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ecc_alloc_digits_space",
        "SecOp": "ecc_free_digits_space",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ecc_alloc_digits_space",
        "var_path": "retval->retval"
    },
    {
        "API": "rds_message_alloc",
        "SecOp": "rds_message_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rds_message_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "j1939_priv_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->j1939_priv_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "uvc_alloc_chain",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->uvc_alloc_chain",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx4_mr_hw_get_mpt",
        "SecOp": "mlx4_mr_hw_put_mpt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->mlx4_alloc_cmd_mailbox->mlx4_mr_hw_get_mpt",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "vboxsf_dir_buf_alloc",
        "SecOp": "vboxsf_dir_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vboxsf_dir_buf_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "mlx5dr_ste_htbl_alloc",
        "SecOp": "mlx5dr_ste_htbl_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5dr_ste_htbl_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_trace_uprobe",
        "SecOp": "free_trace_uprobe",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_trace_uprobe",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ocfs2_new_path_from_et",
        "SecOp": "ocfs2_free_path",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ocfs2_new_path->ocfs2_new_path_from_et",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "kpp_request_alloc",
        "SecOp": "kpp_request_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->kpp_request_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "gsmi_buf_alloc",
        "SecOp": "gsmi_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gsmi_buf_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_srq_queue",
        "SecOp": "free_srq_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_srq_queue",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "scmi_get_handler",
        "SecOp": "scmi_put_handler",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->scmi_allocate_event_handler->__scmi_event_handler_get_ops->scmi_get_handler",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "resource_list_create_entry",
        "SecOp": "resource_list_free_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->resource_list_create_entry",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_multipath",
        "SecOp": "free_multipath",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_multipath",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__rvt_alloc_mr",
        "SecOp": "__rvt_free_mr",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__rvt_alloc_mr",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ovl_encode_real_fh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_encode_real_fh",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nouveau_pfns_alloc",
        "SecOp": "nouveau_pfns_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nouveau_pfns_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "stub_device_alloc",
        "SecOp": "stub_device_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->stub_device_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__mlx4_alloc_mtt_range",
        "SecOp": "__mlx4_free_mtt_range",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->mlx4_table_get_range->__mlx4_alloc_mtt_range",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "pmc_data_allocate",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pmc_data_allocate",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfcsim_link_new",
        "SecOp": "nfcsim_link_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfcsim_link_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "xhci_dbc_ring_alloc",
        "SecOp": "dbc_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xhci_dbc_ring_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bch_init",
        "SecOp": "bch_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->bch_alloc->compute_generator_polynomial->bch_init",
        "var_path": "retval->retval->arg->retval"
    },
    {
        "API": "devlink_alloc_ns",
        "SecOp": "devlink_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->devlink_alloc_ns",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "new_tape_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->new_tape_buffer",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "d40_hw_detect_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->d40_hw_detect_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "vlan_info_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vlan_info_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ipc_mmio_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ipc_mmio_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfp_eth_read_ports",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__nfp_eth_read_ports->nfp_eth_read_ports",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "tty_ldisc_get",
        "SecOp": "tty_ldisc_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->tty_ldisc_get",
        "var_path": "retval->retval"
    },
    {
        "API": "dma_resv_list_alloc",
        "SecOp": "dma_resv_list_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->dma_resv_list_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "vdic_get_ipu_resources",
        "SecOp": "vdic_put_ipu_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ipu_idmac_get->vdic_get_ipu_resources",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "nfs4_label_alloc",
        "SecOp": "nfs4_label_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_label_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ocfs2_allocate_refcount_tree",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocfs2_allocate_refcount_tree",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "dummy_ops_init_args",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dummy_ops_init_args",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mei_msg_hdr_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mei_msg_hdr_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nvmet_rdma_alloc_queue",
        "SecOp": "nvmet_rdma_free_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->nvmet_rdma_alloc_cmd->nvmet_rdma_alloc_cmds->nvmet_rdma_alloc_queue",
        "var_path": "retval->arg->arg->retval"
    },
    {
        "API": "afs_alloc_operation",
        "SecOp": "afs_put_operation",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->afs_alloc_operation",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "intel_connector_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_connector_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ed_alloc",
        "SecOp": "ed_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->ed_alloc",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "rxe_queue_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rxe_queue_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_conn",
        "SecOp": "free_conn",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_conn",
        "var_path": "retval->retval"
    },
    {
        "API": "fsverity_create_info",
        "SecOp": "fsverity_free_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->fsverity_prepare_hash_state->fsverity_init_merkle_tree_params->fsverity_create_info",
        "var_path": "retval->retval->arg->retval"
    },
    {
        "API": "btrfs_alloc_block_rsv",
        "SecOp": "btrfs_free_block_rsv",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->btrfs_alloc_block_rsv",
        "var_path": "retval->retval"
    },
    {
        "API": "rtw89_hex2bin_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->rtw89_hex2bin_user",
        "var_path": "retval->retval"
    },
    {
        "API": "mlx5e_int_port_metadata_alloc",
        "SecOp": "mlx5e_int_port_metadata_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mapping_add->mlx5e_int_port_metadata_alloc",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "i3c_master_alloc_i3c_dev",
        "SecOp": "i3c_master_free_i3c_dev",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i3c_master_alloc_i3c_dev",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlx5_db_alloc",
        "SecOp": "mlx5_db_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mlx5_alloc_db_pgdir->mlx5_db_alloc_node->mlx5_db_alloc",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "ftrace_alloc_direct_func",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ftrace_alloc_direct_func",
        "var_path": "retval->retval"
    },
    {
        "API": "btrfs_printable_features",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->btrfs_printable_features",
        "var_path": "retval->retval"
    },
    {
        "API": "netlbl_secattr_alloc",
        "SecOp": "netlbl_secattr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->netlbl_secattr_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ip6addrlbl_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ip6addrlbl_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "read_rds_samples",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->read_rds_samples",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "pl08x_init_txd",
        "SecOp": "pl08x_free_txd",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->pl08x_get_txd->pl08x_init_txd",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "objagg_hints_get",
        "SecOp": "objagg_hints_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->objagg_hints_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "svm_range_bo_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->svm_range_bo_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mlxsw_sp_fid_8021d_get",
        "SecOp": "mlxsw_sp_fid_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_fid_get->mlxsw_sp_fid_8021d_get",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "ecryptfs_readlink_lower",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->ecryptfs_parse_tag_70_packet->ecryptfs_decode_and_decrypt_filename->ecryptfs_readlink_lower",
        "var_path": "retval->arg->arg->retval"
    },
    {
        "API": "hns3_backup_ringparam",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->hns3_backup_ringparam",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "qat_uclo_map_chunk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qat_uclo_map_chunk",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mei_io_cb_init",
        "SecOp": "mei_io_cb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mei_io_cb_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "zfcp_fsf_abort_fcp_cmnd",
        "SecOp": "zfcp_fsf_req_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->zfcp_fsf_alloc->zfcp_fsf_req_create->zfcp_fsf_abort_fcp_cmnd",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "dmabuf_exp_wait_obj_new",
        "SecOp": "dmabuf_exp_wait_obj_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dmabuf_exp_wait_obj_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "fotg210_ep_alloc_request",
        "SecOp": "fotg210_ep_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fotg210_ep_alloc_request",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "iscsi_alloc_session",
        "SecOp": "iscsi_free_session",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iscsi_alloc_session",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "usbip_alloc_iso_desc_pdu",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->usbip_alloc_iso_desc_pdu",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qcom_swrm_stream_alloc_ports",
        "SecOp": "qcom_swrm_stream_free_ports",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->sdw_alloc_master_rt->sdw_stream_add_master->qcom_swrm_stream_alloc_ports",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "debug_info_copy",
        "SecOp": "debug_info_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->debug_info_alloc->debug_info_copy",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sas_port_alloc",
        "SecOp": "sas_port_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sas_port_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "__fetch_rtas_last_error",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->__fetch_rtas_last_error",
        "var_path": "retval->retval"
    },
    {
        "API": "ceph_mdsc_open_export_target_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->register_session->__open_export_target_session->ceph_mdsc_open_export_target_session",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "rockchip_gem_get_pages",
        "SecOp": "rockchip_gem_put_pages",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->drm_prime_pages_to_sg->rockchip_gem_get_pages",
        "var_path": "retval->retval->arg"
    },
    {
        "API": "nfs_alloc_client",
        "SecOp": "nfs_free_client",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs_alloc_client",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sample_restore_get",
        "SecOp": "sample_restore_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sample_restore_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qedf_cmd_mgr_alloc",
        "SecOp": "qedf_cmd_mgr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__vmalloc_node->vzalloc->qedf_cmd_mgr_alloc",
        "var_path": "retval->retval->retval->retval->retval->retval"
    },
    {
        "API": "ax25_send_frame",
        "SecOp": "ax25_cb_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ax25_create_cb->ax25_send_frame",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "alloc_opinfo",
        "SecOp": "free_opinfo",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_opinfo",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "sctp_auth_shkey_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sctp_auth_shkey_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "vhost_net_ubuf_alloc",
        "SecOp": "vhost_net_ubuf_put_wait_and_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vhost_net_ubuf_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "alloc_cprb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_cprb",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ubd_alloc_req",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ubd_alloc_req",
        "var_path": "retval->retval"
    },
    {
        "API": "qcom_mdt_read_metadata",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->qcom_mdt_read_metadata",
        "var_path": "retval->retval"
    },
    {
        "API": "isert_device_get",
        "SecOp": "isert_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->isert_device_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_pd",
        "SecOp": "free_pd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__alloc_pd->alloc_pd",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "mon_alloc_mem",
        "SecOp": "mon_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mon_alloc_mem",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "netvsc_devinfo_get",
        "SecOp": "netvsc_devinfo_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->netvsc_devinfo_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hl_cs_allocate_job",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hl_cs_allocate_job",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "i2c_get_dma_safe_msg_buf",
        "SecOp": "i2c_put_dma_safe_msg_buf",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i2c_get_dma_safe_msg_buf",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "handle_ffa_rpc_func_cmd_shm_alloc",
        "SecOp": "handle_ffa_rpc_func_cmd_shm_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tee_shm_alloc->handle_ffa_rpc_func_cmd_shm_alloc",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "cpufreq_policy_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cpufreq_policy_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "bfad_fcxp_map_sg",
        "SecOp": "bfad_fcxp_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bfad_fcxp_map_sg",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "alloc_crush_loc",
        "SecOp": "free_crush_loc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_crush_loc",
        "var_path": "retval->retval"
    },
    {
        "API": "bnxt_tc_get_tunnel_handle",
        "SecOp": "bnxt_tc_put_tunnel_handle",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->bnxt_tc_get_tunnel_node->bnxt_tc_get_encap_handle->bnxt_tc_get_tunnel_handle",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "xhci_segment_alloc",
        "SecOp": "xhci_segment_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_segment_alloc",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "hugepage_new_subpool",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hugepage_new_subpool",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "pci_alloc_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_alloc_dev",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ubifs_tnc_next_ent",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->ubifs_tnc_next_ent",
        "var_path": "retval->retval"
    },
    {
        "API": "hmm_bo_alloc_pages",
        "SecOp": "hmm_bo_free_pages",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->alloc_user_pages->hmm_bo_alloc_pages",
        "var_path": "retval->retval->arg->arg"
    },
    {
        "API": "genprobe_ident_chips",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->genprobe_ident_chips",
        "var_path": "retval->retval"
    },
    {
        "API": "ip_vs_dest_dst_alloc",
        "SecOp": "ip_vs_dest_dst_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ip_vs_dest_dst_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "cxl_context_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cxl_context_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "memac_config",
        "SecOp": "memac_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->memac_config",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "ipoib_mcast_iter_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ipoib_mcast_iter_init",
        "var_path": "retval->retval"
    },
    {
        "API": "bcm4908_enet_dma_alloc",
        "SecOp": "bcm4908_enet_dma_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bcm4908_dma_alloc_buf_descs->bcm4908_enet_dma_alloc",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "slhc_init",
        "SecOp": "slhc_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->slhc_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfp_flower_non_repr_priv_get",
        "SecOp": "__nfp_flower_non_repr_priv_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_flower_non_repr_priv_get",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "mdio_i2c_alloc",
        "SecOp": "mdiobus_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mdiobus_alloc_size->mdiobus_alloc->mdio_i2c_alloc",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "tb_property_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_property_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "prestera_devlink_alloc",
        "SecOp": "prestera_devlink_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->devlink_alloc_ns->devlink_alloc->prestera_devlink_alloc",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "nsim_bpf_map_alloc",
        "SecOp": "nsim_bpf_map_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->nsim_map_alloc_elem->nsim_bpf_map_alloc",
        "var_path": "retval->arg->arg"
    },
    {
        "API": "zfcp_fsf_fcp_task_mgmt",
        "SecOp": "zfcp_fsf_req_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->zfcp_fsf_alloc->zfcp_fsf_req_create->zfcp_fsf_fcp_task_mgmt",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "bpf_jit_binary_alloc",
        "SecOp": "bpf_jit_binary_free",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 4,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->bpf_jit_alloc_exec->bpf_jit_binary_alloc",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "fib_info_hash_alloc",
        "SecOp": "fib_info_hash_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fib_info_hash_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "genl_dumpit_info_alloc",
        "SecOp": "genl_dumpit_info_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->genl_dumpit_info_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "vhost_vsock_alloc_pkt",
        "SecOp": "virtio_transport_free_pkt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vhost_vsock_alloc_pkt",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "new_addr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->uml_kmalloc->new_addr",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "hsi_alloc_msg",
        "SecOp": "hsi_free_msg",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hsi_alloc_msg",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "lpfc_alloc_ct_rsp",
        "SecOp": "lpfc_free_ct_rsp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->lpfc_mbuf_alloc->lpfc_alloc_ct_rsp",
        "var_path": "retval->retval->arg->arg->arg"
    },
    {
        "API": "init_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->init_sg",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "audit_unpack_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->audit_unpack_string",
        "var_path": "retval->retval"
    },
    {
        "API": "mlx5_alloc_bfreg",
        "SecOp": "mlx5_free_bfreg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->alloc_uars_page->alloc_bfreg->mlx5_alloc_bfreg",
        "var_path": "retval->retval->retval->arg->arg"
    },
    {
        "API": "alloc_buf",
        "SecOp": "free_buf",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->alloc_buf",
        "var_path": "retval->retval"
    },
    {
        "API": "__mlx4_alloc_mtt_range",
        "SecOp": "__mlx4_free_mtt_range",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->mlx4_table_get_range->__mlx4_alloc_mtt_range",
        "var_path": "retval->retval->arg->arg->retval"
    },
    {
        "API": "agp_alloc_bridge",
        "SecOp": "agp_put_bridge",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->agp_alloc_bridge",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "get_hashentry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_hashentry",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qfprom_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read->qfprom_read",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "cfi_read_pri",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->cfi_read_pri",
        "var_path": "retval->retval"
    },
    {
        "API": "get_rndis_device",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_rndis_device",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "btrfs_alloc_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qe_udc_config",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qe_udc_config",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_pgpath",
        "SecOp": "free_pgpath",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_pgpath",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "alloc_kernel_wrid",
        "SecOp": "free_kernel_wrid",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_kernel_wrid",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "sgx_encl_page_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sgx_encl_page_alloc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "scmi_get_handler",
        "SecOp": "scmi_put_handler",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->scmi_allocate_event_handler->__scmi_event_handler_get_ops->scmi_get_handler",
        "var_path": "retval->retval->retval->retval->retval"
    },
    {
        "API": "qed_dcbnl_get_dcbx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qed_dcbnl_get_dcbx",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "capture_regs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->capture_regs",
        "var_path": "retval->retval"
    },
    {
        "API": "debug_get_user_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->debug_get_user_string",
        "var_path": "retval->retval"
    },
    {
        "API": "nla_memdup_cookie",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nla_memdup_cookie",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "nfs4_decode_mp_ds_addr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nfs4_pnfs_ds_addr_alloc->nfs4_decode_mp_ds_addr",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "akcipher_request_alloc",
        "SecOp": "akcipher_request_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->akcipher_request_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "snd_util_memhdr_new",
        "SecOp": "snd_util_memhdr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->snd_util_memhdr_new",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "lockres_init",
        "SecOp": "lockres_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lockres_init",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "axi_dmac_alloc_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->axi_dmac_alloc_desc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cifs_lock_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->cifs_lock_init",
        "var_path": "retval->retval"
    },
    {
        "API": "cfmuxl_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cfmuxl_create",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "iscsit_alloc_conn",
        "SecOp": "iscsit_free_conn",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iscsit_alloc_conn",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "qib_user_sdma_alloc_header",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->qib_user_sdma_alloc_header",
        "var_path": "retval->retval"
    },
    {
        "API": "intel_crtc_state_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->intel_crtc_state_alloc",
        "var_path": "retval->retval"
    },
    {
        "API": "get_vmcoreinfo_old",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_vmcoreinfo_old",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "f2fs_acl_to_disk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->f2fs_kmalloc->f2fs_acl_to_disk",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "cci_pci_create_irq_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->cci_pci_create_irq_table",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "scmi_get_handler",
        "SecOp": "scmi_put_handler",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->scmi_allocate_event_handler->__scmi_event_handler_get_ops->scmi_get_handler",
        "var_path": "retval->retval->retval->retval->arg"
    },
    {
        "API": "ti_sci_inta_msi_alloc_descs",
        "SecOp": "ti_sci_inta_msi_free_descs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_msi_entry->ti_sci_inta_msi_alloc_descs",
        "var_path": "retval->retval->retval->arg"
    },
    {
        "API": "tb_property_create_dir",
        "SecOp": "tb_property_free_dir",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_property_create_dir",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "build_ac_header_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->build_ac_header_desc",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "armpmu_alloc",
        "SecOp": "armpmu_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__armpmu_alloc->armpmu_alloc",
        "var_path": "retval->retval->retval->retval"
    },
    {
        "API": "wilc_alloc_work",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wilc_alloc_work",
        "var_path": "retval->retval->retval"
    },
    {
        "API": "svc_rdma_write_info_alloc",
        "SecOp": "svc_rdma_write_info_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->svc_rdma_write_info_alloc",
        "var_path": "retval->retval"
    }
]