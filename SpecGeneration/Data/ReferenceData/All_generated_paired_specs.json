[
    {
        "API": "aca_get",
        "SecOp": "aca_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->aca_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "zfcp_unit_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->_zfcp_unit_find->zfcp_unit_find",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "blkdev_get_no_open",
        "SecOp": "blkdev_put_no_open",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->blkdev_get_no_open",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_proc_task_net",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_net->get_proc_task_net",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "sctp_addrs_lookup_transport",
        "SecOp": "sctp_transport_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->sctp_transport_hold->sctp_addrs_lookup_transport",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvme_rdma_find_get_device",
        "SecOp": "nvme_rdma_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvme_rdma_dev_get->nvme_rdma_find_get_device",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "l2cap_global_fixed_chan",
        "SecOp": "l2cap_chan_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->l2cap_chan_hold->l2cap_global_fixed_chan",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlxsw_sp_router_xm_ltable_node_get",
        "SecOp": "mlxsw_sp_router_xm_ltable_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->mlxsw_sp_router_xm_ltable_node_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_label",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "sunrpc_cache_update",
        "SecOp": "cache_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->cache_get->sunrpc_cache_update",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kobject_get",
        "SecOp": "kobject_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->kobject_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pmf_get_function",
        "SecOp": "pmf_put_function",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->pmf_get_function",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_get_next_dma_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->__of_get_dma_parent->of_get_next_dma_parent",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "tty_kref_get",
        "SecOp": "tty_kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->tty_kref_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "svc_xprt_get",
        "SecOp": "svc_xprt_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->svc_xprt_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_session",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->alloc_session",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "in6_dev_get",
        "SecOp": "in6_dev_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->in6_dev_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "inet_fib_lookup_dev",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->inet_fib_lookup_dev",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "phonet_route_output",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->phonet_device_get->phonet_route_output",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ip_vs_conn_in_get",
        "SecOp": "__ip_vs_conn_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->__ip_vs_conn_get->__ip_vs_conn_in_get->ip_vs_conn_in_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_nth_filter",
        "SecOp": "__put_seccomp_filter",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->__get_seccomp_filter->get_nth_filter",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_request_mark_eio",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->i915_request_get->i915_request_mark_eio",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pcistub_device_find",
        "SecOp": "pcistub_device_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->pcistub_device_get->pcistub_device_find",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ionic_lif_alloc",
        "SecOp": "ionic_lif_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->alloc_netdev_mqs->alloc_etherdev_mqs->ionic_lif_alloc",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "hl_cb_kernel_create",
        "SecOp": "hl_cb_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->hl_cb_get->hl_cb_kernel_create",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "muxnet_get",
        "SecOp": "muxnet_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->muxnet_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "kunit_find_named_resource",
        "SecOp": "kunit_put_resource",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->kunit_get_resource->kunit_find_resource->kunit_find_named_resource",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_xdomain_find_by_uuid",
        "SecOp": "tb_xdomain_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "get_device->tb_xdomain_get->tb_xdomain_find_by_uuid",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nitrox_get_first_device",
        "SecOp": "nitrox_put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->nitrox_get_first_device",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "eventfd_ctx_fileget",
        "SecOp": "eventfd_ctx_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->eventfd_ctx_fileget",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wg_noise_keypair_get",
        "SecOp": "wg_noise_keypair_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->wg_noise_keypair_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__i915_vma_get",
        "SecOp": "__i915_vma_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->__i915_vma_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_label_alloc",
        "SecOp": "label_free_or_put_new",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label->aa_alloc_proxy->aa_label_alloc",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvmet_fc_tgtport_get",
        "SecOp": "nvmet_fc_tgtport_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvmet_fc_tgtport_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "capiminor_get",
        "SecOp": "capiminor_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->tty_port_get->capiminor_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "handle_ffa_rpc_func_cmd_shm_alloc",
        "SecOp": "handle_ffa_rpc_func_cmd_shm_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->teedev_ctx_get->tee_shm_alloc->handle_ffa_rpc_func_cmd_shm_alloc",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_hardif_get_active",
        "SecOp": "batadv_hardif_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->batadv_hardif_get_active",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_orig_router_get",
        "SecOp": "batadv_neigh_node_put",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->batadv_orig_router_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nsinfo__get",
        "SecOp": "nsinfo__put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->nsinfo__get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "record_registers",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->i915_request_get->record_registers",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fw_device_get",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->fw_device_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "btrfs_next_block_group",
        "SecOp": "btrfs_put_block_group",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->btrfs_get_block_group->btrfs_next_block_group",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "copy_cgroup_ns",
        "SecOp": "put_cgroup_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_cgroup_ns->copy_cgroup_ns",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pnfs_get_commit_array",
        "SecOp": "pnfs_put_commit_array",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->pnfs_get_commit_array",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_compatible_audio_device",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->__of_get_next_child->of_get_next_child->find_compatible_audio_device",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rnbd_srv_get_or_create_srv_dev",
        "SecOp": "rnbd_put_srv_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rnbd_srv_find_or_add_srv_dev->rnbd_srv_get_or_create_srv_dev",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "sun50i_iommu_alloc_page_table",
        "SecOp": "sun50i_iommu_free_page_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->kmem_cache_zalloc->sun50i_iommu_alloc_page_table",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "fsnotify_get_mark",
        "SecOp": "fsnotify_put_mark",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->fsnotify_get_mark",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "xfs_blkdev_get",
        "SecOp": "xfs_blkdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 10,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->blkdev_get_no_open->blkdev_get_by_dev->blkdev_get_by_path->xfs_blkdev_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "rnbd_clt_get_dev",
        "SecOp": "rnbd_clt_put_dev",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->rnbd_clt_get_dev",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_gem_context_lookup",
        "SecOp": "i915_gem_context_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->__context_lookup->i915_gem_context_lookup",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_net_ns_by_id",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->maybe_get_net->get_net_ns_by_id",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dlm_get_lock_resource",
        "SecOp": "dlm_lockres_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dlm_lockres_get->__dlm_insert_lockres->dlm_get_lock_resource",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cpu_rmap_get",
        "SecOp": "cpu_rmap_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->cpu_rmap_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_profile",
        "SecOp": "aa_put_profile",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->aa_get_profile",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "btrfs_get_fs_root_commit_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->btrfs_grab_root->btrfs_lookup_fs_root->btrfs_get_fs_root_commit_root",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "l2cap_conn_get",
        "SecOp": "l2cap_conn_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->l2cap_conn_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iio_buffer_block_get",
        "SecOp": "iio_buffer_block_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->iio_buffer_block_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "phy_get",
        "SecOp": "phy_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->phy_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_tt_req_node_new",
        "SecOp": "batadv_tt_req_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_tt_req_node_new",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dsa_dev_to_net_device",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dsa_dev_to_net_device",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "gb_connection_hd_find",
        "SecOp": "gb_connection_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->gb_connection_get->gb_connection_hd_find",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_subchannel_by_schid",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "get_device->bus_find_device->get_subchannel_by_schid",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kref_get",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 99,
        "depth": 2,
        "API_path": "get_device->kobject_get->kref_get",
        "var_path": "arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "core_get_se_deve_from_rtpi",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->core_get_se_deve_from_rtpi",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "amp_ctrl_lookup",
        "SecOp": "amp_ctrl_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->amp_ctrl_get->amp_ctrl_lookup",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nr_dev_get",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->nr_dev_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dss_of_port_get_parent_device",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_get_parent->dss_of_port_get_parent_device",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_switch_find_by_link_depth",
        "SecOp": "tb_switch_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "get_device->bus_find_device->tb_switch_find_by_link_depth",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_pm_opp_find_level_ceil",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dev_pm_opp_get->dev_pm_opp_find_level_ceil",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rc_dev_get_from_fd",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "get_device->rc_dev_get_from_fd",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_find_device_by_of_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "l2tp_tunnel_get_nth",
        "SecOp": "l2tp_tunnel_dec_refcount",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->l2tp_tunnel_get_nth",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "inet_diag_find_one_icsk",
        "SecOp": "sock_gen_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->inet_lookup->inet_diag_find_one_icsk",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "platform_find_device_by_driver",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->bus_find_device->platform_find_device_by_driver",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aac_lookup_safw_scsi_device",
        "SecOp": "aac_put_safw_scsi_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->scsi_device_get->scsi_device_lookup->aac_lookup_safw_scsi_device",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "llc_lookup_dgram",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->llc_lookup_dgram",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_task_ctx_data",
        "SecOp": "free_task_ctx_data",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->kmem_cache_zalloc->alloc_task_ctx_data",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5_tc_ct_entry_get",
        "SecOp": "mlx5_tc_ct_entry_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->mlx5_tc_ct_entry_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvme_fc_rport_get",
        "SecOp": "nvme_fc_rport_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvme_fc_rport_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_get_class",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "get_device->bus_find_device->pci_get_dev_by_id->pci_get_class",
        "var_path": "arg->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "riocm_get_channel",
        "SecOp": "riocm_put_channel",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->riocm_get_channel",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rproc_get_by_phandle",
        "SecOp": "rproc_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->rproc_get_by_phandle",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "x_to_label",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label->aa_get_newest_label->x_to_label",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scmdev_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->bus_find_device->scmdev_find",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rdma_restrack_get",
        "SecOp": "rdma_restrack_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rdma_restrack_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__inet_lookup_skb",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->__inet_lookup_established->__inet_lookup->__inet_lookup_skb",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "maybe_get_net",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->maybe_get_net",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "blkcg_conf_open_bdev",
        "SecOp": "blkdev_put_no_open",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->blkdev_get_no_open->blkcg_conf_open_bdev",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "j1939_session_get_by_addr_locked",
        "SecOp": "j1939_session_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->j1939_session_get->j1939_session_get_by_addr_locked",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fsl_mc_device_lookup",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child->fsl_mc_device_lookup",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tcf_block_get",
        "SecOp": "tcf_block_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->tcf_block_refcnt_get->tcf_block_get_ext->tcf_block_get",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ceph_mdsc_open_export_target_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->ceph_get_mds_session->__ceph_lookup_mds_session->__open_export_target_session->ceph_mdsc_open_export_target_session",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "siw_mem_id2obj",
        "SecOp": "siw_mem_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->siw_mem_id2obj",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__mei_me_cl_by_uuid_id",
        "SecOp": "mei_me_cl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->mei_me_cl_get->__mei_me_cl_by_uuid_id",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mt7915_pci_get_hif2",
        "SecOp": "mt7915_put_hif2",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->mt7915_pci_get_hif2",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wrap_timeline",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->i915_request_get->wrap_timeline",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rpmsg_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->device_find_child->rpmsg_find_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "sync_file_get_fence",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->sync_file_get_fence",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "class_get",
        "SecOp": "class_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kset_get->class_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_device_lookup_by_target",
        "SecOp": "scsi_device_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->scsi_device_get->scsi_device_lookup_by_target",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "sdtx_device_get",
        "SecOp": "sdtx_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->sdtx_device_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hidp_session_get",
        "SecOp": "hidp_session_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->hidp_session_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "l2tp_nl_session_get",
        "SecOp": "l2tp_session_dec_refcount",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->l2tp_session_inc_refcount->l2tp_tunnel_get_session->l2tp_nl_session_get",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfc_llcp_local_get",
        "SecOp": "nfc_llcp_local_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->nfc_llcp_local_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_vm_alloc_pt_stash",
        "SecOp": "i915_vm_free_pt_stash",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->i915_vm_resv_get->alloc_pt_dma->alloc_pd->i915_vm_alloc_pt_stash",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_hardif_get_by_netdev",
        "SecOp": "batadv_hardif_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->batadv_hardif_get_by_netdev",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "xprt_get",
        "SecOp": "xprt_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->xprt_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_get_phys_base",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->of_node_get->of_get_parent->__of_get_address->of_get_address->of_get_phys_base",
        "var_path": "arg->arg->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "rose_dev_get",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->rose_dev_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rdma_lookup_get_uobject",
        "SecOp": "rdma_lookup_put_uobject",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->lookup_get_idr_uobject->rdma_lookup_get_uobject",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "lookup_fte_locked",
        "SecOp": "tree_put_node",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->tree_get_node->lookup_fte_locked",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_syncobj_get_handle",
        "SecOp": "drm_syncobj_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->drm_syncobj_get->drm_syncobj_get_handle",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_orig_ifinfo_new",
        "SecOp": "batadv_orig_ifinfo_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_orig_ifinfo_new",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wwan_port_get_by_minor",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->class_find_device->wwan_port_get_by_minor",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_device_lookup",
        "SecOp": "scsi_device_put",
        "hasUsage": true,
        "usageCount": 27,
        "depth": 2,
        "API_path": "get_device->scsi_device_get->scsi_device_lookup",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_gem_context_get_eb_vm",
        "SecOp": "i915_vm_put",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->i915_vm_get->i915_gem_context_get_eb_vm",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_pe_total_msi",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->__find_pe_total_msi->find_pe_total_msi",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5_vdpa_alloc_resources",
        "SecOp": "mlx5_vdpa_free_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->i915_vm_resv_get->alloc_pt_dma->alloc_pd->mlx5_vdpa_alloc_resources",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "tty_get_pgrp",
        "SecOp": "put_pid",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_pid->tty_get_pgrp",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_ep",
        "SecOp": "put_ep",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_ep",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_cqc",
        "SecOp": "free_cqc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->hns_roce_table_mhop_get->hns_roce_table_get->alloc_cqc",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__xfrm_state_locate",
        "SecOp": "xfrm_state_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->xfrm_state_hold_rcu->__xfrm_state_lookup->__xfrm_state_locate",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__mei_me_cl_by_uuid",
        "SecOp": "mei_me_cl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->mei_me_cl_get->__mei_me_cl_by_uuid",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_graph_get_next_endpoint",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->__of_get_next_child->of_get_next_child->of_graph_get_next_endpoint",
        "var_path": "arg->arg->arg->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "nr_dev_first",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->nr_dev_first",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dma_fence_get_rcu",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->dma_fence_get_rcu",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_proxy",
        "SecOp": "aa_put_proxy",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->aa_get_proxy",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5e_ktls_priv_rx_get",
        "SecOp": "mlx5e_ktls_priv_rx_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->mlx5e_ktls_priv_rx_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "submit_async_request",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->submit_async_request",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "vmci_ctx_get",
        "SecOp": "vmci_ctx_put",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->vmci_ctx_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hns_roce_table_get",
        "SecOp": "hns_roce_table_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->hns_roce_table_mhop_get->hns_roce_table_get",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "enclosure_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->enclosure_find",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_cxl_adapter",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->get_cxl_adapter",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "in_dev_get",
        "SecOp": "in_dev_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->in_dev_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rpc_sysfs_xprt_kobj_get_xprt_switch",
        "SecOp": "xprt_switch_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->xprt_switch_get->rpc_sysfs_xprt_kobj_get_xprt_switch",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iommu_tce_table_get",
        "SecOp": "iommu_tce_table_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->iommu_tce_table_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_pm_opp_xlate_required_opp",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dev_pm_opp_get->dev_pm_opp_xlate_required_opp",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_service_by_port",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->find_service_by_port",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pde_get",
        "SecOp": "pde_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->pde_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "etnaviv_iommu_context_get",
        "SecOp": "etnaviv_iommu_context_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->etnaviv_iommu_context_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "sg_get_dev",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->sg_get_dev",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "udp4_lib_lookup",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->udp4_lib_lookup",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_oa_vma",
        "SecOp": "i915_vma_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->drm_gem_object_get->i915_gem_object_get->i915_vma_get->get_oa_vma",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_get_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->pci_get_dev_by_id->pci_get_subsys->pci_get_device",
        "var_path": "arg->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "map__get",
        "SecOp": "map__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->map__get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_port_find_retimer",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child->tb_port_find_retimer",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dlm_lock_get",
        "SecOp": "dlm_lock_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->dlm_lock_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_get_softif_from_info",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_index->batadv_get_softif_from_info",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_orig_node_vlan_new",
        "SecOp": "batadv_orig_node_vlan_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_orig_node_vlan_new",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fastrpc_channel_ctx_get",
        "SecOp": "fastrpc_channel_ctx_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->fastrpc_channel_ctx_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "tap_get_tap_dev",
        "SecOp": "tap_put_tap_dev",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->tap_get_tap_dev",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "try_get_task_stack",
        "SecOp": "put_task_stack",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->try_get_task_stack",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "fcloop_alloc_nport",
        "SecOp": "fcloop_nport_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->fcloop_nport_get->fcloop_alloc_nport",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "thermal_of_build_thermal_zone",
        "SecOp": "of_thermal_free_zone",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->thermal_of_populate_trip->thermal_of_build_thermal_zone",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfs_find_open_context",
        "SecOp": "put_nfs_open_context",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->get_nfs_open_context->nfs_find_open_context",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "q6asm_get_audio_client",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->q6asm_get_audio_client",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "btrfs_get_block_group",
        "SecOp": "btrfs_put_block_group",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->btrfs_get_block_group",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "isci_get_device",
        "SecOp": "isci_put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->isci_get_device",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__dlm_lookup_lockres_full",
        "SecOp": "dlm_lockres_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dlm_lockres_get->__dlm_lookup_lockres_full",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "xgbe_get_phy_pdev",
        "SecOp": "platform_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->xgbe_of_get_phy_pdev->xgbe_get_phy_pdev",
        "var_path": "arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wg_peer_get",
        "SecOp": "wg_peer_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->wg_peer_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_gem_context_get",
        "SecOp": "i915_gem_context_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->i915_gem_context_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "kunit_find_resource",
        "SecOp": "kunit_put_resource",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->kunit_get_resource->kunit_find_resource",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "coredump_next_context",
        "SecOp": "put_spu_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->get_spu_context->coredump_next_context",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mm_alloc_pgd",
        "SecOp": "mm_free_pgd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->pgd_alloc->mm_alloc_pgd",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "svc_export_update",
        "SecOp": "exp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->cache_get->sunrpc_cache_update->svc_export_update",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_node_get",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 56,
        "depth": 2,
        "API_path": "get_device->kobject_get->of_node_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mpt3sas_get_pdev_from_target",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->pcie_device_get->__mpt3sas_get_pdev_from_target->mpt3sas_get_pdev_from_target",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_get_address",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->of_get_parent->__of_get_address->of_get_address",
        "var_path": "arg->arg->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_multi_transaction",
        "SecOp": "put_multi_transaction",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->get_multi_transaction",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "teedev_ctx_get",
        "SecOp": "teedev_ctx_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->teedev_ctx_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "fs_context_for_submount",
        "SecOp": "put_fs_context",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_user_ns->alloc_fs_context->fs_context_for_submount",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_alloc_target",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->__scsi_find_target->scsi_alloc_target",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "snd_hda_codec_pcm_get",
        "SecOp": "snd_hda_codec_pcm_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->snd_hda_codec_pcm_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "tty_port_get",
        "SecOp": "tty_port_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->tty_port_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "fwtty_port_get",
        "SecOp": "fwtty_port_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->fwtty_port_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_grant_rsb",
        "SecOp": "put_rsb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->hold_rsb->find_grant_rsb",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_get_ibm_chip_id",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_get_next_parent->of_get_ibm_chip_id",
        "var_path": "arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "vsp1_video_pipeline_get",
        "SecOp": "vsp1_video_pipeline_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->vsp1_video_pipeline_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_nfs_open_context",
        "SecOp": "put_nfs_open_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->get_nfs_open_context",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_ctx",
        "SecOp": "put_ctx",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_ctx",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_audio_device",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->__of_get_next_child->of_get_next_child->find_audio_device",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_graph_get_remote_port_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 28,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_graph_get_port_parent->of_graph_get_remote_port_parent",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "_find_freq_ceil",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dev_pm_opp_get->_find_freq_ceil",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "crypto_find_alg",
        "SecOp": "crypto_mod_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 9,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->crypto_alg_get->crypto_mod_get->crypto_larval_wait->crypto_larval_lookup->crypto_alg_mod_lookup->crypto_find_alg",
        "var_path": "arg->arg->arg->arg->retval->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "perf_cpu_map__get",
        "SecOp": "perf_cpu_map__put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->perf_cpu_map__get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wg_pubkey_hashtable_lookup",
        "SecOp": "wg_peer_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->wg_peer_get_maybe_zero->wg_pubkey_hashtable_lookup",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_last_bonding_get",
        "SecOp": "batadv_orig_ifinfo_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_last_bonding_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "next_service_by_instance",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->next_service_by_instance",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "client_get",
        "SecOp": "client_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->client_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_nfs4_file",
        "SecOp": "put_nfs4_file",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_nfs4_file",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "copy_utsname",
        "SecOp": "put_uts_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_uts_ns->copy_utsname",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "l2cap_global_chan_by_psm",
        "SecOp": "l2cap_chan_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->l2cap_chan_hold->l2cap_global_chan_by_psm",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvme_get_ctrl",
        "SecOp": "nvme_put_ctrl",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "get_device->nvme_get_ctrl",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_cgroup_ns",
        "SecOp": "put_cgroup_ns",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_cgroup_ns",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_get_task_by_vpid",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_task_struct->find_get_task_by_vpid",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_get_func0_dev",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->pci_dev_get->pci_get_slot->pci_get_func0_dev",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_mux_chip_by_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_of_node->of_find_mux_chip_by_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_space",
        "SecOp": "put_space",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->config_item_get->config_group_find_item->get_space",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fpga_mgr_get",
        "SecOp": "fpga_mgr_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->class_find_device->fpga_mgr_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "j1939_ecu_get_by_name_locked",
        "SecOp": "j1939_ecu_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->j1939_ecu_get->j1939_ecu_get_by_name_locked",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rdma_restrack_get_byid",
        "SecOp": "rdma_restrack_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rdma_restrack_get->rdma_restrack_get_byid",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tty_driver_lookup_tty",
        "SecOp": "tty_kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->tty_kref_get->tty_driver_lookup_tty",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_pd",
        "SecOp": "free_pd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->i915_vm_resv_get->alloc_pt_dma->alloc_pd",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "sp_get",
        "SecOp": "sp_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->sp_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hl_cb_get",
        "SecOp": "hl_cb_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->hl_cb_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fc_exch_mgr_alloc",
        "SecOp": "fc_exch_mgr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->fc_exch_mgr_add->fc_exch_mgr_alloc",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_dax_region",
        "SecOp": "dax_region_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->alloc_dax_region",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__nvmem_device_get",
        "SecOp": "__nvmem_device_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->__nvmem_device_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "thread__get",
        "SecOp": "thread__put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->thread__get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "handle_rpc_func_cmd_shm_alloc",
        "SecOp": "handle_rpc_func_cmd_shm_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->teedev_ctx_get->tee_shm_alloc->handle_rpc_func_cmd_shm_alloc",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__reset_control_get",
        "SecOp": "__reset_control_put_internal",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->__reset_control_get_internal->__reset_control_get_from_lookup->__reset_control_get",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "efct_node_find",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->efct_node_find",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cipso_v4_doi_getdef",
        "SecOp": "cipso_v4_doi_putdef",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->cipso_v4_doi_getdef",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ipmi_si_remove_by_data",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->ipmi_si_remove_by_data",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "host1x_channel_get",
        "SecOp": "host1x_channel_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->host1x_channel_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_current_rng_nolock",
        "SecOp": "put_rng",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->get_current_rng_nolock",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_find_router",
        "SecOp": "batadv_neigh_node_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->batadv_orig_router_get->batadv_find_router",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_graph_get_port_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_get_next_parent->of_graph_get_port_parent",
        "var_path": "arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_spi_find_controller_by_adev",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->class_find_device->acpi_spi_find_controller_by_adev",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_path_to_platform_device",
        "SecOp": "platform_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->of_path_to_platform_device",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dma_fence_get_stub",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->dma_fence_get_stub",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_lec_by_itfnum",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_name->find_lec_by_itfnum",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_get",
        "SecOp": "bus_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->kset_get->bus_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_css_set",
        "SecOp": "put_css_set",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_css_set",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "_get_cluster_clk_and_freq_table",
        "SecOp": "_put_cluster_clk_and_freq_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->dev_pm_opp_get_opp_count->_get_cluster_clk_and_freq_table",
        "var_path": "arg->arg->arg->arg->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "coresight_find_device_by_fwnode",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->coresight_find_device_by_fwnode",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvmet_fc_find_target_queue",
        "SecOp": "nvmet_fc_tgt_q_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvmet_fc_tgt_q_get->nvmet_fc_find_target_queue",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dma_fence_get",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fwnode_phy_find_device",
        "SecOp": "phy_device_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->fwnode_mdio_find_device->fwnode_phy_find_device",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_request_get",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 69,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->i915_request_get",
        "var_path": "arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ocxl_afu_get",
        "SecOp": "ocxl_afu_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->ocxl_afu_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_task_pid",
        "SecOp": "put_pid",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_pid->get_task_pid",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_net",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_net",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_ccwdev_by_dev_id",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->bus_find_device->get_ccwdev_by_dev_id",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "w1_alloc_dev",
        "SecOp": "w1_free_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->device_add->device_register->w1_alloc_dev",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ata_host_get",
        "SecOp": "ata_host_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->ata_host_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "siw_qp_id2obj",
        "SecOp": "siw_qp_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->siw_qp_id2obj",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_pm_opp_get_opp_table",
        "SecOp": "dev_pm_opp_put_opp_table",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->_get_opp_table_kref->_find_opp_table_unlocked->_find_opp_table->dev_pm_opp_get_opp_table",
        "var_path": "arg->arg->arg->arg->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_cd_get",
        "SecOp": "scsi_cd_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->scsi_device_get->scsi_cd_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "sc_get",
        "SecOp": "sc_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->sc_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__inet6_lookup_established",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->__inet6_lookup_established",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "xprt_iter_get_next",
        "SecOp": "xprt_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->xprt_get->xprt_iter_get_helper->xprt_iter_get_next",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_next_pcie_device",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->pcie_device_get->get_next_pcie_device",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5e_route_get",
        "SecOp": "mlx5e_route_put_locked",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->mlx5e_route_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfc_llcp_sock_get",
        "SecOp": "nfc_llcp_sock_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->sock_hold->nfc_llcp_sock_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_coresight_get_port_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_graph_get_port_parent->of_coresight_get_port_parent",
        "var_path": "arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "sctp_transport_get_idx",
        "SecOp": "sctp_transport_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->sctp_transport_hold->sctp_transport_get_next->sctp_transport_get_idx",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_writeable_file_locked",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->nfsd_file_get->__nfs4_get_fd->find_writeable_file_locked",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "zfcp_get_port_by_wwpn",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "get_device->zfcp_get_port_by_wwpn",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "_zfcp_unit_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->_zfcp_unit_find",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__scsi_find_target",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->__scsi_find_target",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iommu_group_ref_get",
        "SecOp": "iommu_group_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->kobject_get->iommu_group_ref_get",
        "var_path": "arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "vio_find_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_name->vio_find_name->vio_find_node",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_pm_opp_get_of_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->dev_pm_opp_get_of_node",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "eb_requests_get",
        "SecOp": "eb_requests_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->i915_request_get->eb_requests_get",
        "var_path": "arg->arg->arg->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_task_label",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label->aa_get_newest_label->aa_get_task_label",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__mpi3mr_get_tgtdev_by_perst_id",
        "SecOp": "mpi3mr_tgtdev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->mpi3mr_tgtdev_get->__mpi3mr_get_tgtdev_by_perst_id",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "btrfs_get_delayed_node",
        "SecOp": "refcount_dec",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->btrfs_get_delayed_node",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_pid",
        "SecOp": "put_pid",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_pid",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ap_get",
        "SecOp": "ap_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->ap_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fw_node_get",
        "SecOp": "fw_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->fw_node_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "inet_lookup",
        "SecOp": "sock_gen_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->inet_lookup",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_primary_if_get_selected",
        "SecOp": "batadv_hardif_put",
        "hasUsage": true,
        "usageCount": 41,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->batadv_primary_if_get_selected",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ssb_device_get",
        "SecOp": "ssb_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->ssb_device_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "btrfs_get_fs_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 19,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->btrfs_grab_root->btrfs_lookup_fs_root->btrfs_get_root_ref->btrfs_get_fs_root",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsiback_do_translation",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->scsiback_do_translation",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "inet_lookup_established",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->__inet_lookup_established->inet_lookup_established",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_get_pci_dev",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "get_device->pci_dev_get->pci_get_slot->acpi_get_pci_dev",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_all_nodes",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_all_nodes",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "exp_get",
        "SecOp": "exp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->cache_get->exp_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cma_id_get",
        "SecOp": "cma_id_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->cma_id_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_connected_service",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->get_connected_service",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fcoe_if_to_netdev",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_name->fcoe_if_to_netdev",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__aa_get_loaddata",
        "SecOp": "aa_put_loaddata",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->__aa_get_loaddata",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kvm_get_kvm",
        "SecOp": "kvm_put_kvm",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->kvm_get_kvm",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_find_next_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->bus_find_device->bus_find_next_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvmem_device_find",
        "SecOp": "nvmem_device_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->__nvmem_device_get->nvmem_device_find",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__sctp_rcv_lookup_endpoint",
        "SecOp": "sctp_endpoint_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->sctp_endpoint_hold->__sctp_rcv_lookup_endpoint",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "sync_timeline_get",
        "SecOp": "sync_timeline_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->sync_timeline_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_current_ns",
        "SecOp": "aa_put_ns",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->aa_get_profile->aa_get_ns->aa_get_current_ns",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cdnsp_get_second_fun",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->bus_find_device->pci_get_dev_by_id->pci_get_subsys->pci_get_device->cdnsp_get_second_fun",
        "var_path": "arg->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "j1939_ecu_get_by_addr_locked",
        "SecOp": "j1939_ecu_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->j1939_ecu_get->j1939_ecu_get_by_addr_locked",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ip_map_cached_get",
        "SecOp": "ip_map_cached_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->cache_get->ip_map_cached_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_vma_get",
        "SecOp": "i915_vma_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->drm_gem_object_get->i915_gem_object_get->i915_vma_get",
        "var_path": "arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_pm_opp_find_level_exact",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dev_pm_opp_get->dev_pm_opp_find_level_exact",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_pi_state",
        "SecOp": "put_pi_state",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->get_pi_state",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_find_class",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->dev_find_class",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__mpt3sas_get_sdev_by_rphy",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->sas_device_get->__mpt3sas_get_sdev_by_rphy",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_pid_task",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_task_struct->get_pid_task",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "omapdss_find_output_from_display",
        "SecOp": "omap_dss_put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->omap_dss_get_device->omapdss_find_output_from_display",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "usb_get_intf",
        "SecOp": "usb_put_intf",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "get_device->usb_get_intf",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "pud_alloc_one",
        "SecOp": "pud_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 8,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->pud_alloc_one",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "create_timestamp",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->i915_request_get->create_timestamp",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cs_get",
        "SecOp": "cs_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->cs_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_service_for_instance",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->find_service_for_instance",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__iscsi_get_task",
        "SecOp": "__iscsi_put_task",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->__iscsi_get_task",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__of_get_dma_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->__of_get_dma_parent",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "wg_index_hashtable_lookup",
        "SecOp": "wg_noise_keypair_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->wg_peer_get_maybe_zero->wg_index_hashtable_lookup",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "msm_submitqueue_get",
        "SecOp": "msm_submitqueue_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->msm_submitqueue_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pfkey_xfrm_state_lookup",
        "SecOp": "xfrm_state_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->xfrm_state_hold_rcu->__xfrm_state_lookup->xfrm_state_lookup->pfkey_xfrm_state_lookup",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "vgic_get_irq",
        "SecOp": "vgic_put_irq",
        "hasUsage": true,
        "usageCount": 46,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->vgic_get_irq_kref->vgic_get_lpi->vgic_get_irq",
        "var_path": "arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "zpci_bus_get",
        "SecOp": "zpci_bus_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->zpci_bus_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "amdgpu_cs_get_fence",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->amdgpu_ctx_get_fence->amdgpu_cs_get_fence",
        "var_path": "arg->arg->arg->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_current_rng",
        "SecOp": "put_rng",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->get_current_rng_nolock->get_current_rng",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 1,
        "API_path": "get_device->bus_find_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_backlight",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->of_find_backlight_by_node->of_find_backlight",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_get_compat_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_get_compat_node",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "class_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 1,
        "API_path": "get_device->class_find_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "perf_lock_task_context",
        "SecOp": "put_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->perf_lock_task_context",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "task_seq_get_next",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_task_struct->get_pid_task->task_seq_get_next",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_label_rcu",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->aa_get_label_rcu",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tun_get",
        "SecOp": "tun_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->tun_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5e_tc_int_port_get",
        "SecOp": "mlx5e_tc_int_port_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->mlx5e_int_port_lookup->mlx5e_tc_int_port_get",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rdma_lag_get_ah_roce_slave",
        "SecOp": "rdma_lag_put_ah_roce_slave",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->rdma_get_xmit_slave_udp->rdma_lag_get_ah_roce_slave",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_request_get_rcu",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->dma_fence_get_rcu->i915_request_get_rcu",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_neigh_ifinfo_new",
        "SecOp": "batadv_neigh_ifinfo_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_neigh_ifinfo_new",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_p2pmem_find",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->pci_dev_get->pci_p2pmem_find_many->pci_p2pmem_find",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rtrs_ib_dev_find_or_add",
        "SecOp": "rtrs_ib_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rtrs_ib_dev_get->rtrs_ib_dev_find_or_add",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cxgbit_get_cnp",
        "SecOp": "cxgbit_put_cnp",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->cxgbit_get_cnp",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "cache_alloc_handle",
        "SecOp": "cache_free_handle",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->cache_alloc_handle",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "afs_vl_get_capabilities",
        "SecOp": "afs_put_call",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->afs_get_addrlist->afs_make_call->afs_vl_get_capabilities",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mpt3sas_get_sdev_by_addr",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->sas_device_get->__mpt3sas_get_sdev_by_addr->mpt3sas_get_sdev_by_addr",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "lmb_to_memblock",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->find_memory_block_by_id->find_memory_block->lmb_to_memblock",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cgroup__get",
        "SecOp": "cgroup__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->cgroup__get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "xfrm_state_lookup",
        "SecOp": "xfrm_state_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->xfrm_state_hold_rcu->__xfrm_state_lookup->xfrm_state_lookup",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_vlan",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_index->get_vlan",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "xs_setup_xprt",
        "SecOp": "xs_xprt_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_net->xprt_init->xprt_alloc->xs_setup_xprt",
        "var_path": "arg->arg->arg->arg->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_cpu_device_node_get",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 24,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_cpu_device_node_get",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfcsim_device_new",
        "SecOp": "nfcsim_device_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->device_add->nfc_register_device->nfc_digital_register_device->nfcsim_device_new",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tree_get_node",
        "SecOp": "tree_put_node",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->tree_get_node",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_netdev_for_sock",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->get_netdev_for_sock",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_device_group",
        "SecOp": "iommu_group_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->iommu_group_get->pci_device_group",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rdma_get_counter_by_id",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->rdma_get_counter_by_id",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "br_vlan_get_master",
        "SecOp": "br_vlan_put_master",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->br_vlan_get_master",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "reada_find_zone",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->reada_find_zone",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_spu_context",
        "SecOp": "put_spu_context",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->get_spu_context",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ceph_get_mds_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->ceph_get_mds_session",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_phy_get",
        "SecOp": "of_phy_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->of_phy_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_dp_mst_topology_get_mstb_validated",
        "SecOp": "drm_dp_mst_topology_put_mstb",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->drm_dp_mst_topology_try_get_mstb->drm_dp_mst_topology_get_mstb_validated",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_p2pmem_find_many",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->pci_dev_get->pci_p2pmem_find_many",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_node_opts_by_path",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_opts_by_path",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_user_ns",
        "SecOp": "put_user_ns",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_user_ns",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "lookup_get_request",
        "SecOp": "ceph_mdsc_put_request",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->ceph_mdsc_get_request->lookup_get_request",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_memory_block_by_id",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->find_memory_block_by_id",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__mpt3sas_get_sdev_by_addr",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->sas_device_get->__mpt3sas_get_sdev_by_addr",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_tp_init_recv",
        "SecOp": "batadv_tp_vars_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_tp_init_recv",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_readable_file_locked",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->nfsd_file_get->__nfs4_get_fd->find_readable_file_locked",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iscsi_lookup_endpoint",
        "SecOp": "iscsi_put_endpoint",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "get_device->class_find_device->iscsi_lookup_endpoint",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "omapdss_of_get_first_endpoint",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 6,
        "API_path": "get_device->kobject_get->of_node_get->__of_get_next_child->of_get_next_child->omapdss_of_get_next_endpoint->omapdss_of_get_first_endpoint",
        "var_path": "arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__scsi_add_device",
        "SecOp": "scsi_device_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "get_device->scsi_alloc_sdev->scsi_probe_and_add_lun->__scsi_add_device",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drbd_find_resource",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->drbd_find_resource",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_cb_from_cs_chunk",
        "SecOp": "hl_cb_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->hl_cb_get->get_cb_from_cs_chunk",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_pasid_state",
        "SecOp": "put_pasid_state",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_pasid_state",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cx88_core_get",
        "SecOp": "cx88_core_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->cx88_core_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pnv_pci_get_phb_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->pnv_pci_get_phb_node",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "devfreq_recommended_opp",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dev_pm_opp_get->dev_pm_opp_find_freq_floor->devfreq_recommended_opp",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "udp6_lib_lookup",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->udp6_lib_lookup",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rtnl_get_net_ns_capable",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->maybe_get_net->get_net_ns_by_id->rtnl_get_net_ns_capable",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_graph_get_remote_port",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_get_next_parent->of_graph_get_remote_port",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_dev_get",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "get_device->pci_dev_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fs_context_for_reconfigure",
        "SecOp": "put_fs_context",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_user_ns->alloc_fs_context->fs_context_for_reconfigure",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "target_get_sess_cmd",
        "SecOp": "target_put_sess_cmd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->target_get_sess_cmd",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__ab_task_get",
        "SecOp": "ab_task_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->__ab_task_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "instance_lookup_get",
        "SecOp": "instance_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->instance_lookup_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nbd_find_get_unused",
        "SecOp": "nbd_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->nbd_find_get_unused",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "media_request_get_by_fd",
        "SecOp": "media_request_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->media_request_get->media_request_get_by_fd",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "vfio_device_get_from_dev",
        "SecOp": "vfio_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->vfio_device_try_get->vfio_group_get_device->vfio_device_get_from_dev",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scmi_get_active_handler",
        "SecOp": "scmi_put_active_handler",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->scmi_get_active_handler",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "page_array_alloc",
        "SecOp": "page_array_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 9,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->f2fs_kmem_cache_alloc->page_array_alloc",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "amdgpu_ctx_get_fence",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->amdgpu_ctx_get_fence",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5_esw_indir_table_rule_get",
        "SecOp": "mlx5_esw_indir_table_rule_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->mlx5_esw_indir_table_rule_lookup->mlx5_esw_indir_table_rule_get",
        "var_path": "arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "iwl_trans_alloc_tx_cmd",
        "SecOp": "iwl_trans_free_tx_cmd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->kmem_cache_zalloc->iwl_trans_alloc_tx_cmd",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "autogroup_create",
        "SecOp": "autogroup_kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->autogroup_kref_get->autogroup_create",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ceph_get_snap_context",
        "SecOp": "ceph_put_snap_context",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->ceph_get_snap_context",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5e_route_lookup_ipv4_get",
        "SecOp": "mlx5e_route_lookup_ipv4_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->neigh_lookup->dst_neigh_lookup->mlx5e_route_lookup_ipv4_get",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvme_fc_lport_get",
        "SecOp": "nvme_fc_lport_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvme_fc_lport_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "rfcomm_dev_get",
        "SecOp": "tty_port_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->tty_port_get->rfcomm_dev_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_task_struct",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 36,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_task_struct",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_watch_queue",
        "SecOp": "put_watch_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->get_watch_queue",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ttm_bo_get_unless_zero",
        "SecOp": "ttm_bo_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->ttm_bo_get_unless_zero",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_label_insert",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label->__label_insert->aa_label_insert",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "vc4_perfmon_get",
        "SecOp": "vc4_perfmon_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->vc4_perfmon_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_net_dev_hold",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->get_net_dev_hold",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__open_export_target_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->ceph_get_mds_session->__ceph_lookup_mds_session->__open_export_target_session",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_get_by_index",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 91,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_index",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dlm_lockres_get",
        "SecOp": "dlm_lockres_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->dlm_lockres_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvmem_cell_get",
        "SecOp": "nvmem_cell_put",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->__nvmem_device_get->of_nvmem_cell_get->nvmem_cell_get",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_get_related_function",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->bus_find_device->pci_get_dev_by_id->pci_get_subsys->pci_get_device->pci_get_related_function",
        "var_path": "arg->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_lookupn_ns",
        "SecOp": "aa_put_ns",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->aa_get_profile->aa_get_ns->aa_lookupn_ns",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "labelset_next_stale",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->__aa_get_label->labelset_next_stale",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_get_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 32,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_get_parent",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "blk_get_queue",
        "SecOp": "blk_put_queue",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->__blk_get_queue->blk_get_queue",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ehea_get_eth_dn",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->__of_get_next_child->of_get_next_child->ehea_get_eth_dn",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "skb_get",
        "SecOp": "skb_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->skb_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "fl_get_next_hw_filter",
        "SecOp": "__fl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->fl_get_next_hw_filter",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "perf_thread_map__get",
        "SecOp": "perf_thread_map__put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->perf_thread_map__get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_node_by_type",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 37,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_type",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_find_device_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 2,
        "API_path": "get_device->bus_find_device->bus_find_device_by_name",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_v_ogm_orig_get",
        "SecOp": "batadv_orig_node_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_v_ogm_orig_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_bla_claim_get_backbone_gw",
        "SecOp": "batadv_backbone_gw_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_bla_claim_get_backbone_gw",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_dcr_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->find_dcr_parent",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "audit_get_parent",
        "SecOp": "audit_put_parent",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->fsnotify_get_mark->audit_get_parent",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "omapdss_of_get_next_port",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->__of_get_next_child->of_get_next_child->omapdss_of_get_next_port",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tpm_find_get_ops",
        "SecOp": "tpm_put_ops",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "get_device->tpm_try_get_ops->tpm_find_get_ops",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hci_get_route",
        "SecOp": "hci_dev_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "get_device->hci_dev_hold->hci_get_route",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scrub_workers_get",
        "SecOp": "scrub_workers_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->scrub_workers_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_syncobj_get",
        "SecOp": "drm_syncobj_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->drm_syncobj_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "alua_find_get_pg",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->alua_find_get_pg",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "garbage",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->i915_request_get->garbage",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__mpt3sas_get_pdev_by_wwid",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->pcie_device_get->__mpt3sas_get_pdev_by_wwid",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_pid_ns",
        "SecOp": "put_pid_ns",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_pid_ns",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "pidfd_get_pid",
        "SecOp": "put_pid",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_pid->pidfd_get_pid",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bsg_job_get",
        "SecOp": "bsg_job_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->bsg_job_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "virtio_fs_find_instance",
        "SecOp": "virtio_fs_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->virtio_fs_find_instance",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ucma_get_ctx",
        "SecOp": "ucma_put_ctx",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->ucma_get_ctx",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_connector",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->class_find_device->find_connector",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dw_mipi_dsi_rockchip_find_second",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->dw_mipi_dsi_rockchip_find_second",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_vm_get",
        "SecOp": "i915_vm_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->i915_vm_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rpc_sysfs_xprt_switch_kobj_get_xprt",
        "SecOp": "xprt_switch_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->xprt_switch_get->rpc_sysfs_xprt_switch_kobj_get_xprt",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ptp_ocp_find_flash",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child->ptp_ocp_find_flash",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "perf_cpu_map__merge",
        "SecOp": "perf_cpu_map__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->perf_cpu_map__get->perf_cpu_map__merge",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "p9_tag_lookup",
        "SecOp": "p9_req_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->p9_req_try_get->p9_tag_lookup",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_dma_get_range",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_dma_get_range",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_port_by_devt",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->find_port_by_devt_in_portdev->find_port_by_devt",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__core_scsi3_alloc_registration",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->__core_scsi3_do_alloc_registration->__core_scsi3_alloc_registration",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "omap_dss_find_device",
        "SecOp": "omap_dss_put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->omap_dss_get_device->omap_dss_get_next_device->omap_dss_find_device",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tpm_chip_alloc",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->tpm_chip_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "label_merge_insert",
        "SecOp": "label_free_or_put_new",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label->label_merge_insert",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "key_get",
        "SecOp": "key_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->__key_get->key_get",
        "var_path": "arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__get_seccomp_filter",
        "SecOp": "__put_seccomp_filter",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->__get_seccomp_filter",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "gb_operation_get",
        "SecOp": "gb_operation_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->gb_operation_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "usb_get_urb",
        "SecOp": "usb_put_urb",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->usb_get_urb",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "sdio_uart_port_get",
        "SecOp": "sdio_uart_port_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->tty_port_get->sdio_uart_port_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__nd_btt_create",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->__nd_attach_ndns->__nd_btt_create",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_pm_opp_find_freq_ceil",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dev_pm_opp_get->_find_freq_ceil->dev_pm_opp_find_freq_ceil",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__llc_lookup",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->__llc_lookup_established->__llc_lookup",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "lpfc_nlp_get",
        "SecOp": "lpfc_nlp_put",
        "hasUsage": true,
        "usageCount": 45,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->lpfc_nlp_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "amdgpu_get_xgmi_hive",
        "SecOp": "amdgpu_put_xgmi_hive",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "get_device->kobject_get->amdgpu_get_xgmi_hive",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "xfrm_state_lookup_byaddr",
        "SecOp": "xfrm_state_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->xfrm_state_hold_rcu->__xfrm_state_lookup_byaddr->xfrm_state_lookup_byaddr",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cs_get_unless_zero",
        "SecOp": "cs_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->cs_get_unless_zero",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_listening_service",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->get_listening_service",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ipoib_get_master_net_dev",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->ipoib_get_master_net_dev",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "zcrypt_card_get",
        "SecOp": "zcrypt_card_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->zcrypt_card_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_oldest_context",
        "SecOp": "ceph_put_snap_context",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->ceph_get_snap_context->get_oldest_context",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "vfs_dup_fs_context",
        "SecOp": "put_fs_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_user_ns->vfs_dup_fs_context",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__dlm_get",
        "SecOp": "dlm_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->__dlm_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "bnx2i_alloc_hba",
        "SecOp": "bnx2i_free_hba",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->pci_dev_get->bnx2i_alloc_hba",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_xdomain_find_by_route",
        "SecOp": "tb_xdomain_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "get_device->tb_xdomain_get->tb_xdomain_find_by_route",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_compatible_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 250,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_compatible_node",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "regulator_of_get_init_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->regulator_of_get_init_node",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "audit_get_watch",
        "SecOp": "audit_put_watch",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->audit_get_watch",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "blk_mq_find_and_get_req",
        "SecOp": "blk_mq_put_rq_ref",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->blk_mq_find_and_get_req",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tipc_node_crypto_rx_by_addr",
        "SecOp": "tipc_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->tipc_node_find->tipc_node_crypto_rx_by_addr",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__z3fold_alloc",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->__z3fold_alloc",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_get_pid",
        "SecOp": "put_pid",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_pid->find_get_pid",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "crypto_alg_get",
        "SecOp": "crypto_alg_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->crypto_alg_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_find_device_by_fwnode",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "parport_get_port",
        "SecOp": "parport_put_port",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->parport_get_port",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "autogroup_task_get",
        "SecOp": "autogroup_kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->autogroup_kref_get->autogroup_task_get",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "msm_gpu_crashstate_get",
        "SecOp": "msm_gpu_crashstate_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->msm_gpu_crashstate_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "hfi1_rcd_get",
        "SecOp": "hfi1_rcd_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->hfi1_rcd_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "rtnl_link_get_net_by_nlattr",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_net->rtnl_link_get_net_by_nlattr",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ssam_cdev_get",
        "SecOp": "ssam_cdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->ssam_cdev_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_get_next_child",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->__of_get_next_child->of_get_next_child",
        "var_path": "arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "calipso_doi_getdef",
        "SecOp": "calipso_doi_putdef",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->calipso_doi_getdef",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kref_get_unless_zero",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_mnt_ns",
        "SecOp": "put_mnt_ns",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_mnt_ns",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "llsec_lookup_key",
        "SecOp": "llsec_key_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->llsec_key_get->llsec_lookup_key",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "omap_dss_get_device",
        "SecOp": "omap_dss_put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->omap_dss_get_device",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "lima_sched_context_queue_task",
        "SecOp": "dma_fence_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->lima_sched_context_queue_task",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "usb_get_from_anchor",
        "SecOp": "usb_put_urb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->usb_get_urb->usb_get_from_anchor",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_bla_get_backbone_gw",
        "SecOp": "batadv_backbone_gw_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_bla_get_backbone_gw",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nametoid_update",
        "SecOp": "cache_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->cache_get->sunrpc_cache_update->nametoid_update",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scmi_get_handler",
        "SecOp": "scmi_put_handler",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->__scmi_event_handler_get_ops->scmi_get_handler",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "qeth_get_cmd",
        "SecOp": "qeth_put_cmd",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->qeth_get_cmd",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_prepare_ns",
        "SecOp": "aa_put_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->aa_get_profile->aa_get_ns->aa_prepare_ns",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_loaddata",
        "SecOp": "aa_put_loaddata",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->__aa_get_loaddata->aa_get_loaddata",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "userfaultfd_ctx_get",
        "SecOp": "userfaultfd_ctx_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->userfaultfd_ctx_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_matching_node_and_match",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_matching_node_and_match",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_graph_get_remote_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->of_node_get->of_get_parent->of_graph_parse_endpoint->of_graph_get_endpoint_by_regs->of_graph_get_remote_node",
        "var_path": "arg->arg->retval->retval->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_spi_find_device_by_adev",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_acpi_dev->acpi_spi_find_device_by_adev",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_buf",
        "SecOp": "free_buf",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "get_device->alloc_buf",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dj_get_receiver_dev",
        "SecOp": "dj_put_receiver_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dj_find_receiver_dev->dj_get_receiver_dev",
        "var_path": "arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "pinctrl_get_select",
        "SecOp": "pinctrl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->pinctrl_get->pinctrl_get_select",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "conn_get",
        "SecOp": "conn_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->conn_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "sctp_transport_get_next",
        "SecOp": "sctp_transport_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->sctp_transport_hold->sctp_transport_get_next",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fuse_conn_get",
        "SecOp": "fuse_conn_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->fuse_conn_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "tipc_conn_lookup",
        "SecOp": "conn_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->tipc_conn_lookup",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hl_ctx_get",
        "SecOp": "hl_ctx_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->hl_ctx_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "usb_get_phy",
        "SecOp": "usb_put_phy",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 1,
        "API_path": "get_device->usb_get_phy",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "xprt_alloc",
        "SecOp": "xprt_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_net->xprt_init->xprt_alloc",
        "var_path": "arg->arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "btrfs_lookup_fs_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->btrfs_grab_root->btrfs_lookup_fs_root",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_dp_get_mst_branch_device_by_guid",
        "SecOp": "drm_dp_mst_topology_put_mstb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->drm_dp_mst_topology_try_get_mstb->drm_dp_get_mst_branch_device_by_guid",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kernel_get_module_map",
        "SecOp": "map__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->map__get->kernel_get_module_map",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "driver_find_device_by_fwnode",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->driver_find_device->driver_find_device_by_fwnode",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "uverbs_uobject_get",
        "SecOp": "uverbs_uobject_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->uverbs_uobject_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "fw_device_get_by_devt",
        "SecOp": "fw_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->fw_device_get->fw_device_get_by_devt",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_tree",
        "SecOp": "put_tree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_tree",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "idtoname_update",
        "SecOp": "cache_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->cache_get->sunrpc_cache_update->idtoname_update",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mpi3mr_get_tgtdev_by_handle",
        "SecOp": "mpi3mr_tgtdev_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->mpi3mr_tgtdev_get->__mpi3mr_get_tgtdev_by_handle->mpi3mr_get_tgtdev_by_handle",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_any_file",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->nfsd_file_get->__nfs4_get_fd->find_any_file",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hl_ctx_get_fence",
        "SecOp": "hl_fence_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->hl_fence_get->hl_ctx_get_fence_locked->hl_ctx_get_fence",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_mode_object_find",
        "SecOp": "drm_mode_object_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->__drm_mode_object_find->drm_mode_object_find",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "irdma_get_cqp_request",
        "SecOp": "irdma_put_cqp_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->irdma_get_cqp_request",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "nr_ax25_dev_get",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_name->nr_ax25_dev_get",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mmc_blk_get",
        "SecOp": "mmc_blk_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->mmc_blk_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_get_next_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_get_next_parent",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5e_route_get_create",
        "SecOp": "mlx5e_route_put_locked",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->mlx5e_route_get->mlx5e_route_get_create",
        "var_path": "arg->arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ext4_blkdev_get",
        "SecOp": "ext4_blkdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->blkdev_get_no_open->blkdev_get_by_dev->ext4_blkdev_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "key_lookup",
        "SecOp": "key_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->key_lookup",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_service_by_handle",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->find_service_by_handle",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "gb_control_get",
        "SecOp": "gb_control_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->gb_control_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "sky2_init_netdev",
        "SecOp": "free_netdev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->of_get_mac_addr_nvmem->of_get_mac_address->of_get_ethdev_address->sky2_init_netdev",
        "var_path": "arg->retval->retval->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "j1939_session_get_by_addr",
        "SecOp": "j1939_session_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->j1939_session_get->j1939_session_get_by_addr_locked->j1939_session_get_by_addr",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5e_route_lookup_ipv6_get",
        "SecOp": "mlx5e_route_lookup_ipv6_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->neigh_lookup->dst_neigh_lookup->mlx5e_route_lookup_ipv6_get",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__mpt3sas_get_pdev_from_target",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->pcie_device_get->__mpt3sas_get_pdev_from_target",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "device_find_child_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "get_device->device_find_child_by_name",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "btrfs_readdir_get_delayed_items",
        "SecOp": "btrfs_readdir_put_delayed_items",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->btrfs_get_delayed_node->btrfs_readdir_get_delayed_items",
        "var_path": "arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "sock_map_psock_get_checked",
        "SecOp": "sk_psock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->sock_map_psock_get_checked",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "amp_mgr_get",
        "SecOp": "amp_mgr_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->amp_mgr_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "tty_lookup_driver",
        "SecOp": "tty_driver_kref_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->tty_driver_kref_get->tty_lookup_driver",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_phy_find_device",
        "SecOp": "phy_device_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->fwnode_mdio_find_device->fwnode_phy_find_device->of_phy_find_device",
        "var_path": "arg->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acm_get_by_minor",
        "SecOp": "tty_port_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->tty_port_get->acm_get_by_minor",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__label_insert",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label->__label_insert",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_ae",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->class_find_device->find_ae",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pmf_find_device",
        "SecOp": "pmf_put_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->pmf_get_device->pmf_find_device",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tipc_node_get",
        "SecOp": "tipc_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->tipc_node_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfs4_xattr_get_cache",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->nfs4_xattr_get_cache",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "comedi_dev_get_from_minor",
        "SecOp": "comedi_dev_put",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->comedi_dev_get->comedi_dev_get_from_subdevice_minor->comedi_dev_get_from_minor",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "omapdss_device_get",
        "SecOp": "omapdss_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->omapdss_device_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_mad",
        "SecOp": "free_mad",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->alloc_mad",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "cxgbit_get_csk",
        "SecOp": "cxgbit_put_csk",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->cxgbit_get_csk",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_pm_opp_find_freq_exact",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dev_pm_opp_get->dev_pm_opp_find_freq_exact",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_srqc",
        "SecOp": "free_srqc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->hns_roce_table_mhop_get->hns_roce_table_get->alloc_srqc",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "mpt3sas_get_pdev_by_handle",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->pcie_device_get->__mpt3sas_get_pdev_by_handle->mpt3sas_get_pdev_by_handle",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ib_device_get_by_index",
        "SecOp": "ib_device_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->ib_device_try_get->ib_device_get_by_index",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_pe_dn",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_get_parent->find_pe_dn",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tipc_node_create",
        "SecOp": "tipc_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->tipc_node_get->tipc_node_create",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fcloop_tfcp_req_get",
        "SecOp": "fcloop_tfcp_req_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->fcloop_tfcp_req_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_irq_get",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->of_irq_find_parent->of_irq_parse_one->of_irq_get",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_get_slot",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 37,
        "depth": 2,
        "API_path": "get_device->pci_dev_get->pci_get_slot",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "btf_get",
        "SecOp": "btf_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->btf_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "o2net_handler_get",
        "SecOp": "o2net_handler_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->o2net_handler_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "regulator_get",
        "SecOp": "regulator_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "get_device->class_find_device->regulator_lookup_by_name->regulator_dev_lookup->_regulator_get->regulator_get",
        "var_path": "arg->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__ceph_lookup_mds_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->ceph_get_mds_session->__ceph_lookup_mds_session",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__ip_vs_conn_get",
        "SecOp": "__ip_vs_conn_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->__ip_vs_conn_get",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ubi_get_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->ubi_get_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pud_alloc",
        "SecOp": "pud_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 10,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->pud_alloc_one->__pud_alloc->pud_alloc",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "q6apm_get_audioreach_graph",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->q6apm_get_audioreach_graph",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "amp_ctrl_get",
        "SecOp": "amp_ctrl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->amp_ctrl_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "i2c_get_adapter",
        "SecOp": "i2c_put_adapter",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 1,
        "API_path": "get_device->i2c_get_adapter",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_get_device_func",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->bus_find_device->pci_get_dev_by_id->pci_get_subsys->pci_get_device->pci_get_device_func",
        "var_path": "arg->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fwnode_mdio_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->fwnode_mdio_find_device",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dlm_lookup_lockres",
        "SecOp": "dlm_lockres_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->dlm_lockres_get->__dlm_lookup_lockres_full->__dlm_lookup_lockres->dlm_lookup_lockres",
        "var_path": "arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "irdma_find_listener",
        "SecOp": "refcount_dec",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->irdma_find_listener",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rdma_user_mmap_entry_get_pgoff",
        "SecOp": "rdma_user_mmap_entry_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rdma_user_mmap_entry_get_pgoff",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_gw_get_selected_orig",
        "SecOp": "batadv_orig_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->batadv_gw_get_selected_orig",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ipoib_neigh_alloc",
        "SecOp": "ipoib_neigh_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->ipoib_neigh_alloc",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kernel_vm",
        "SecOp": "i915_vm_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->i915_vm_get->kernel_vm",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wpan_phy_find",
        "SecOp": "wpan_phy_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_name->wpan_phy_find",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_device_by_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 47,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "copy_net_ns",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_net->copy_net_ns",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wwan_dev_get_by_parent",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "get_device->class_find_device->wwan_dev_get_by_parent",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dsa_tree_get",
        "SecOp": "dsa_tree_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->dsa_tree_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "intel_context_get",
        "SecOp": "intel_context_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->intel_context_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "afs_get_addrlist",
        "SecOp": "afs_put_addrlist",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->afs_get_addrlist",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_node_by_path",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 144,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_opts_by_path->of_find_node_by_path",
        "var_path": "arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_dp_mst_get_port_malloc",
        "SecOp": "drm_dp_mst_put_port_malloc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->drm_dp_mst_get_port_malloc",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "tegra_emc_find_node_by_ram_code",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->tegra_emc_find_node_by_ram_code",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_irq_find_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->of_irq_find_parent",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "omapdss_of_get_remote_port",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_get_next_parent->omapdss_of_get_remote_port",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_gem_object_get",
        "SecOp": "i915_gem_object_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->drm_gem_object_get->i915_gem_object_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "iommu_group_get_for_dev",
        "SecOp": "iommu_group_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->iommu_group_get->iommu_group_get_for_dev",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "spi_dev_get",
        "SecOp": "spi_dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->spi_dev_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_ipmi_msg_get",
        "SecOp": "acpi_ipmi_msg_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->acpi_ipmi_msg_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "crypto_alg_mod_lookup",
        "SecOp": "crypto_mod_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->crypto_alg_get->crypto_mod_get->crypto_larval_wait->crypto_larval_lookup->crypto_alg_mod_lookup",
        "var_path": "arg->arg->arg->arg->retval->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iscsi_find_flashnode_conn",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "get_device->device_find_child->iscsi_find_flashnode_conn",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_switch_find_by_route",
        "SecOp": "tb_switch_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "get_device->bus_find_device->tb_switch_find_by_route",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "semaphore_queue",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->i915_request_get->semaphore_queue",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kcov_get",
        "SecOp": "kcov_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->kcov_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "intel_frontbuffer_get",
        "SecOp": "intel_frontbuffer_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->intel_frontbuffer_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_hardif_add_interface",
        "SecOp": "batadv_hardif_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_hardif_add_interface",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__dlm_lookup_lockres",
        "SecOp": "dlm_lockres_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dlm_lockres_get->__dlm_lookup_lockres_full->__dlm_lookup_lockres",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "l2tp_tunnel_get",
        "SecOp": "l2tp_tunnel_dec_refcount",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->l2tp_tunnel_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cxl_afu_get",
        "SecOp": "cxl_afu_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->cxl_afu_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "rtnl_link_get_net",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_net->rtnl_link_get_net",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "perf_mmap__get",
        "SecOp": "perf_mmap__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->perf_mmap__get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_target_map",
        "SecOp": "map__put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->map__get->kernel_get_module_map->get_target_map",
        "var_path": "arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rpcrdma_ep_get",
        "SecOp": "rpcrdma_ep_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->rpcrdma_ep_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "next_tid",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_task_struct->next_tid",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_qpc",
        "SecOp": "free_qpc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->hns_roce_table_mhop_get->hns_roce_table_get->alloc_qpc",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "net_dm_hw_metadata_copy",
        "SecOp": "net_dm_hw_metadata_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->net_dm_hw_metadata_copy",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ceph_osdc_get_request",
        "SecOp": "ceph_osdc_put_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->ceph_osdc_get_request",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "pseries_of_derive_parent",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_opts_by_path->of_find_node_by_path->pseries_of_derive_parent",
        "var_path": "arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_get_by_name",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 21,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_name",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "msm_gem_submit_get",
        "SecOp": "msm_gem_submit_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->msm_gem_submit_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "mem_info__get",
        "SecOp": "mem_info__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->mem_info__get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "j1939_xtp_rx_rts_session_new",
        "SecOp": "j1939_session_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->j1939_session_get->j1939_session_activate->j1939_xtp_rx_rts_session_new",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "spi_controller_get",
        "SecOp": "spi_controller_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->spi_controller_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "l2tp_session_get_nth",
        "SecOp": "l2tp_session_dec_refcount",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->l2tp_session_inc_refcount->l2tp_session_get_nth",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "config_group_find_item",
        "SecOp": "config_item_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->config_item_get->config_group_find_item",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rnbd_srv_find_or_add_srv_dev",
        "SecOp": "rnbd_put_srv_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rnbd_srv_find_or_add_srv_dev",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ufshpb_get_map_req",
        "SecOp": "ufshpb_put_map_req",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->ufshpb_get_req->ufshpb_get_map_req",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_crtc_commit_get",
        "SecOp": "drm_crtc_commit_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->drm_crtc_commit_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "spufs_assert_affinity",
        "SecOp": "put_spu_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->get_spu_context->spufs_assert_affinity",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fw_card_get",
        "SecOp": "fw_card_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->fw_card_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mei_me_cl_by_id",
        "SecOp": "mei_me_cl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->mei_me_cl_get->mei_me_cl_by_id",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfp_repr_alloc",
        "SecOp": "nfp_repr_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->alloc_netdev_mqs->alloc_etherdev_mqs->nfp_repr_alloc_mqs->nfp_repr_alloc",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "usbdev_lookup_by_devt",
        "SecOp": "usb_put_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_devt->usbdev_lookup_by_devt",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_lpss_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->bus_find_device->acpi_lpss_find_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_oa_config_get",
        "SecOp": "i915_oa_config_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->i915_oa_config_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "msi_bitmap_alloc",
        "SecOp": "msi_bitmap_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->msi_bitmap_alloc",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "srp_rport_get",
        "SecOp": "srp_rport_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->srp_rport_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "vmci_resource_get",
        "SecOp": "vmci_resource_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->vmci_resource_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__mpt3sas_get_sdev_by_handle",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->sas_device_get->__mpt3sas_get_sdev_by_handle",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "siw_qp_get",
        "SecOp": "siw_qp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->siw_qp_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_host_lookup",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 19,
        "depth": 2,
        "API_path": "get_device->scsi_host_get->scsi_host_lookup",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ttm_bo_get",
        "SecOp": "ttm_bo_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->ttm_bo_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "j1939_ecu_get_by_addr",
        "SecOp": "j1939_ecu_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->j1939_ecu_get->j1939_ecu_get_by_addr_locked->j1939_ecu_get_by_addr",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cache_get",
        "SecOp": "cache_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->cache_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ib_device_try_get",
        "SecOp": "ib_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->ib_device_try_get",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_transtable_search",
        "SecOp": "batadv_orig_node_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->batadv_transtable_search",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_dev_get",
        "SecOp": "acpi_dev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "get_device->acpi_dev_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "rdma_get_counter_auto_mode",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rdma_get_counter_auto_mode",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mpt3sas_get_sdev_by_handle",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->sas_device_get->__mpt3sas_get_sdev_by_handle->mpt3sas_get_sdev_by_handle",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ipmr_reg_vif",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->ipmr_reg_vif",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rsc_update",
        "SecOp": "cache_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->cache_get->sunrpc_cache_update->rsc_update",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfs4_xattr_hash_find",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->nfs4_xattr_hash_find",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mpt3sas_get_sdev_from_target",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->sas_device_get->__mpt3sas_get_sdev_from_target->mpt3sas_get_sdev_from_target",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "copy_pid_ns",
        "SecOp": "put_pid_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_pid_ns->copy_pid_ns",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "netfs_get_read_request",
        "SecOp": "netfs_put_read_request",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->netfs_get_read_request",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ucma_get_ctx_dev",
        "SecOp": "ucma_put_ctx",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->ucma_get_ctx->ucma_get_ctx_dev",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_iv_ogm_orig_get",
        "SecOp": "batadv_orig_node_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_iv_ogm_orig_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fanotify_add_new_mark",
        "SecOp": "fsnotify_put_mark",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->fsnotify_get_mark->fsnotify_add_mark_locked->fanotify_add_new_mark",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ufshpb_get_req",
        "SecOp": "ufshpb_put_req",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->ufshpb_get_req",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ib_device_get_netdev",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->ib_device_get_netdev",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "inet6_lookup",
        "SecOp": "sock_gen_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->inet6_lookup",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "qh_get",
        "SecOp": "qh_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->qh_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "host1x_channel_get_index",
        "SecOp": "host1x_channel_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->host1x_channel_get_index",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iscsi_find_flashnode_sess",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->device_find_child->iscsi_find_flashnode_sess",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "svc_expkey_update",
        "SecOp": "cache_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->cache_get->sunrpc_cache_update->svc_expkey_update",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_xdomain_find_by_route_locked",
        "SecOp": "tb_xdomain_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->tb_xdomain_get->tb_xdomain_find_by_route->tb_xdomain_find_by_route_locked",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_and_get_file_info",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->find_and_get_file_info",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_zcdndev_by_devt",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_devt->find_zcdndev_by_devt",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_profile_rcu",
        "SecOp": "aa_put_profile",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->aa_get_profile_rcu",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "locate_module_kobject",
        "SecOp": "kobject_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->kobject_get->locate_module_kobject",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_node_with_property",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_with_property",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "addr_to_mapping",
        "SecOp": "panfrost_gem_mapping_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->addr_to_mapping",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "l2tp_session_get",
        "SecOp": "l2tp_session_dec_refcount",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->l2tp_session_inc_refcount->l2tp_session_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_mr_key",
        "SecOp": "free_mr_key",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->hns_roce_table_mhop_get->hns_roce_table_get->alloc_mr_key",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "inet6_fib_lookup_dev",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->inet6_fib_lookup_dev",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hvc_get_by_index",
        "SecOp": "tty_port_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->tty_port_get->hvc_get_by_index",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_node_by_name",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 91,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_name",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "parport_register_port",
        "SecOp": "parport_put_port",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "get_device->device_add->device_register->parport_register_port",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_newest_cred_label",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label->aa_get_newest_label->aa_get_newest_cred_label",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cxl_find_nvdimm_bridge",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->bus_find_device->cxl_find_nvdimm_bridge",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_proc_task",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 56,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_task_struct->get_pid_task->get_proc_task",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ring_buffer_get",
        "SecOp": "ring_buffer_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->ring_buffer_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__arm_v7s_alloc_table",
        "SecOp": "__arm_v7s_free_table",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 9,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->kmem_cache_zalloc->__arm_v7s_alloc_table",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_profile_not0",
        "SecOp": "aa_put_profile",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->aa_get_profile_not0",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvmet_fc_tgt_a_get",
        "SecOp": "nvmet_fc_tgt_a_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvmet_fc_tgt_a_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "packet_cached_dev_get",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->packet_cached_dev_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iommu_group_get",
        "SecOp": "iommu_group_put",
        "hasUsage": true,
        "usageCount": 19,
        "depth": 2,
        "API_path": "get_device->kobject_get->iommu_group_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_gem_object_get",
        "SecOp": "drm_gem_object_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->drm_gem_object_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "siw_cep_get",
        "SecOp": "siw_cep_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->siw_cep_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__dfl_fpga_cdev_find_port",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->__dfl_fpga_cdev_find_port",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_clt",
        "SecOp": "free_clt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->device_add->device_register->alloc_clt",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hfi1_rcd_get_by_index",
        "SecOp": "hfi1_rcd_put",
        "hasUsage": true,
        "usageCount": 18,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->hfi1_rcd_get->hfi1_rcd_get_by_index",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__gpr_read",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->i915_request_get->__gpr_read",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "moxtet_alloc_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->moxtet_alloc_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_matching_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 53,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_find_matching_node_and_match->of_find_matching_node",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__comedi_buf_alloc",
        "SecOp": "__comedi_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->comedi_buf_map_alloc->__comedi_buf_alloc",
        "var_path": "arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "wwan_dev_get_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->class_find_device->wwan_dev_get_by_name",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kvm_get_kvm_safe",
        "SecOp": "kvm_put_kvm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kvm_get_kvm_safe",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "css_task_iter_next",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_task_struct->css_task_iter_next",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_perf_get_oa_config",
        "SecOp": "i915_oa_config_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->i915_oa_config_get->i915_perf_get_oa_config",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_newest_label",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label->aa_get_newest_label",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ipoib_neigh_get",
        "SecOp": "ipoib_neigh_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->ipoib_neigh_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "vmci_resource_by_handle",
        "SecOp": "vmci_resource_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->vmci_resource_get->vmci_resource_by_handle",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "unpack_profile",
        "SecOp": "aa_put_profile",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->aa_get_dfa->unpack_profile",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dn_dev_get_default",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dn_dev_get_default",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_mcast_get_bridge",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->batadv_mcast_get_bridge",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_switch_find_by_uuid",
        "SecOp": "tb_switch_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->bus_find_device->tb_switch_find_by_uuid",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "zfcp_ccw_adapter_by_cdev",
        "SecOp": "zfcp_ccw_adapter_put",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->zfcp_ccw_adapter_by_cdev",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5_ib_get_netdev",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->mlx5_ib_get_netdev",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rpi_firmware_get",
        "SecOp": "rpi_firmware_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rpi_firmware_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "multi_lrc_nop_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->i915_request_get->multi_lrc_nop_request",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hci_dev_get",
        "SecOp": "hci_dev_put",
        "hasUsage": true,
        "usageCount": 19,
        "depth": 2,
        "API_path": "get_device->hci_dev_hold->hci_dev_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "x25_dev_get",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_name->x25_dev_get",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "sk_psock_get",
        "SecOp": "sk_psock_put",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->sk_psock_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvme_get_ns",
        "SecOp": "nvme_put_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvme_get_ns",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "lima_ctx_get",
        "SecOp": "lima_ctx_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->lima_ctx_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "_find_opp_of_np",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dev_pm_opp_get->_find_opp_of_np",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_get_dev_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->dev_get_dev_node",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_ns",
        "SecOp": "aa_put_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->aa_get_profile->aa_get_ns",
        "var_path": "arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_get_real_netdev",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->batadv_get_real_netdevice->batadv_get_real_netdev",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rpc_sysfs_xprt_kobj_get_xprt",
        "SecOp": "xprt_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->xprt_get->rpc_sysfs_xprt_kobj_get_xprt",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iscsi_get_conn",
        "SecOp": "iscsi_put_conn",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "get_device->iscsi_get_conn",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_bridge",
        "SecOp": "put_bridge",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->get_bridge",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "efi_get_device_by_path",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->device_find_child->parse_pci_path->efi_get_device_by_path",
        "var_path": "arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "media_request_get",
        "SecOp": "media_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->media_request_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "cpufreq_cpu_get",
        "SecOp": "cpufreq_cpu_put",
        "hasUsage": true,
        "usageCount": 23,
        "depth": 2,
        "API_path": "get_device->kobject_get->cpufreq_cpu_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_deleg_file",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->nfsd_file_get->find_deleg_file",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_buffer",
        "SecOp": "free_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->alloc_buffer_data->alloc_buffer",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "class_find_device_by_devt",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->class_find_device->class_find_device_by_devt",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bus_find_device_by_acpi_dev",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->bus_find_device->bus_find_device_by_acpi_dev",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pmd_alloc",
        "SecOp": "pmd_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 10,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->pmd_alloc_one->__pmd_alloc->pmd_alloc",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "mkiss_get",
        "SecOp": "mkiss_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->mkiss_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "llc_lookup_established",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->__llc_lookup_established->llc_lookup_established",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bl_open_dm_mpath_udev_path",
        "SecOp": "blkdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 10,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->blkdev_get_no_open->blkdev_get_by_dev->blkdev_get_by_path->bl_open_dm_mpath_udev_path",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_mdio_find_bus",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_of_node->of_mdio_find_bus",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "efc_nport_find",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->efc_nport_find",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlxsw_sp_span_agent_get",
        "SecOp": "mlxsw_sp_span_agent_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->mlxsw_sp_span_entry_get->mlxsw_sp_span_agent_get",
        "var_path": "arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "class_find_device_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "get_device->class_find_device->class_find_device_by_name",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bl_open_udev_path",
        "SecOp": "blkdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 10,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->blkdev_get_no_open->blkdev_get_by_dev->blkdev_get_by_path->bl_open_udev_path",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_device_from_queue",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "get_device->scsi_device_from_queue",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "input_get_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "get_device->input_get_device",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfsd_file_find_locked",
        "SecOp": "nfsd_file_put_noref",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->nfsd_file_get->nfsd_file_find_locked",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "phonet_device_get",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->phonet_device_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ib_uverbs_get_async_event",
        "SecOp": "uverbs_uobject_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->uverbs_uobject_get->ib_uverbs_get_async_event",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pmd_alloc_one",
        "SecOp": "pmd_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->pmd_alloc_one",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlxsw_sp_port_lower_dev_hold",
        "SecOp": "mlxsw_sp_port_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->mlxsw_sp_port_lower_dev_hold",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_dpc_port_get",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->pci_dev_get->acpi_dpc_port_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rdma_user_mmap_entry_get",
        "SecOp": "rdma_user_mmap_entry_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rdma_user_mmap_entry_get_pgoff->rdma_user_mmap_entry_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "usb_get_dev",
        "SecOp": "usb_put_dev",
        "hasUsage": true,
        "usageCount": 29,
        "depth": 1,
        "API_path": "get_device->usb_get_dev",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_rpccred",
        "SecOp": "put_rpccred",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->get_rpccred",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "vmw_bo_vm_lookup",
        "SecOp": "ttm_bo_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->ttm_bo_get_unless_zero->vmw_bo_vm_lookup",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvmet_fc_tgt_q_get",
        "SecOp": "nvmet_fc_tgt_q_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvmet_fc_tgt_q_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "blkdev_get_by_path",
        "SecOp": "blkdev_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 9,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->blkdev_get_no_open->blkdev_get_by_dev->blkdev_get_by_path",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_css_set",
        "SecOp": "put_css_set",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_css_set->find_css_set",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "arm64_mm_context_get",
        "SecOp": "arm64_mm_context_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->arm64_mm_context_get",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_graph_get_endpoint_by_regs",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 34,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->of_get_parent->of_graph_parse_endpoint->of_graph_get_endpoint_by_regs",
        "var_path": "arg->arg->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hnae_get_handle",
        "SecOp": "hnae_put_handle",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->find_ae->hnae_get_handle",
        "var_path": "arg->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "tcf_block_refcnt_get",
        "SecOp": "tcf_block_refcnt_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->tcf_block_refcnt_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvme_find_ns_head",
        "SecOp": "nvme_put_ns_head",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvme_tryget_ns_head->nvme_find_ns_head",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nd_pfn_devinit",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->__nd_attach_ndns->nd_pfn_devinit",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ipmr_new_tunnel",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->ipmr_new_tunnel",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_ccwdev_by_busid",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->driver_find_device->driver_find_device_by_name->get_ccwdev_by_busid",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "device_find_child",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 1,
        "API_path": "get_device->device_find_child",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bcom_task_alloc",
        "SecOp": "bcom_task_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 6,
        "API_path": "get_device->kobject_get->of_node_get->of_irq_find_parent->of_irq_parse_one->irq_of_parse_and_map->bcom_task_alloc",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvme_fc_ctrl_get",
        "SecOp": "nvme_fc_ctrl_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvme_fc_ctrl_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ssam_get_controller",
        "SecOp": "ssam_controller_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->ssam_get_controller",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pep_find_pipe",
        "SecOp": "__sock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->sock_hold->pep_find_pipe",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfs_get_lock_context",
        "SecOp": "nfs_put_lock_context",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->__nfs_find_lock_context->nfs_get_lock_context",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iommu_get_domain_for_dev",
        "SecOp": "iommu_group_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->iommu_group_get->iommu_get_domain_for_dev",
        "var_path": "arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "pinctrl_get",
        "SecOp": "pinctrl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->pinctrl_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_connector_lookup",
        "SecOp": "drm_connector_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->__drm_mode_object_find->drm_mode_object_find->drm_connector_lookup",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "btrfs_get_new_fs_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->btrfs_grab_root->btrfs_lookup_fs_root->btrfs_get_root_ref->btrfs_get_new_fs_root",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fastrpc_context_get",
        "SecOp": "fastrpc_context_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->fastrpc_context_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_net_ns_by_pid",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_net->get_net_ns_by_pid",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "clusterip_config_find_get",
        "SecOp": "clusterip_config_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->clusterip_config_find_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pnfs_get_layout_hdr",
        "SecOp": "pnfs_put_layout_hdr",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->pnfs_get_layout_hdr",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "xfrm_state_find",
        "SecOp": "xfrm_state_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->xfrm_state_hold_rcu->xfrm_state_find",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pcmcia_get_socket",
        "SecOp": "pcmcia_put_socket",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->pcmcia_get_socket",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "dfl_fme_region_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->fpga_region_class_find->dfl_fme_region_find",
        "var_path": "arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mvneta_bm_get",
        "SecOp": "mvneta_bm_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->mvneta_bm_get",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_timeline",
        "SecOp": "intel_timeline_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->get_timeline",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "zswap_pool_current_get",
        "SecOp": "zswap_pool_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->zswap_pool_get->zswap_pool_current_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "checked_tl_write",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->i915_request_get->checked_tl_write",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_disk_get",
        "SecOp": "scsi_disk_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->scsi_disk_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hvcs_get_by_index",
        "SecOp": "tty_port_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->tty_port_get->hvcs_get_by_index",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "btrfs_grab_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->btrfs_grab_root",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "gio_dev_get",
        "SecOp": "gio_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->gio_dev_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ibmvfc_get_target",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->__ibmvfc_get_target->ibmvfc_get_target",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "omapdss_find_dss_of_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_find_compatible_node->omapdss_find_dss_of_node",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__label_update",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label->__label_update",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "lookup_interface",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_name->lookup_interface",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tty_driver_kref_get",
        "SecOp": "tty_driver_kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->tty_driver_kref_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "alloc_stripe",
        "SecOp": "free_stripe",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 9,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->kmem_cache_zalloc->alloc_stripe",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_get_next_available_child",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_get_next_available_child",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ieee802154_nl_get_dev",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_name->ieee802154_nl_get_dev",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "xprt_switch_get",
        "SecOp": "xprt_switch_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->xprt_switch_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "l2tp_tunnel_get_session",
        "SecOp": "l2tp_session_dec_refcount",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->l2tp_session_inc_refcount->l2tp_tunnel_get_session",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cdev_get",
        "SecOp": "cdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->cdev_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_empty_config",
        "SecOp": "i915_oa_config_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->i915_oa_config_get->get_empty_config",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_xdomain_find_by_link_depth",
        "SecOp": "tb_xdomain_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "get_device->tb_xdomain_get->tb_xdomain_find_by_link_depth",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_node_by_phandle",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 3,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tegra_drm_mapping_get",
        "SecOp": "tegra_drm_mapping_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->tegra_drm_mapping_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_framebuffer_get",
        "SecOp": "drm_framebuffer_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->drm_mode_object_get->drm_framebuffer_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "video_get",
        "SecOp": "video_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->video_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "mpi3mr_get_tgtdev_by_perst_id",
        "SecOp": "mpi3mr_tgtdev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->mpi3mr_tgtdev_get->__mpi3mr_get_tgtdev_by_perst_id->mpi3mr_get_tgtdev_by_perst_id",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_syncobj_get_fd",
        "SecOp": "drm_syncobj_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->drm_syncobj_get->drm_syncobj_get_fd",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "omapdss_of_get_next_endpoint",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->__of_get_next_child->of_get_next_child->omapdss_of_get_next_endpoint",
        "var_path": "arg->arg->arg->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvmet_find_get_subsys",
        "SecOp": "nvmet_subsys_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvmet_find_get_subsys",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__mpt3sas_get_sdev_from_target",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->sas_device_get->__mpt3sas_get_sdev_from_target",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "xfrm_user_state_lookup",
        "SecOp": "xfrm_state_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->xfrm_state_hold_rcu->__xfrm_state_lookup_byaddr->xfrm_state_lookup_byaddr->xfrm_user_state_lookup",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kvm_vfio_group_get_iommu_group",
        "SecOp": "iommu_group_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->iommu_group_get_by_id->kvm_vfio_group_get_iommu_group",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvmet_ctrl_find_get",
        "SecOp": "nvmet_ctrl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvmet_ctrl_find_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kvm_tdp_mmu_get_root",
        "SecOp": "kvm_tdp_mmu_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kvm_tdp_mmu_get_root",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__mpi3mr_get_tgtdev_from_tgtpriv",
        "SecOp": "mpi3mr_tgtdev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->mpi3mr_tgtdev_get->__mpi3mr_get_tgtdev_from_tgtpriv",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__ceph_pool_perm_get",
        "SecOp": "ceph_put_string",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->ceph_get_string->__ceph_pool_perm_get",
        "var_path": "arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_proc_net",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->maybe_get_net->get_proc_net",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "crypto_mod_get",
        "SecOp": "crypto_mod_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->crypto_alg_get->crypto_mod_get",
        "var_path": "arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "nop_request",
        "SecOp": "i915_request_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->dma_fence_get->i915_request_get->nop_request",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "first_tid",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_task_struct->first_tid",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_first_error_state",
        "SecOp": "i915_gpu_coredump_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->i915_gpu_coredump_get->i915_first_error_state",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "qe_get_device_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_type->qe_get_device_node",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_tape_get",
        "SecOp": "scsi_tape_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->scsi_device_get->scsi_tape_get",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ieee802154_get_dev",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->ieee802154_get_dev",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_nc_get_nc_node",
        "SecOp": "batadv_nc_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_nc_get_nc_node",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ib_device_get_by_name",
        "SecOp": "ib_unregister_device_and_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->ib_device_try_get->ib_device_get_by_name",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rio_dev_get",
        "SecOp": "rio_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->rio_dev_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "zcrypt_queue_get",
        "SecOp": "zcrypt_queue_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->zcrypt_queue_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "cached_dev_get",
        "SecOp": "cached_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->cached_dev_get",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_dp_mst_topology_get_port_validated",
        "SecOp": "drm_dp_mst_topology_put_port",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->drm_dp_mst_topology_try_get_port->drm_dp_mst_topology_get_port_validated",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "NCR_700_detect",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 3,
        "API_path": "get_device->scsi_add_host_with_dma->scsi_add_host->NCR_700_detect",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cma_iboe_set_path_rec_l2_fields",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_index->cma_iboe_set_path_rec_l2_fields",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5_lag_get_roce_netdev",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->mlx5_lag_get_roce_netdev",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_and_get_or_create_sess",
        "SecOp": "rnbd_clt_put_sess",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->rnbd_clt_get_sess->send_msg_sess_info->find_and_get_or_create_sess",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_keyring_by_name",
        "SecOp": "key_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->find_keyring_by_name",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__mpt3sas_get_pdev_by_handle",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->pcie_device_get->__mpt3sas_get_pdev_by_handle",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rnbd_clt_get_sess",
        "SecOp": "rnbd_clt_put_sess",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->rnbd_clt_get_sess",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "fw_unit_get",
        "SecOp": "fw_unit_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->fw_unit_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_get_current_label",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label->aa_get_current_label",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "macsec_rxsa_get",
        "SecOp": "macsec_rxsa_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->macsec_rxsa_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_nc_get_path",
        "SecOp": "batadv_nc_path_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->batadv_nc_get_path",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_next_sas_device",
        "SecOp": "sas_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->sas_device_get->get_next_sas_device",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "eventfd_ctx_fdget",
        "SecOp": "eventfd_ctx_put",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->eventfd_ctx_fileget->eventfd_ctx_fdget",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fsnotify_find_mark",
        "SecOp": "fsnotify_put_mark",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->fsnotify_get_mark->fsnotify_find_mark",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "blkdev_get_by_dev",
        "SecOp": "blkdev_put",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->blkdev_get_no_open->blkdev_get_by_dev",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_get_real_netdevice",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->batadv_get_real_netdevice",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "comedi_buf_map_from_subdev_get",
        "SecOp": "comedi_buf_map_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->comedi_buf_map_get->comedi_buf_map_from_subdev_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_syncobj_find",
        "SecOp": "drm_syncobj_put",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->drm_syncobj_get->drm_syncobj_find",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kmem_cache_alloc_node",
        "SecOp": "kmem_cache_free",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 8,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->kmem_cache_alloc_node",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "atusb_alloc_urbs",
        "SecOp": "atusb_free_urbs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->usb_get_urb->usb_anchor_urb->atusb_alloc_urbs",
        "var_path": "arg->arg->arg->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "gss_get_ctx",
        "SecOp": "gss_put_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->gss_get_ctx",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "rtnl_link_get_net_capable",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_net->rtnl_link_get_net_by_nlattr->rtnl_link_get_net_capable",
        "var_path": "arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_spi_controller_by_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_of_node->of_find_spi_controller_by_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "q6asm_audio_client_alloc",
        "SecOp": "q6asm_audio_client_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->q6asm_get_audio_client->q6asm_audio_client_alloc",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_dp_aux_dev_get_by_minor",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->drm_dp_aux_dev_get_by_minor",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "amp_mgr_lookup_by_state",
        "SecOp": "amp_mgr_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->amp_mgr_get->amp_mgr_lookup_by_state",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "c4iw_rqtpool_alloc",
        "SecOp": "c4iw_rqtpool_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->c4iw_rqtpool_alloc",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "lookup_get_idr_uobject",
        "SecOp": "uverbs_uobject_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->lookup_get_idr_uobject",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kmem_cache_alloc",
        "SecOp": "kmem_cache_free",
        "hasUsage": true,
        "usageCount": 87,
        "depth": 7,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "nexthop_get",
        "SecOp": "nexthop_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->nexthop_get",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_dp_mst_topology_get_port",
        "SecOp": "drm_dp_mst_topology_put_port",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->drm_dp_mst_topology_get_port",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ceph_mdsc_get_request",
        "SecOp": "ceph_mdsc_put_request",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->ceph_mdsc_get_request",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "wlan_create_wiphy",
        "SecOp": "wlan_free_wiphy",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->device_add->wiphy_register->wlan_create_wiphy",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "v3d_get_extensions",
        "SecOp": "v3d_put_multisync_post_deps",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->drm_syncobj_get->drm_syncobj_find->v3d_get_multisync_post_deps->v3d_get_multisync_submit_deps->v3d_get_extensions",
        "var_path": "arg->arg->arg->arg->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_mipi_dsi_device_by_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_mipi_dsi_device_by_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_fw_req",
        "SecOp": "put_fw_req",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->get_fw_req",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nf_ct_expect_find_get",
        "SecOp": "nf_ct_expect_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->nf_ct_expect_find_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "intel_timeline_get",
        "SecOp": "intel_timeline_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->intel_timeline_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "pcistub_device_get",
        "SecOp": "pcistub_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->pcistub_device_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "hidp_session_find",
        "SecOp": "hidp_session_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->hidp_session_get->hidp_session_find",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_platform_device_find_by_companion",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_acpi_dev->acpi_platform_device_find_by_companion",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mei_me_cl_by_uuid",
        "SecOp": "mei_me_cl_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->mei_me_cl_get->__mei_me_cl_by_uuid->mei_me_cl_by_uuid",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "batadv_gw_get_selected_gw_node",
        "SecOp": "batadv_gw_node_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->batadv_gw_get_selected_gw_node",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bdi_get_by_id",
        "SecOp": "bdi_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->bdi_get->bdi_get_by_id",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ufshpb_get_map_ctx",
        "SecOp": "ufshpb_put_map_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->ufshpb_get_map_ctx",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "p9_req_try_get",
        "SecOp": "p9_req_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->p9_req_try_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_get_host_bridge_device",
        "SecOp": "pci_put_host_bridge_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->kobject_get->pci_get_host_bridge_device",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ethnl_parse_header_dev_get",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_name->ethnl_parse_header_dev_get",
        "var_path": "arg->arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_fpga_region_find",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->fpga_region_class_find->of_fpga_region_find",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_connector_get",
        "SecOp": "drm_connector_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->drm_mode_object_get->drm_connector_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "rcar_fcp_get",
        "SecOp": "rcar_fcp_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->rcar_fcp_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kmem_cache_alloc_bulk",
        "SecOp": "kmem_cache_free_bulk",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 7,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->get_partial->___slab_alloc->kmem_cache_alloc_bulk",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "xattr_alloc",
        "SecOp": "xattr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->f2fs_kmem_cache_alloc->xattr_alloc",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfs_dns_update",
        "SecOp": "cache_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->cache_get->sunrpc_cache_update->nfs_dns_update",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_ppc_fw_sb_node",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->of_node_get->of_find_matching_node_and_match->of_find_matching_node->get_ppc_fw_sb_node",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "usb_of_get_companion_dev",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_device_by_node->usb_of_get_companion_dev",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "wkup_m3_ipc_get",
        "SecOp": "wkup_m3_ipc_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->wkup_m3_ipc_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_irq_get_byname",
        "SecOp": "of_node_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->of_node_get->of_irq_find_parent->of_irq_parse_one->of_irq_get->of_irq_get_byname",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "tipc_aead_get",
        "SecOp": "tipc_aead_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->tipc_aead_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mpt3sas_get_pdev_by_wwid",
        "SecOp": "pcie_device_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->pcie_device_get->__mpt3sas_get_pdev_by_wwid->mpt3sas_get_pdev_by_wwid",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ip6mr_reg_vif",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->ip6mr_reg_vif",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_mode_get_tile_group",
        "SecOp": "drm_mode_put_tile_group",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->drm_mode_get_tile_group",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_dp_get_mst_branch_device",
        "SecOp": "drm_dp_mst_topology_put_mstb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->drm_dp_mst_topology_try_get_mstb->drm_dp_get_mst_branch_device",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_net_ns_by_fd",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_net->get_net_ns_by_fd",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5e_hairpin_get",
        "SecOp": "mlx5e_hairpin_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->mlx5e_hairpin_get",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "btrfs_get_caching_control",
        "SecOp": "btrfs_put_caching_control",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->btrfs_get_caching_control",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__inet6_lookup_skb",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->__inet6_lookup_established->__inet6_lookup->__inet6_lookup_skb",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ceph_msg_get",
        "SecOp": "ceph_msg_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->ceph_msg_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "copy_mnt_ns",
        "SecOp": "put_mnt_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_mnt_ns->copy_mnt_ns",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_gb_by_minor",
        "SecOp": "tty_port_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->tty_port_get->get_gb_by_minor",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_dp_get_one_sb_msg",
        "SecOp": "drm_dp_mst_topology_put_mstb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->drm_dp_mst_topology_try_get_mstb->drm_dp_get_mst_branch_device->drm_dp_get_one_sb_msg",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "tty_port_tty_get",
        "SecOp": "tty_kref_put",
        "hasUsage": true,
        "usageCount": 66,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->tty_kref_get->tty_port_tty_get",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "lynx_get",
        "SecOp": "lynx_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->lynx_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "chsc_get_next_subchannel",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->driver_find_device->chsc_get_next_subchannel",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cache_alloc_zspage",
        "SecOp": "cache_free_zspage",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->kmem_cache_zalloc->cache_alloc_zspage",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "isci_lookup_device",
        "SecOp": "isci_put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->isci_lookup_device",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_cfg_request_get",
        "SecOp": "tb_cfg_request_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->tb_cfg_request_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_find_child",
        "SecOp": "aa_put_profile",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->aa_get_profile_not0->aa_find_child",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "j1939_priv_get_by_ndev",
        "SecOp": "j1939_priv_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->j1939_priv_get->j1939_priv_get_by_ndev_locked->j1939_priv_get_by_ndev",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ubi_alloc_aeb",
        "SecOp": "ubi_free_aeb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->kmem_cache_zalloc->ubi_alloc_aeb",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "macsec_txsa_get",
        "SecOp": "macsec_txsa_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->macsec_txsa_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tipc_node_find",
        "SecOp": "tipc_node_put",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->tipc_node_find",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_property_change_valid_get",
        "SecOp": "drm_property_change_valid_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->__drm_mode_object_find->drm_property_change_valid_get",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "snd_soc_new_ac97_component",
        "SecOp": "snd_soc_free_ac97_component",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "get_device->device_add->snd_soc_new_ac97_component",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "auxiliary_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->bus_find_device->auxiliary_find_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_label_merge",
        "SecOp": "aa_put_label",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label->aa_get_newest_label->aa_label_merge",
        "var_path": "arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hfi1_rcd_get_by_index_safe",
        "SecOp": "hfi1_rcd_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->hfi1_rcd_get->hfi1_rcd_get_by_index->hfi1_rcd_get_by_index_safe",
        "var_path": "arg->arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfsd_file_get",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->nfsd_file_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_get_context",
        "SecOp": "put_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_ctx->find_get_context",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "f2fs_kmem_cache_alloc",
        "SecOp": "kmem_cache_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 8,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->f2fs_kmem_cache_alloc",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__inet_lookup_established",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->__inet_lookup_established",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dmabuf_obj_get",
        "SecOp": "dmabuf_obj_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->dmabuf_obj_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__aa_find_or_create_ns",
        "SecOp": "aa_put_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->aa_get_profile->aa_get_ns->__aa_find_or_create_ns",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_find_spi_device_by_node",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_of_node->of_find_spi_device_by_node",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kunit_alloc_and_get_resource",
        "SecOp": "kunit_put_resource",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->kunit_get_resource->kunit_alloc_and_get_resource",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_mdio_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->fwnode_mdio_find_device->of_mdio_find_device",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "fs_context_for_mount",
        "SecOp": "put_user_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_user_ns->alloc_fs_context->fs_context_for_mount",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "v3d_perfmon_get",
        "SecOp": "v3d_perfmon_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->v3d_perfmon_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_or_create_srv",
        "SecOp": "put_srv",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->get_or_create_srv",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "lcs_get_reply",
        "SecOp": "lcs_put_reply",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->lcs_get_reply",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "c4iw_get_wr_wait",
        "SecOp": "c4iw_put_wr_wait",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->c4iw_get_wr_wait",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_device_get",
        "SecOp": "scsi_device_put",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 1,
        "API_path": "get_device->scsi_device_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_zcdndev_by_name",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_name->find_zcdndev_by_name",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "j1939_sk_get_incomplete_session",
        "SecOp": "j1939_session_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->j1939_session_get->j1939_sk_get_incomplete_session",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "tb_xdomain_get",
        "SecOp": "tb_xdomain_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->tb_xdomain_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "hns_dsaf_find_platform_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->bus_find_device->bus_find_device_by_fwnode->hns_dsaf_find_platform_device",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "rsi_update",
        "SecOp": "cache_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->cache_get->sunrpc_cache_update->rsi_update",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "aa_alloc_profile",
        "SecOp": "aa_free_profile",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->aa_get_label->aa_alloc_proxy->aa_alloc_profile",
        "var_path": "arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "j1939_session_get",
        "SecOp": "j1939_session_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->j1939_session_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_dev_get_first_match_dev",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 3,
        "API_path": "get_device->bus_find_device->acpi_dev_get_next_match_dev->acpi_dev_get_first_match_dev",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pci_scan_single_device",
        "SecOp": "pci_dev_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->pci_dev_get->pci_get_slot->pci_scan_single_device",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "crypto_spawn_alg",
        "SecOp": "crypto_mod_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->crypto_alg_get->crypto_mod_get->crypto_spawn_alg",
        "var_path": "arg->arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "txopt_get",
        "SecOp": "txopt_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->txopt_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5_get_uars_page",
        "SecOp": "mlx5_put_uars_page",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->mlx5_get_uars_page",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "devlink_netns_get",
        "SecOp": "put_net",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_net->get_net_ns_by_pid->devlink_netns_get",
        "var_path": "arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "zfcp_unit_sdev",
        "SecOp": "scsi_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "get_device->scsi_device_get->scsi_device_lookup->zfcp_unit_sdev",
        "var_path": "arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "cmd_ent_get",
        "SecOp": "cmd_ent_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->cmd_ent_get",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "devlink_get_from_attrs",
        "SecOp": "devlink_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->devlink_try_get->devlink_get_from_attrs",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_pf_vdev",
        "SecOp": "vfio_device_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->vfio_device_try_get->vfio_group_get_device->vfio_device_get_from_dev->get_pf_vdev",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "btrfs_get_global_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->btrfs_grab_root->btrfs_get_global_root",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "vfio_group_get_device",
        "SecOp": "vfio_device_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->vfio_device_try_get->vfio_group_get_device",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "regulator_dev_lookup",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->class_find_device->regulator_lookup_by_name->regulator_dev_lookup",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iio_device_get",
        "SecOp": "iio_device_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "get_device->iio_device_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "gss_cred_get_ctx",
        "SecOp": "gss_put_ctx",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->gss_get_ctx->gss_cred_get_ctx",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfs4_find_file",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->nfsd_file_get->nfs4_find_file",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ip_dev_find",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->__ip_dev_find->ip_dev_find",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "pktgen_dev_get_by_name",
        "SecOp": "dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->dev_get_by_name->pktgen_dev_get_by_name",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "__uobj_get_destroy",
        "SecOp": "uobj_put_destroy",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->lookup_get_idr_uobject->rdma_lookup_get_uobject->__uobj_get_destroy",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "sas_get_local_phy",
        "SecOp": "sas_put_local_phy",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 1,
        "API_path": "get_device->sas_get_local_phy",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "j1939_ecu_get_by_name",
        "SecOp": "j1939_ecu_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->j1939_ecu_get->j1939_ecu_get_by_name_locked->j1939_ecu_get_by_name",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nvmet_rdma_find_get_device",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->nvmet_rdma_find_get_device",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "j1939_session_get_simple",
        "SecOp": "j1939_session_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->j1939_session_get->j1939_session_get_simple",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "srpt_alloc_ioctx",
        "SecOp": "srpt_free_ioctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->srpt_alloc_ioctx",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "j1939_priv_get",
        "SecOp": "j1939_priv_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->j1939_priv_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "hw_sob_get",
        "SecOp": "hw_sob_put_err",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->hw_sob_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "ceph_find_or_create_string",
        "SecOp": "ceph_put_string",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->ceph_find_or_create_string",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_readable_file",
        "SecOp": "nfsd_file_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->nfsd_file_get->__nfs4_get_fd->find_readable_file_locked->find_readable_file",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "_get_cpuid",
        "SecOp": "perf_cpu_map__put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->perf_cpu_map__get->_get_cpuid",
        "var_path": "arg->arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "configfs_get_config_item",
        "SecOp": "config_item_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->config_item_get->configfs_get_config_item",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_current_tty",
        "SecOp": "tty_kref_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->tty_kref_get->get_current_tty",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "driver_find_device",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "get_device->driver_find_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_pm_opp_get",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->dev_pm_opp_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__ceph_monc_get_version",
        "SecOp": "put_generic_request",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->get_generic_request->register_generic_request->__ceph_monc_get_version",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ipoib_intf_alloc",
        "SecOp": "ipoib_intf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->dev_hold->alloc_netdev_mqs->rdma_alloc_netdev->ipoib_alloc_netdev->ipoib_intf_alloc",
        "var_path": "arg->arg->arg->arg->arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mlx5e_flow_get",
        "SecOp": "mlx5e_flow_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->mlx5e_flow_get",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "soundbus_dev_get",
        "SecOp": "soundbus_dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->soundbus_dev_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "__context_lookup",
        "SecOp": "i915_gem_context_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->__context_lookup",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "devlink_try_get",
        "SecOp": "devlink_put",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->devlink_try_get",
        "var_path": "arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "dlm_get_mle_inuse",
        "SecOp": "dlm_put_mle_inuse",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->dlm_get_mle_inuse",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "rnbd_get_sess_dev",
        "SecOp": "rnbd_put_sess_dev",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->rnbd_get_sess_dev",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_dev_get",
        "SecOp": "drm_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->drm_dev_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "gss_add_msg",
        "SecOp": "refcount_dec",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->gss_add_msg",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "find_closed_service_for_instance",
        "SecOp": "vchiq_service_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->find_closed_service_for_instance",
        "var_path": "arg->arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "prepare_creds",
        "SecOp": "key_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->__key_get->key_get->prepare_creds",
        "var_path": "arg->arg->arg->arg->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "scsi_host_get",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->scsi_host_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bpf_trampoline_get",
        "SecOp": "bpf_trampoline_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->bpf_trampoline_lookup->bpf_trampoline_get",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "drm_dp_mst_topology_try_get_mstb",
        "SecOp": "drm_dp_mst_topology_put_mstb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->drm_dp_mst_topology_try_get_mstb",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "scrub_get_recover",
        "SecOp": "scrub_put_recover",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->scrub_get_recover",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_mount_group",
        "SecOp": "kref_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->get_mount_group",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "crypto_larval_lookup",
        "SecOp": "crypto_mod_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->crypto_alg_get->crypto_mod_get->crypto_larval_wait->crypto_larval_lookup",
        "var_path": "arg->arg->arg->arg->retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ceph_find_incompatible",
        "SecOp": "ceph_put_snap_context",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->ceph_get_snap_context->ceph_find_incompatible",
        "var_path": "arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "i915_gem_context_get_engine",
        "SecOp": "intel_context_put",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->intel_context_get->i915_gem_context_get_engine",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_skb",
        "SecOp": "skb_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->skb_get->get_skb",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfs4_state_find_open_context",
        "SecOp": "put_nfs_open_context",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->get_nfs_open_context->nfs4_state_find_open_context_mode->nfs4_state_find_open_context",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "audit_get_tty",
        "SecOp": "audit_put_tty",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->tty_kref_get->audit_get_tty",
        "var_path": "arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "perf_pin_task_context",
        "SecOp": "put_ctx",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->perf_lock_task_context->perf_pin_task_context",
        "var_path": "arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "bdi_get",
        "SecOp": "bdi_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->bdi_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "next_tgid",
        "SecOp": "put_task_struct",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_task_struct->next_tgid",
        "var_path": "arg->arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ubi_get_by_major",
        "SecOp": "ubi_put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->ubi_get_by_major",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_uts_ns",
        "SecOp": "put_uts_ns",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_uts_ns",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "dev_pm_opp_find_freq_floor",
        "SecOp": "dev_pm_opp_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->dev_pm_opp_get->dev_pm_opp_find_freq_floor",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "amdgpu_ctx_get",
        "SecOp": "amdgpu_ctx_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->amdgpu_ctx_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_slot",
        "SecOp": "kobject_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "get_device->kobject_get->get_slot",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mei_me_cl_get",
        "SecOp": "mei_me_cl_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->mei_me_cl_get",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "nfc_get_device",
        "SecOp": "nfc_put_device",
        "hasUsage": true,
        "usageCount": 19,
        "depth": 2,
        "API_path": "get_device->class_find_device->nfc_get_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "mdio_find_bus",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->class_find_device->class_find_device_by_name->mdio_find_bus",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "ocfs2_refcount_tree_get",
        "SecOp": "ocfs2_refcount_tree_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->ocfs2_refcount_tree_get",
        "var_path": "arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "v4l2_ctrls_find_req_obj",
        "SecOp": "media_request_object_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->media_request_object_get->v4l2_ctrls_find_req_obj",
        "var_path": "arg->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_dev",
        "SecOp": "put_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->get_dev",
        "var_path": "arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "get_hem_table",
        "SecOp": "put_hem_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->hns_roce_table_mhop_get->hns_roce_table_get->get_hem_table",
        "var_path": "arg->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "of_fpga_region_get_mgr",
        "SecOp": "fpga_mgr_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->class_find_device->class_find_device_by_of_node->of_fpga_mgr_get->of_fpga_region_get_mgr",
        "var_path": "arg->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "acpi_ipmi_dev_get",
        "SecOp": "acpi_ipmi_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "get_device->kobject_get->kref_get->acpi_ipmi_dev_get",
        "var_path": "arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "kset_find_obj",
        "SecOp": "kobject_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 7,
        "API_path": "get_device->kobject_get->kref_get->refcount_inc->refcount_inc_not_zero->kref_get_unless_zero->kobject_get_unless_zero->kset_find_obj",
        "var_path": "arg->arg->arg->arg->arg->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "o2nm_node_get",
        "SecOp": "o2nm_node_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "get_device->kobject_get->kref_get->config_item_get->o2nm_node_get",
        "var_path": "arg->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "pgd_alloc",
        "SecOp": "pgd_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "get_device->kobject_get->of_node_get->of_find_node_by_phandle->get_node->slab_alloc_node->slab_alloc->kmem_cache_alloc->pgd_alloc",
        "var_path": "arg->arg->arg->retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "macio_dev_get",
        "SecOp": "macio_dev_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "get_device->macio_dev_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "get_device"
    },
    {
        "API": "hci_dev_hold",
        "SecOp": "hci_dev_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "get_device->hci_dev_hold",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "get_device"
    },
    {
        "API": "iscsi_host_alloc",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "device_initialize->scsi_host_alloc->iscsi_host_alloc",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "iio_device_alloc",
        "SecOp": "iio_device_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->iio_device_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "spmi_device_alloc",
        "SecOp": "spmi_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->spmi_device_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "spi_alloc_slave",
        "SecOp": "spi_controller_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "device_initialize->__spi_alloc_controller->spi_alloc_slave",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "tb_switch_alloc",
        "SecOp": "tb_switch_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "device_initialize->tb_switch_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "vfio_group_alloc",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->vfio_group_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "edac_mc_alloc",
        "SecOp": "edac_mc_free",
        "hasUsage": true,
        "usageCount": 39,
        "depth": 1,
        "API_path": "device_initialize->edac_mc_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "sas_port_alloc_num",
        "SecOp": "sas_port_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "device_initialize->sas_port_alloc->sas_port_alloc_num",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "mdio_device_create",
        "SecOp": "mdio_device_free",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "device_initialize->mdio_device_create",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "tb_domain_alloc",
        "SecOp": "tb_domain_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->tb_domain_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "nfc_allocate_device",
        "SecOp": "nfc_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->nfc_allocate_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "pn532_i2c_nfc_alloc",
        "SecOp": "nfc_free_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "device_initialize->nfc_allocate_device->pn532_i2c_nfc_alloc",
        "var_path": "arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "net2272_probe_init",
        "SecOp": "usb_put_gadget",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "device_initialize->usb_initialize_gadget->net2272_probe_init",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "phy_device_create",
        "SecOp": "phy_device_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->phy_device_create",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "gb_module_create",
        "SecOp": "gb_module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->gb_module_create",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "cio_probe_console",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->css_alloc_subchannel->cio_probe_console",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "jmb38x_ms_alloc_host",
        "SecOp": "jmb38x_ms_free_host",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->memstick_alloc_host->jmb38x_ms_alloc_host",
        "var_path": "arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "__alloc_disk_node",
        "SecOp": "put_disk",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->__alloc_disk_node",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "alloc_switch",
        "SecOp": "tb_switch_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "device_initialize->tb_switch_alloc->alloc_switch",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "bfad_scsi_host_alloc",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->scsi_host_alloc->bfad_scsi_host_alloc",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "snd_soc_alloc_ac97_component",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->snd_soc_alloc_ac97_component",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "spi_alloc_master",
        "SecOp": "spi_controller_put",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 2,
        "API_path": "device_initialize->__spi_alloc_controller->spi_alloc_master",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "sas_phy_alloc",
        "SecOp": "sas_phy_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "device_initialize->sas_phy_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "serdev_controller_alloc",
        "SecOp": "serdev_controller_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->serdev_controller_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "get_phy_device",
        "SecOp": "phy_device_free",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "device_initialize->phy_device_create->get_phy_device",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "rproc_alloc",
        "SecOp": "rproc_free",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 1,
        "API_path": "device_initialize->rproc_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "scsi_host_alloc",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 98,
        "depth": 1,
        "API_path": "device_initialize->scsi_host_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "wbsd_alloc_mmc",
        "SecOp": "wbsd_free_mmc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->mmc_alloc_host->wbsd_alloc_mmc",
        "var_path": "arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "mcp_host_alloc",
        "SecOp": "mcp_host_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->mcp_host_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "siox_master_alloc",
        "SecOp": "siox_master_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->siox_master_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "hisi_sas_shost_alloc_pci",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->scsi_host_alloc->hisi_sas_shost_alloc_pci",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "serdev_device_alloc",
        "SecOp": "serdev_device_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->serdev_device_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "tifm_alloc_adapter",
        "SecOp": "tifm_free_adapter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->tifm_alloc_adapter",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "memstick_alloc_host",
        "SecOp": "memstick_free_host",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "device_initialize->memstick_alloc_host",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "css_alloc_subchannel",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->css_alloc_subchannel",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "spi_alloc_device",
        "SecOp": "spi_dev_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "device_initialize->spi_alloc_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "mmc_alloc_host",
        "SecOp": "mmc_free_host",
        "hasUsage": true,
        "usageCount": 32,
        "depth": 1,
        "API_path": "device_initialize->mmc_alloc_host",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "usb_alloc_dev",
        "SecOp": "usb_put_dev",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->usb_alloc_dev",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "rc_allocate_device",
        "SecOp": "rc_free_device",
        "hasUsage": true,
        "usageCount": 39,
        "depth": 1,
        "API_path": "device_initialize->rc_allocate_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "hisi_sas_shost_alloc",
        "SecOp": "scsi_host_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "device_initialize->scsi_host_alloc->hisi_sas_shost_alloc",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "spmi_controller_alloc",
        "SecOp": "spmi_controller_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->spmi_controller_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "sas_port_alloc",
        "SecOp": "sas_port_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->sas_port_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "tb_switch_alloc_safe_mode",
        "SecOp": "tb_switch_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->tb_switch_alloc_safe_mode",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "intel_th_device_alloc",
        "SecOp": "put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->intel_th_device_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "smcd_alloc_dev",
        "SecOp": "smcd_free_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->smcd_alloc_dev",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "ssam_device_alloc",
        "SecOp": "ssam_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "device_initialize->ssam_device_alloc",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "iscsi_alloc_session",
        "SecOp": "iscsi_free_session",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "device_initialize->iscsi_alloc_session",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "device_initialize"
    },
    {
        "API": "cxl_calls_get",
        "SecOp": "cxl_calls_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->cxl_calls_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "cpufreq_parse_governor",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->get_governor->cpufreq_parse_governor",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "get_governor",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->get_governor",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "tcf_em_lookup",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->tcf_em_lookup",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "fwnode_typec_mux_get",
        "SecOp": "typec_mux_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->fwnode_typec_mux_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "get_type",
        "SecOp": "put_type",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "try_module_get->_get_exception_store_type->get_type",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "qdisc_lookup_ops",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->qdisc_lookup_ops",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "__ip_vs_pe_getbyname",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->__ip_vs_pe_getbyname",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "stm_find_device",
        "SecOp": "stm_put_device",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "try_module_get->stm_find_device",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "rpcauth_get_authops",
        "SecOp": "rpcauth_put_authops",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "try_module_get->rpcauth_get_authops",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "iio_get_sw_trigger_type",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->iio_get_sw_trigger_type",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "fwnode_typec_switch_get",
        "SecOp": "typec_switch_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->fwnode_typec_switch_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "nf_conntrack_helper_try_module_get",
        "SecOp": "nf_conntrack_helper_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "try_module_get->nf_conntrack_helper_try_module_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "dm_get_target_type",
        "SecOp": "dm_put_target_type",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "try_module_get->get_target_type->dm_get_target_type",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "alg_get_type",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->alg_get_type",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "of_get_i2c_adapter_by_node",
        "SecOp": "i2c_put_adapter",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "try_module_get->of_get_i2c_adapter_by_node",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "core_get_backend",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->core_get_backend",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "phonet_proto_get",
        "SecOp": "phonet_proto_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->phonet_proto_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "alloc_crypto",
        "SecOp": "free_crypto",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 10,
        "API_path": "try_module_get->crypto_mod_get->crypto_larval_wait->crypto_larval_lookup->crypto_alg_mod_lookup->crypto_find_alg->crypto_alloc_tfm_node->crypto_alloc_tfm->crypto_alloc_shash->alloc_shash->alloc_crypto",
        "var_path": "arg->arg->arg->retval->retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "get_policy",
        "SecOp": "put_policy",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "try_module_get->__get_policy_once->get_policy_once->get_policy",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "cifs_alloc_hash",
        "SecOp": "cifs_free_hash",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 9,
        "API_path": "try_module_get->crypto_mod_get->crypto_larval_wait->crypto_larval_lookup->crypto_alg_mod_lookup->crypto_find_alg->crypto_alloc_tfm_node->crypto_alloc_tfm->crypto_alloc_shash->cifs_alloc_hash",
        "var_path": "arg->arg->arg->retval->retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "nft_expr_type_get",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->nft_expr_type_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "find_ife_oplist",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "try_module_get->find_ife_oplist",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "typec_mux_get",
        "SecOp": "typec_mux_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->fwnode_typec_mux_get->typec_mux_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "usb_role_switch_get",
        "SecOp": "usb_role_switch_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "try_module_get->usb_role_switch_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "xt_request_find_match",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "try_module_get->xt_find_match->xt_request_find_match",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "sun4i_hdmi_get_ddc",
        "SecOp": "i2c_put_adapter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->of_get_i2c_adapter_by_node->sun4i_hdmi_get_ddc",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "crypto_alloc_shash",
        "SecOp": "crypto_free_shash",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "try_module_get->crypto_mod_get->crypto_larval_wait->crypto_larval_lookup->crypto_alg_mod_lookup->crypto_find_alg->crypto_alloc_tfm_node->crypto_alloc_tfm->crypto_alloc_shash",
        "var_path": "arg->arg->arg->retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "trace_event_try_get_ref",
        "SecOp": "trace_event_put_ref",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "try_module_get->trace_event_try_get_ref",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "strong_try_module_get",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->strong_try_module_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "can_get_proto",
        "SecOp": "can_put_proto",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->can_get_proto",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "xt_request_find_table_lock",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "try_module_get->xt_find_table_lock->xt_request_find_table_lock",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "elevator_get_default",
        "SecOp": "elevator_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->elevator_get->elevator_get_default",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "pmf_find_function",
        "SecOp": "pmf_put_function",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "try_module_get->pmf_get_function->pmf_find_function",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "team_mode_get",
        "SecOp": "team_mode_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->team_mode_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "lookup_ts_algo",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->lookup_ts_algo",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "elevator_get",
        "SecOp": "elevator_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->elevator_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "iio_get_sw_device_type",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->iio_get_sw_device_type",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "get_mtd_chip_driver",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->get_mtd_chip_driver",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "alloc_shash",
        "SecOp": "crypto_free_shash",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 9,
        "API_path": "try_module_get->crypto_mod_get->crypto_larval_wait->crypto_larval_lookup->crypto_alg_mod_lookup->crypto_find_alg->crypto_alloc_tfm_node->crypto_alloc_tfm->crypto_alloc_shash->alloc_shash",
        "var_path": "arg->arg->arg->retval->retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "spufs_calls_get",
        "SecOp": "spufs_calls_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "try_module_get->spufs_calls_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "iscsit_get_transport",
        "SecOp": "iscsit_put_transport",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->iscsit_get_transport",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "xt_find_match",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->xt_find_match",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "dfl_fpga_port_ops_get",
        "SecOp": "dfl_fpga_port_ops_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->dfl_fpga_port_ops_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "fwnode_usb_role_switch_get",
        "SecOp": "usb_role_switch_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "try_module_get->fwnode_usb_role_switch_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "get_fs_type",
        "SecOp": "put_filesystem",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "try_module_get->__get_fs_type->get_fs_type",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "crypto_alloc_skcipher",
        "SecOp": "crypto_free_skcipher",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 8,
        "API_path": "try_module_get->crypto_mod_get->crypto_larval_wait->crypto_larval_lookup->crypto_alg_mod_lookup->crypto_find_alg->crypto_alloc_tfm_node->crypto_alloc_tfm->crypto_alloc_skcipher",
        "var_path": "arg->arg->arg->retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "xt_find_table_lock",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 1,
        "API_path": "try_module_get->xt_find_table_lock",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "xfrm_get_translator",
        "SecOp": "xfrm_put_translator",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "try_module_get->xfrm_get_translator",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "dm_get_path_selector",
        "SecOp": "dm_put_path_selector",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "try_module_get->get_path_selector->dm_get_path_selector",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "__get_fs_type",
        "SecOp": "put_filesystem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->__get_fs_type",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "get_xt_match",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "try_module_get->xt_find_match->xt_request_find_match->get_xt_match",
        "var_path": "arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "of_led_get",
        "SecOp": "led_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->of_led_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "nf_sockopt_find",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "try_module_get->nf_sockopt_find",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "find_quota_format",
        "SecOp": "put_quota_format",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->find_quota_format",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "nft_flowtable_type_get",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->nft_flowtable_type_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "trace_get_event_file",
        "SecOp": "trace_put_event_file",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "try_module_get->trace_event_try_get_ref->trace_get_event_file",
        "var_path": "arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "elevator_get_by_features",
        "SecOp": "elevator_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->elevator_get_by_features",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "ipack_get_carrier",
        "SecOp": "ipack_put_carrier",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->ipack_get_carrier",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "mei_cl_bus_module_get",
        "SecOp": "mei_cl_bus_module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->mei_cl_bus_module_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "nft_obj_type_get",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->nft_obj_type_get",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "nfs_alloc_client",
        "SecOp": "nfs_free_client",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->nfs_alloc_client",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "find_pnfs_driver",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "try_module_get->find_pnfs_driver",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "xt_request_find_target",
        "SecOp": "module_put",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 2,
        "API_path": "try_module_get->xt_find_target->xt_request_find_target",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "eeh_pcid_get",
        "SecOp": "eeh_pcid_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "try_module_get->eeh_pcid_get",
        "var_path": "arg->arg",
        "var_role": "arg0",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "ip_vs_scheduler_get",
        "SecOp": "ip_vs_scheduler_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "try_module_get->ip_vs_sched_getbyname->ip_vs_scheduler_get",
        "var_path": "arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "lookup_rules_ops",
        "SecOp": "rules_ops_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "try_module_get->lookup_rules_ops",
        "var_path": "arg->retval",
        "var_role": "retval",
        "SeedAPI": "try_module_get"
    },
    {
        "API": "qla4xxx_get_new_mrb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla4xxx_get_new_mrb",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "edac_pci_alloc_ctl_info",
        "SecOp": "edac_pci_free_ctl_info",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->edac_pci_alloc_ctl_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sgl_alloc",
        "SecOp": "sgl_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->sgl_alloc_order->sgl_alloc",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rvt_mcast_alloc",
        "SecOp": "rvt_mcast_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rvt_mcast_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "optee_config_shm_memremap",
        "SecOp": "tee_shm_pool_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tee_shm_pool_alloc->optee_config_shm_memremap",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usbctlx_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->usbctlx_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "devlink_alloc",
        "SecOp": "devlink_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->devlink_alloc_ns->devlink_alloc",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wiimote_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wiimote_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mei_cl_allocate",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mei_cl_allocate",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "siw_pbl_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->siw_pbl_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rpc_alloc_iostats",
        "SecOp": "rpc_free_iostats",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->rpc_alloc_iostats",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qede_alloc_fp_array",
        "SecOp": "qede_free_fp_array",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->qede_alloc_fp_array",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mtk_alloc_clk_data",
        "SecOp": "mtk_free_clk_data",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mtk_alloc_clk_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_tunnel_alloc_usb3",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_usb3",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qxl_create_plane",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qxl_create_plane",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bch_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->bch_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ssip_alloc_data",
        "SecOp": "hsi_free_msg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->hsi_alloc_msg->ssip_alloc_data",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_read_raw_data",
        "SecOp": "mpi_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->mpi_alloc->mpi_read_raw_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "virtcrypto_alloc_queues",
        "SecOp": "virtcrypto_free_queues",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->virtcrypto_alloc_queues",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_prog_alloc",
        "SecOp": "bpf_prog_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->bpf_prog_alloc_no_stats->bpf_prog_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iovec_from_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->iovec_from_user",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iotlb_alloc_cr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->iotlb_alloc_cr",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "r8a66597_make_td",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->r8a66597_make_td",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btf_parse",
        "SecOp": "btf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btf_parse",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lpfc_bsg_dma_page_alloc",
        "SecOp": "lpfc_bsg_dma_page_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->lpfc_bsg_dma_page_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qedi_alloc_fp",
        "SecOp": "qedi_free_fp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->qedi_alloc_fp",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qlcnic_alloc_sw_resources",
        "SecOp": "qlcnic_free_sw_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->qlcnic_alloc_sw_resources",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lcs_alloc_reply",
        "SecOp": "lcs_put_reply",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lcs_alloc_reply",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "flow_rule_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->flow_rule_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_rif_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_rif_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_cq_db",
        "SecOp": "free_cq_db",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->hns_roce_alloc_db_pgdir->hns_roce_alloc_db->alloc_cq_db",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "agp_alloc_bridge",
        "SecOp": "agp_put_bridge",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->agp_alloc_bridge",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "do_kimage_alloc_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->do_kimage_alloc_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5e_alloc_txqsq",
        "SecOp": "mlx5e_free_txqsq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node->kvmalloc_node->kvzalloc_node->mlx5e_alloc_txqsq_db->mlx5e_alloc_txqsq",
        "var_path": "retval->retval->retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rxrpc_alloc_bundle",
        "SecOp": "rxrpc_free_bundle",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rxrpc_alloc_bundle",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "devlink_alloc_ns",
        "SecOp": "devlink_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->devlink_alloc_ns",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mtr_alloc_bufs",
        "SecOp": "mtr_free_bufs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->sg_kmalloc->get_next_sg->sg_alloc_append_table_from_pages->ib_umem_get->mtr_alloc_bufs",
        "var_path": "retval->retval->retval->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nft_obj_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nft_obj_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_delalloc_work",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->btrfs_alloc_delalloc_work",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_ctl_pkg_alloc",
        "SecOp": "tb_ctl_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->tb_ctl_pkg_alloc",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnx2x_frag_alloc",
        "SecOp": "bnx2x_frag_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->bnx2x_frag_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "go7007_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->go7007_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfsd4_cltrack_legacy_recdir",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfsd4_cltrack_legacy_recdir",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vboxsf_dir_info_alloc",
        "SecOp": "vboxsf_dir_info_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vboxsf_dir_info_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_readdir_alloc_pages",
        "SecOp": "nfs_readdir_free_pages",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->nfs_readdir_alloc_pages",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ep",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ep",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qdisc_get_stab",
        "SecOp": "qdisc_put_stab",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->qdisc_get_stab",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dpaa2_eth_alloc_channel",
        "SecOp": "dpaa2_eth_free_channel",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dpaa2_eth_alloc_channel",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "jz4780_dma_desc_alloc",
        "SecOp": "jz4780_dma_desc_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->jz4780_dma_desc_alloc",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sampler_get",
        "SecOp": "sampler_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sampler_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn30_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn30_afmt_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efa_zalloc_mapped",
        "SecOp": "efa_free_mapped",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->alloc_pages_exact->efa_zalloc_mapped",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_prog_array_alloc",
        "SecOp": "bpf_prog_array_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_prog_array_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ebda_hpc",
        "SecOp": "free_ebda_hpc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ebda_hpc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "afs_alloc_call",
        "SecOp": "afs_put_call",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->afs_alloc_call",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_prime_pages_to_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->drm_prime_pages_to_sg",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "damon_new_target",
        "SecOp": "damon_free_target",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "kmalloc->damon_new_target",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "check_partition",
        "SecOp": "free_partitions",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->allocate_partitions->check_partition",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "eeh_pe_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->eeh_pe_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_wr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_wr",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__seq_open_private",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__seq_open_private",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "opa_vnic_alloc_mac_tbl",
        "SecOp": "opa_vnic_free_mac_tbl",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->opa_vnic_alloc_mac_tbl",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5e_tc_init_fib_work",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5e_tc_init_fib_work",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dp_meter_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dp_meter_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_build_path_to_root",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->cifs_build_path_to_root",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ai",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ai",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ulist_alloc",
        "SecOp": "ulist_free",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 1,
        "API_path": "kmalloc->ulist_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath11k_ce_alloc_pipes",
        "SecOp": "ath11k_ce_free_pipes",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->ath11k_ce_alloc_ring->ath11k_ce_alloc_pipe->ath11k_ce_alloc_pipes",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_pcichild_device",
        "SecOp": "put_pcichild",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->new_pcichild_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_synth_event",
        "SecOp": "free_synth_event",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_synth_event",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mon_alloc_mem",
        "SecOp": "mon_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mon_alloc_mem",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_alloc_icm_table",
        "SecOp": "mthca_free_icm_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mthca_alloc_icm_table",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "audit_to_entry_common",
        "SecOp": "audit_free_rule",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->audit_init_entry->audit_to_entry_common",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__iio_buffer_alloc_sysfs_and_mask",
        "SecOp": "__iio_buffer_free_sysfs_and_mask",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->__iio_buffer_alloc_sysfs_and_mask",
        "var_path": "retval->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ddb_buffers_alloc",
        "SecOp": "ddb_buffers_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->dma_alloc->ddb_buffers_alloc",
        "var_path": "retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rxrpc_alloc_local",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rxrpc_alloc_local",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmabuf_pages_to_sgt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->dmabuf_pages_to_sgt",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_get_redirect_xattr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_get_redirect_xattr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vgpu_alloc_mm",
        "SecOp": "vgpu_free_mm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vgpu_alloc_mm",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xfs_cui_init",
        "SecOp": "xfs_cui_item_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmem_alloc->kmem_zalloc->xfs_cui_init",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mvs_pci_alloc",
        "SecOp": "mvs_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mvs_pci_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_mpt_alloc_icm",
        "SecOp": "mlx4_mpt_free_icm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_mpt_alloc_icm->mlx4_mpt_alloc_icm",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mem_cgroup_alloc",
        "SecOp": "mem_cgroup_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mem_cgroup_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "afs_alloc_flat_call",
        "SecOp": "afs_put_call",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->afs_alloc_call->afs_alloc_flat_call",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "calipso_opt_insert",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->calipso_opt_insert",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nla_strdup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 1,
        "API_path": "kmalloc->nla_strdup",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gpiochip_alloc_valid_mask",
        "SecOp": "gpiochip_free_valid_mask",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->gpiochip_allocate_mask->gpiochip_alloc_valid_mask",
        "var_path": "retval->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ptn3460_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ptn3460_get_edid",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_ib_alloc_demux_ctx",
        "SecOp": "mlx4_ib_free_demux_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx4_ib_alloc_demux_ctx",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_msg",
        "SecOp": "mlx5_free_cmd_msg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->alloc_cmd_box->mlx5_alloc_cmd_msg->alloc_msg",
        "var_path": "retval->retval->arg->arg->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath9k_htc_hw_alloc",
        "SecOp": "ath9k_htc_hw_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ath9k_htc_hw_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "s3c24xx_dma_get_txd",
        "SecOp": "s3c24xx_dma_free_txd",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->s3c24xx_dma_get_txd",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "synaptics_i2c_touch_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->synaptics_i2c_touch_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnxt_alloc_mem",
        "SecOp": "bnxt_free_mem",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->vzalloc->bnxt_alloc_ring->bnxt_alloc_tx_rings->bnxt_alloc_mem",
        "var_path": "retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath11k_wmi_tlv_parse_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 23,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ath11k_wmi_tlv_parse_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dn_dev_alloc_ifa",
        "SecOp": "dn_dev_free_ifa",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dn_dev_alloc_ifa",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svc_rdma_write_info_alloc",
        "SecOp": "svc_rdma_write_info_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->svc_rdma_write_info_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hso_create_device",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hso_create_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocrdma_init_emb_mqe",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 26,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocrdma_init_emb_mqe",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_alloc_cmd_msg",
        "SecOp": "mlx5_free_cmd_msg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_alloc_cmd_msg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_trace_uprobe",
        "SecOp": "free_trace_uprobe",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_trace_uprobe",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "meson_nand_op_get_dma_safe_input_buf",
        "SecOp": "meson_nand_op_put_dma_safe_input_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->meson_nand_op_get_dma_safe_input_buf",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmabuf_exp_wait_obj_new",
        "SecOp": "dmabuf_exp_wait_obj_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dmabuf_exp_wait_obj_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xfs_rui_init",
        "SecOp": "xfs_rui_item_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmem_alloc->kmem_zalloc->xfs_rui_init",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "objagg_hints_stats_get",
        "SecOp": "objagg_stats_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->objagg_hints_stats_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_fid_8021d_get",
        "SecOp": "mlxsw_sp_fid_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_fid_get->mlxsw_sp_fid_8021d_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpfs_get_ea",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->get_indirect_ea->hpfs_get_ea",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "its_lpi_alloc",
        "SecOp": "its_lpi_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->its_lpi_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nexthop_grp_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nexthop_grp_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_devcom_list_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_devcom_list_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i915_gpu_coredump_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i915_gpu_coredump_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lwtunnel_state_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lwtunnel_state_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_alloc",
        "SecOp": "mpi_free",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 1,
        "API_path": "kmalloc->mpi_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pages_exact",
        "SecOp": "free_pages_exact",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 1,
        "API_path": "kmalloc->alloc_pages_exact",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fib6_info_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fib6_info_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_gt_coredump_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_gt_coredump_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mte_allocate_tag_storage",
        "SecOp": "mte_free_tag_storage",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->mte_allocate_tag_storage",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pl08x_get_txd",
        "SecOp": "pl08x_free_txd",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pl08x_get_txd",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fotg210_ep_alloc_request",
        "SecOp": "fotg210_ep_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fotg210_ep_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "s3c64xx_get_slave_ctrldata",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->s3c64xx_get_slave_ctrldata",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_cell",
        "SecOp": "free_cell",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_cell",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dwc2_hcd_qh_create",
        "SecOp": "dwc2_hcd_qtd_unlink_and_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dwc2_hcd_qh_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__nfp_rtsym_table_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->__nfp_rtsym_table_read",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_srq_queue",
        "SecOp": "free_srq_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_srq_queue",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tape_alloc_device",
        "SecOp": "tape_put_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tape_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "allocate_partitions",
        "SecOp": "free_partitions",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->allocate_partitions",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_at91_clk_pll_get_characteristics",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->of_at91_clk_pll_get_characteristics",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->init_desc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5e_rq_shampo_hd_alloc",
        "SecOp": "mlx5e_rq_shampo_hd_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node->kvmalloc_node->kvzalloc_node->mlx5e_rq_shampo_hd_alloc",
        "var_path": "retval->retval->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ddcb_requ_alloc",
        "SecOp": "ddcb_requ_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ddcb_requ_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vbox_create_plane",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vbox_create_plane",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__mlx4_srq_alloc_icm",
        "SecOp": "__mlx4_srq_free_icm",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_srq_alloc_icm",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_util_memhdr_new",
        "SecOp": "snd_util_memhdr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->snd_util_memhdr_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hid_alloc_buffers",
        "SecOp": "hid_free_buffers",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->hid_alloc_buffers",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nci_allocate_device",
        "SecOp": "nci_free_device",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nci_allocate_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_apertures",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_apertures",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ceph_monmap_decode",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ceph_monmap_decode",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_net_pf_alloc_vnics",
        "SecOp": "nfp_net_pf_free_vnics",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->vzalloc->nfp_net_alloc->nfp_net_pf_alloc_vnic->nfp_net_pf_alloc_vnics",
        "var_path": "retval->retval->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "optee_get_msg_arg",
        "SecOp": "tee_shm_free",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tee_shm_alloc->optee_get_msg_arg",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_fdtable",
        "SecOp": "__free_fdtable",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_fdtable",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_alloc_icm",
        "SecOp": "mthca_free_icm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->mthca_alloc_icm",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath11k_core_alloc",
        "SecOp": "ath11k_core_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ath11k_core_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kmalloc_array",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 447,
        "depth": 1,
        "API_path": "kmalloc->kmalloc_array",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rt2x00pci_alloc_reg",
        "SecOp": "rt2x00pci_free_reg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rt2x00pci_alloc_reg",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nexthop_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nexthop_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__rvt_alloc_mr",
        "SecOp": "__rvt_free_mr",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__rvt_alloc_mr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "r8a66597_alloc_request",
        "SecOp": "r8a66597_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->r8a66597_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rnbd_srv_get_full_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rnbd_srv_get_full_path",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rds_message_alloc",
        "SecOp": "rds_message_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rds_message_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vsock_create_connected",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->sk_prot_alloc->sk_alloc->__vsock_create->vsock_create_connected",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_get_io_failure_record",
        "SecOp": "free_io_failure",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_get_io_failure_record",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "TB_TEST_DMA_TUNNEL2",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_dma->TB_TEST_DMA_TUNNEL2",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lockres_init",
        "SecOp": "lockres_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lockres_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "x509_cert_parse",
        "SecOp": "x509_free_certificate",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->x509_cert_parse",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_ctx_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_ctx_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rtm_to_ifaddr",
        "SecOp": "inet_free_ifa",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->inet_alloc_ifa->rtm_to_ifaddr",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cxl_alloc_adapter",
        "SecOp": "free_adapter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cxl_alloc_adapter",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cdnsp_ring_alloc",
        "SecOp": "cdnsp_ring_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->cdnsp_segment_alloc->cdnsp_alloc_segments_for_ring->cdnsp_ring_alloc",
        "var_path": "retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rockchip_gem_get_pages",
        "SecOp": "rockchip_gem_put_pages",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->drm_prime_pages_to_sg->rockchip_gem_get_pages",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fs3270_alloc_view",
        "SecOp": "fs3270_free_view",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fs3270_alloc_view",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_usb_prepare_fw_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->brcmf_fw_alloc_request->brcmf_usb_prepare_fw_request",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rtw_build_rsvd_page",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rtw_build_rsvd_page",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_net_pf_alloc_vnic",
        "SecOp": "nfp_net_pf_free_vnic",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->__vmalloc->vzalloc->nfp_net_alloc->nfp_net_pf_alloc_vnic",
        "var_path": "retval->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efct_xport_alloc",
        "SecOp": "efct_xport_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->efct_xport_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ahd_alloc",
        "SecOp": "ahd_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ahd_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_jit_alloc_exec",
        "SecOp": "bpf_jit_free_exec",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->module_alloc->bpf_jit_alloc_exec",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "exynos_drm_ipp_task_alloc",
        "SecOp": "exynos_drm_ipp_task_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->exynos_drm_ipp_task_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "netvsc_devinfo_get",
        "SecOp": "netvsc_devinfo_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->netvsc_devinfo_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_table_get",
        "SecOp": "mlx4_table_put",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qed_alloc_cdev",
        "SecOp": "qed_free_cdev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qed_alloc_cdev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocfs2_alloc_quota_recovery",
        "SecOp": "ocfs2_free_quota_recovery",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ocfs2_alloc_quota_recovery",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xlog_cil_ctx_alloc",
        "SecOp": "kmem_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmem_alloc->kmem_zalloc->xlog_cil_ctx_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_tunnel_alloc_dma",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_dma",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iso_sched_alloc",
        "SecOp": "iso_sched_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iso_sched_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sti_get_wmode_rom",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->sti_get_wmode_rom",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sof_comp_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sof_comp_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "virtio_transport_alloc_pkt",
        "SecOp": "virtio_transport_free_pkt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->virtio_transport_alloc_pkt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_uprobe",
        "SecOp": "put_uprobe",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_uprobe",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rds_dma_hdrs_alloc",
        "SecOp": "rds_dma_hdrs_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node->kvmalloc_node->rds_dma_hdrs_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "raw3270_request_alloc",
        "SecOp": "raw3270_request_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->raw3270_request_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dm_ima_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dm_ima_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usb_alloc_coherent",
        "SecOp": "usb_free_coherent",
        "hasUsage": true,
        "usageCount": 42,
        "depth": 2,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vhost_net_ubuf_alloc",
        "SecOp": "vhost_net_ubuf_put_wait_and_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vhost_net_ubuf_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__tape_3592_disable_crypt",
        "SecOp": "tape_do_io_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tape_alloc_request->__tape_3592_disable_crypt",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hsi_alloc_msg",
        "SecOp": "hsi_free_msg",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hsi_alloc_msg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gssp_alloc_receive_pages",
        "SecOp": "gssp_free_receive_pages",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->gssp_alloc_receive_pages",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_esw_dl_port_alloc",
        "SecOp": "mlx5_esw_dl_port_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_esw_dl_port_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mmc_test_req_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->mmc_test_req_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ed_alloc",
        "SecOp": "ed_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->ed_alloc",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_resource",
        "SecOp": "free_resource",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_resource",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_alloc_limb_space",
        "SecOp": "mpi_free_limb_space",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->mpi_alloc_limb_space",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_alloc_cmd_mailbox",
        "SecOp": "mlx4_free_cmd_mailbox",
        "hasUsage": true,
        "usageCount": 83,
        "depth": 1,
        "API_path": "kmalloc->mlx4_alloc_cmd_mailbox",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpls_rt_alloc",
        "SecOp": "mpls_rt_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mpls_rt_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kvm_alloc_msr_filter",
        "SecOp": "kvm_free_msr_filter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->kvm_alloc_msr_filter",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ia_css_params_alloc_convert_sctbl",
        "SecOp": "ia_css_host_data_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->ia_css_host_data_allocate->ia_css_params_alloc_convert_sctbl",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_srq_alloc_icm",
        "SecOp": "mlx4_srq_free_icm",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_srq_alloc_icm->mlx4_srq_alloc_icm",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tls_get_rec",
        "SecOp": "tls_free_rec",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tls_get_rec",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_links",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->new_links",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "irq_domain_alloc_fwnode",
        "SecOp": "irq_domain_free_fwnode",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__irq_domain_alloc_fwnode->irq_domain_alloc_fwnode",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tegra_dma_desc_get",
        "SecOp": "tegra_dma_desc_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tegra_dma_desc_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tape_alloc_request",
        "SecOp": "tape_free_request",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tape_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__mlx4_alloc_mtt_range",
        "SecOp": "__mlx4_free_mtt_range",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->mlx4_table_get_range->__mlx4_alloc_mtt_range",
        "var_path": "retval->retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipw_alloc_error_log",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ipw_alloc_error_log",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_lock_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->cifs_lock_init",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "setup_conf",
        "SecOp": "free_conf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_thread_groups->setup_conf",
        "var_path": "retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_reprs_alloc",
        "SecOp": "nfp_reprs_clean_and_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_reprs_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_context",
        "SecOp": "free_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ecc_alloc_point",
        "SecOp": "ecc_free_point",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "kmalloc->ecc_alloc_point",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "megasas_alloc_cmds",
        "SecOp": "megasas_free_cmds",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->megasas_create_frame_pool->megasas_alloc_cmds",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_alloc_bus",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_alloc_bus",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acpi_os_allocate_zeroed",
        "SecOp": "acpi_os_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->acpi_os_allocate->acpi_os_allocate_zeroed",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gmap_alloc",
        "SecOp": "gmap_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gmap_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "genprobe_ident_chips",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->genprobe_ident_chips",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "find_firmware",
        "SecOp": "free_firmware",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->find_firmware",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "flexgen_get_parents",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->flexgen_get_parents",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfsd4_cltrack_legacy_topdir",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfsd4_cltrack_legacy_topdir",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svm_range_bo_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->svm_range_bo_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wilc_alloc_work",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wilc_alloc_work",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "csio_hw_alloc",
        "SecOp": "csio_hw_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->csio_hw_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hypfs_dbfs_data_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->hypfs_dbfs_data_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn31_apg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn31_apg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5e_int_port_metadata_alloc",
        "SecOp": "mlx5e_int_port_metadata_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mapping_add->mlx5e_int_port_metadata_alloc",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_at91_clk_master_get_characteristics",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->of_at91_clk_master_get_characteristics",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocelot_vcap_filter_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocelot_vcap_filter_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xhci_alloc_stream_info",
        "SecOp": "xhci_free_stream_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->xhci_alloc_stream_ctx->xhci_alloc_stream_info",
        "var_path": "retval->retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_alloc_seqid",
        "SecOp": "nfs_free_seqid",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfs_alloc_seqid",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "user_input_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "kmalloc->user_input_str",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aa_load_ent_alloc",
        "SecOp": "aa_load_ent_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->aa_load_ent_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_alloc_host_bridge",
        "SecOp": "pci_free_host_bridge",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_alloc_host_bridge",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "slhc_init",
        "SecOp": "slhc_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->slhc_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "memac_config",
        "SecOp": "memac_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->memac_config",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_choose_arg_map",
        "SecOp": "free_choose_arg_map",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_choose_arg_map",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mei_io_cb_init",
        "SecOp": "mei_io_cb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mei_io_cb_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vlan_info_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vlan_info_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "allocate_fake_cpuc",
        "SecOp": "free_fake_cpuc",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->allocate_fake_cpuc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_cert_list",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->get_cert_list",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "enetc_alloc_rxbdr",
        "SecOp": "enetc_free_rxbdr",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->enetc_alloc_rxbdr",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i3c_master_alloc_i2c_dev",
        "SecOp": "i3c_master_free_i2c_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i3c_master_alloc_i2c_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_sync_bucket_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_sync_bucket_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_unique_id",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->create_unique_id",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ax25_send_frame",
        "SecOp": "ax25_cb_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ax25_create_cb->ax25_send_frame",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kset_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->kset_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tls_alloc_aead_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tls_alloc_aead_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pmc_data_allocate",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pmc_data_allocate",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ah_alloc_tmp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->ah_alloc_tmp",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_alloc_forget",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_alloc_forget",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_read_from_buffer",
        "SecOp": "mpi_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->mpi_alloc->mpi_read_raw_data->mpi_read_from_buffer",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "netxen_alloc_sw_resources",
        "SecOp": "netxen_free_sw_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->netxen_alloc_sw_resources",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_fw_nvram_from_efi",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->brcmf_fw_nvram_from_efi",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bcm47xx_nvram_get_contents",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vmalloc->bcm47xx_nvram_get_contents",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "crypto_larval_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->crypto_larval_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tipc_publ_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tipc_publ_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vas_window_alloc",
        "SecOp": "vas_window_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vas_window_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_flower_allocate_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->nfp_flower_allocate_new",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mhi_alloc_controller",
        "SecOp": "mhi_free_controller",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mhi_alloc_controller",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "m66592_alloc_request",
        "SecOp": "m66592_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->m66592_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tee_alloc_cmd_buffer",
        "SecOp": "tee_free_cmd_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tee_alloc_cmd_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nbd_dev_add",
        "SecOp": "nbd_config_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nbd_dev_add",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_srv_ctx",
        "SecOp": "free_srv_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_srv_ctx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dw_i3c_master_alloc_xfer",
        "SecOp": "dw_i3c_master_free_xfer",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dw_i3c_master_alloc_xfer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ubi_alloc_vid_buf",
        "SecOp": "ubi_free_vid_buf",
        "hasUsage": true,
        "usageCount": 14,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ubi_alloc_vid_buf",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zfcp_fsf_req_create",
        "SecOp": "zfcp_fsf_req_free",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 2,
        "API_path": "kmalloc->zfcp_fsf_alloc->zfcp_fsf_req_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "squashfs_page_actor_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->squashfs_page_actor_init",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "convert_chmap_v3",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->convert_chmap_v3",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qla2x00_alloc_fcport",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla2x00_alloc_fcport",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_get_redirect",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ovl_get_redirect",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_qp_alloc",
        "SecOp": "mlx4_qp_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 5,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_qp_alloc_icm->mlx4_qp_alloc_icm->mlx4_qp_alloc",
        "var_path": "retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_whitelist",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->alloc_whitelist",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hinic_alloc_cmdq_buf",
        "SecOp": "hinic_free_cmdq_buf",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->hinic_alloc_cmdq_buf",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "flow_block_cb_alloc",
        "SecOp": "flow_block_cb_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->flow_block_cb_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "psb_intel_sdvo_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->psb_intel_sdvo_get_edid",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ecard_alloc_card",
        "SecOp": "ecard_free_card",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ecard_alloc_card",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "capture_engine",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->intel_engine_coredump_alloc->capture_engine",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "extract_fw_ver_from_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->extract_fw_ver_from_str",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sctp_association_new",
        "SecOp": "sctp_association_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sctp_association_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wakeup_source_create",
        "SecOp": "wakeup_source_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wakeup_source_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bfad_fcxp_map_sg",
        "SecOp": "bfad_fcxp_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bfad_fcxp_map_sg",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dwc2_frame_list_alloc",
        "SecOp": "dwc2_desc_list_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dwc2_frame_list_alloc",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_new_subsystem",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->create_new_subsystem",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_device",
        "SecOp": "btrfs_free_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_qp_db",
        "SecOp": "free_qp_db",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->hns_roce_alloc_db_pgdir->hns_roce_alloc_db->alloc_kernel_qp_db->alloc_qp_db",
        "var_path": "retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_crush_loc",
        "SecOp": "free_crush_loc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_crush_loc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "urfile_alloc",
        "SecOp": "urfile_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->urfile_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmar_alloc_dev_scope",
        "SecOp": "dmar_free_dev_scope",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->dmar_alloc_dev_scope",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dca_allocate_domain",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dca_allocate_domain",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__register_sysctl_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__register_sysctl_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_local",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_local",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_info_create_card_entry",
        "SecOp": "snd_info_free_entry",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->snd_info_create_entry->snd_info_create_card_entry",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_cg_rpool_locked",
        "SecOp": "free_cg_rpool_locked",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_cg_rpool_locked",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpfs_alloc_dnode",
        "SecOp": "hpfs_free_dnode",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->hpfs_get_4sectors->hpfs_alloc_dnode",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_doorbell_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->create_doorbell_sg",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vlan_vid_info_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vlan_vid_info_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "register_session",
        "SecOp": "ceph_put_mds_session",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->register_session",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_conn",
        "SecOp": "free_conn",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_conn",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bcm_vk_dma_alloc",
        "SecOp": "bcm_vk_dma_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->bcm_vk_dma_alloc",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "flow_offload_alloc",
        "SecOp": "flow_offload_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->flow_offload_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "raw_alloc_io_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->raw_alloc_io_data",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qe_udc_config",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qe_udc_config",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qeth_alloc_qdio_queue",
        "SecOp": "qeth_free_qdio_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qeth_alloc_qdio_queue",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bman_new_pool",
        "SecOp": "bman_free_pool",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->bman_new_pool",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "reada_find_extent",
        "SecOp": "reada_extent_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->reada_find_extent",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hidpp_unifying_get_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hidpp_unifying_get_name",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__iommu_alloc_buffer",
        "SecOp": "__iommu_free_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->__iommu_alloc_buffer",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "TB_TEST_USB3_TUNNEL",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_usb3->TB_TEST_USB3_TUNNEL",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__nfp_eth_read_ports",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__nfp_eth_read_ports",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__register_chrdev_region",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__register_chrdev_region",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kdb_strdup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->kdb_strdup",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pcibios_get_irq_routing_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->pcibios_get_irq_routing_table",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tegra_xudc_alloc_eps",
        "SecOp": "tegra_xudc_free_eps",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->tegra_xudc_alloc_ep->tegra_xudc_alloc_eps",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipu_image_convert",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ipu_image_convert",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_db_alloc",
        "SecOp": "mlx5_db_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mlx5_alloc_db_pgdir->mlx5_db_alloc_node->mlx5_db_alloc",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "caam_hash_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->caam_hash_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_group_attrs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_group_attrs",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tegra_bo_alloc_object",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tegra_bo_alloc_object",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hackrf_alloc_stream_bufs",
        "SecOp": "hackrf_free_stream_bufs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->hackrf_alloc_stream_bufs",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "next_free_urb",
        "SecOp": "free_urb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->usb_alloc_urb->next_free_urb",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_cprb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_cprb",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpda_alloc_ctlr_info",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hpda_alloc_ctlr_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__get_or_create_frag",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->__get_or_create_frag",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fsg_common_setup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fsg_common_setup",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cfctrl_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cfctrl_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pcibios_alloc_controller",
        "SecOp": "pcibios_free_controller",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->zalloc_maybe_bootmem->pcibios_alloc_controller",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocfs2_xattr_bucket_new",
        "SecOp": "ocfs2_xattr_bucket_free",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocfs2_xattr_bucket_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "_alloc_path_selector",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->_alloc_path_selector",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mvpp2_frag_alloc",
        "SecOp": "mvpp2_frag_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mvpp2_frag_alloc",
        "var_path": "retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "afs_alloc_server",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->afs_alloc_server",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocfs2_allocate_refcount_tree",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocfs2_allocate_refcount_tree",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_fence",
        "SecOp": "free_fence",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 1,
        "API_path": "kmalloc->alloc_fence",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tgec_config",
        "SecOp": "tgec_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tgec_config",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efx_ef10_sriov_alloc_vf_vswitching",
        "SecOp": "efx_ef10_sriov_free_vf_vswitching",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->efx_ef10_sriov_alloc_vf_vswitching",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_pnfs_remotestr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_pnfs_remotestr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cyberpro_alloc_fb_info",
        "SecOp": "cyberpro_free_fb_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cyberpro_alloc_fb_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mdio_i2c_alloc",
        "SecOp": "mdiobus_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mdiobus_alloc_size->mdiobus_alloc->mdio_i2c_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "srp_ring_alloc",
        "SecOp": "srp_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->srp_ring_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "platform_msi_alloc_priv_data",
        "SecOp": "platform_msi_free_priv_data",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->platform_msi_alloc_priv_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "TB_TEST_DP_TUNNEL2",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_dp->TB_TEST_DP_TUNNEL2",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vmbus_device_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vmbus_device_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_fm_vbuf",
        "SecOp": "ubi_free_vid_buf",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ubi_alloc_vid_buf->new_fm_vbuf",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_vpd_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->pci_vpd_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "axi_dmac_alloc_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->axi_dmac_alloc_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qedr_alloc_resources",
        "SecOp": "qedr_free_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->qedr_alloc_resources",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "exynos_drm_gem_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->exynos_drm_gem_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_log_tree",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->alloc_log_tree",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_param_target",
        "SecOp": "free_param_target",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_param_target",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fsverity_prepare_hash_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->fsverity_prepare_hash_state",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_dname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->get_dname",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipmr_new_table",
        "SecOp": "ipmr_free_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mr_table_alloc->ipmr_new_table",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ghes_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ghes_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath10k_wmi_tlv_parse_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ath10k_wmi_tlv_parse_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pdev",
        "SecOp": "free_pdev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_pdev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ccw_device_get_util_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ccw_device_get_util_str",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "relay_alloc_page_array",
        "SecOp": "relay_free_page_array",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->relay_alloc_page_array",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_sdvo_get_analog_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->intel_sdvo_get_analog_edid",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_arena",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_arena",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "extend_rsttbl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->init_rsttbl->extend_rsttbl",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfc_llcp_build_tlv",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfc_llcp_build_tlv",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ppgtt_alloc_spt_gfn",
        "SecOp": "ppgtt_free_spt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->alloc_spt->ppgtt_alloc_spt->ppgtt_alloc_spt_gfn",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pqi_alloc_sas_phy",
        "SecOp": "pqi_free_sas_phy",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pqi_alloc_sas_phy",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_create_dio_private",
        "SecOp": "btrfs_dio_private_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_create_dio_private",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "artpec6_crypto_alloc_bounce",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->artpec6_crypto_alloc_bounce",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "indx_new",
        "SecOp": "put_indx_node",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->indx_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dbc_alloc_ctx",
        "SecOp": "dbc_free_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dbc_alloc_ctx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kpp_request_alloc",
        "SecOp": "kpp_request_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->kpp_request_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_fpga_ipsec_cmd_exec",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_fpga_ipsec_cmd_exec",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "k3_dsp_rproc_of_get_tsp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->k3_dsp_rproc_of_get_tsp",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cdns_mhdp_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->cdns_mhdp_get_edid",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usnic_vnic_alloc",
        "SecOp": "usnic_vnic_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->usnic_vnic_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "r10bio_pool_alloc",
        "SecOp": "rbio_pool_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->r10bio_pool_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_sbd",
        "SecOp": "free_sbd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_sbd",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tty_ldisc_get",
        "SecOp": "tty_ldisc_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->tty_ldisc_get",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_get_subvol_name_from_objectid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->btrfs_get_subvol_name_from_objectid",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qlcnic_alloc_lb_filters_mem",
        "SecOp": "qlcnic_free_adapter_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->qlcnic_alloc_lb_filters_mem",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ssam_event_item_alloc",
        "SecOp": "ssam_event_item_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ssam_event_item_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sctp_auth_shkey_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sctp_auth_shkey_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "srp_target_alloc",
        "SecOp": "srp_target_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->srp_ring_alloc->srp_target_alloc",
        "var_path": "retval->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "scrub_setup_ctx",
        "SecOp": "scrub_free_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->scrub_setup_ctx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_backref_alloc_node",
        "SecOp": "btrfs_backref_free_node",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_backref_alloc_node",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sgx_encl_page_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sgx_encl_page_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qla_enode_alloc",
        "SecOp": "qla_enode_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla_enode_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hisi_acc_create_sgl_pool",
        "SecOp": "hisi_acc_free_sgl_pool",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hisi_acc_create_sgl_pool",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_new",
        "SecOp": "mpi_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->mpi_alloc->mpi_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_mmconfig_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_mmconfig_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "psb_gtt_alloc_range",
        "SecOp": "psb_gtt_free_range",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->psb_gtt_alloc_range",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocfs2_acl_to_xattr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ocfs2_acl_to_xattr",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "objagg_hints_get",
        "SecOp": "objagg_hints_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->objagg_hints_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_net_alloc",
        "SecOp": "nfp_net_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->nfp_net_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "f2fs_acl_to_disk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->f2fs_kmalloc->f2fs_acl_to_disk",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_mdio_bitbang",
        "SecOp": "free_mdio_bitbang",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mdiobus_alloc_size->mdiobus_alloc->alloc_mdio_bitbang",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aead_request_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->aead_request_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i2c_get_dma_safe_msg_buf",
        "SecOp": "i2c_put_dma_safe_msg_buf",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i2c_get_dma_safe_msg_buf",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn302_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn302_vpg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmet_rdma_get_rsp",
        "SecOp": "nvmet_rdma_put_rsp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->nvmet_rdma_alloc_rsp->nvmet_rdma_get_rsp",
        "var_path": "retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sdma_transfer_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sdma_transfer_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qlcnic_sriov_alloc_bc_mbx_args",
        "SecOp": "qlcnic_free_mbx_args",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->qlcnic_sriov_alloc_bc_mbx_args",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "uvc_alloc_chain",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->uvc_alloc_chain",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_readdata_direct_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cifs_readdata_direct_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "build_ac_header_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->build_ac_header_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nft_trans_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nft_trans_alloc_gfp->nft_trans_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tifm_alloc_device",
        "SecOp": "tifm_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tifm_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acpi_lpat_get_conversion_table",
        "SecOp": "acpi_lpat_free_conversion_table",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acpi_lpat_get_conversion_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "optee_ffa_config_dyn_shm",
        "SecOp": "tee_shm_pool_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tee_shm_pool_alloc->optee_ffa_config_dyn_shm",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rxe_queue_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rxe_queue_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmar_alloc_pci_notify_info",
        "SecOp": "dmar_free_pci_notify_info",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dmar_alloc_pci_notify_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mei_cl_enqueue_ctrl_wr_cb",
        "SecOp": "mei_io_cb_free",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mei_io_cb_init->mei_cl_alloc_cb->mei_cl_enqueue_ctrl_wr_cb",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gr_alloc_request",
        "SecOp": "gr_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gr_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ice_get_opt_fw_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ice_get_opt_fw_name",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nft_trans_alloc_gfp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nft_trans_alloc_gfp",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_timer_instance_new",
        "SecOp": "snd_timer_instance_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->snd_timer_instance_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vduse_dev_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vduse_dev_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ftrace_hash",
        "SecOp": "free_ftrace_hash",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ftrace_hash",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn303_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn303_afmt_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "blk_stat_alloc_callback",
        "SecOp": "blk_stat_free_callback",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->blk_stat_alloc_callback",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_alloc_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_alloc_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_smp_resp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_smp_resp",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smb_strndup_from_utf16",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->smb_strndup_from_utf16",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "net_alloc_generic",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->net_alloc_generic",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_eswitch_termtbl_get_create",
        "SecOp": "mlx5_eswitch_termtbl_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx5_add_flow_rules->mlx5_eswitch_termtbl_create->mlx5_eswitch_termtbl_get_create",
        "var_path": "retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nla_memdup_cookie",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nla_memdup_cookie",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_lvn",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_lvn",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "amdtee_config_shm",
        "SecOp": "tee_shm_pool_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tee_shm_pool_alloc->amdtee_config_shm",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rsa_edesc_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rsa_edesc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_dummy_fs_info",
        "SecOp": "btrfs_free_dummy_fs_info",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_dummy_fs_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfsic_block_alloc",
        "SecOp": "btrfsic_block_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfsic_block_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ishtp_cl_allocate",
        "SecOp": "ishtp_cl_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->ishtp_cl_allocate",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_get_tcp_session",
        "SecOp": "cifs_put_tcp_session",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->allocate_mr_list->_smbd_get_connection->smbd_get_connection->cifs_get_tcp_session",
        "var_path": "retval->retval->retval->arg->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "convert_allocate_morph_plane",
        "SecOp": "ia_css_host_data_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->ia_css_host_data_allocate->convert_allocate_morph_plane",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wil_ring_alloc_desc_ring",
        "SecOp": "wil_ring_free_edma",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->wil_ring_alloc_desc_ring",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_sdio_prepare_fw_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->brcmf_fw_alloc_request->brcmf_sdio_prepare_fw_request",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_net_pf_alloc_irqs",
        "SecOp": "nfp_net_pf_free_irqs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->nfp_net_pf_alloc_irqs",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_get_label_mapping",
        "SecOp": "mlx5_put_label_mapping",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mapping_add->mlx5_get_label_mapping",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn31_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn31_afmt_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_rbio",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_rbio",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_pathname_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->nfs4_pathname_string",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "taprio_offload_alloc",
        "SecOp": "taprio_offload_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->taprio_offload_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cpufreq_policy_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cpufreq_policy_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bitmap_zalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 27,
        "depth": 3,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dtsec_config",
        "SecOp": "dtsec_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dtsec_config",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xilinx_dma_alloc_tx_descriptor",
        "SecOp": "xilinx_dma_free_tx_descriptor",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xilinx_dma_alloc_tx_descriptor",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "randomised_engines",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->randomised_engines",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svm_range_clone",
        "SecOp": "svm_range_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->svm_range_new->svm_range_clone",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pfkey_sadb2xfrm_user_sec_ctx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->pfkey_sadb2xfrm_user_sec_ctx",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sctp_pack_cookie",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sctp_pack_cookie",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acpi_os_allocate",
        "SecOp": "acpi_os_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->acpi_os_allocate",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_cpp_mutex_alloc",
        "SecOp": "nfp_cpp_mutex_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_cpp_mutex_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "genwqe_dev_alloc",
        "SecOp": "genwqe_dev_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->genwqe_dev_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ceph_create_snap_context",
        "SecOp": "ceph_put_snap_context",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ceph_create_snap_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zram_meta_alloc",
        "SecOp": "zram_meta_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->zram_meta_alloc",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "exiu_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->exiu_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "allocate_partition",
        "SecOp": "free_partition",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->allocate_partition",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vxlan_fdb_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vxlan_fdb_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mtk_gem_prime_get_sg_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mtk_gem_prime_get_sg_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_pmu_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_pmu_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pqi_alloc_sas_node",
        "SecOp": "pqi_free_sas_node",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pqi_alloc_sas_node",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gsmi_buf_alloc",
        "SecOp": "gsmi_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gsmi_buf_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "oprom_get_vbt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->oprom_get_vbt",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "adv7511_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->adv7511_get_edid",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xhci_segment_alloc",
        "SecOp": "xhci_segment_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_segment_alloc",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ppgtt_alloc_spt",
        "SecOp": "ppgtt_free_spt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_spt->ppgtt_alloc_spt",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpfs_translate_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->hpfs_translate_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ecc_alloc_digits_space",
        "SecOp": "ecc_free_digits_space",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ecc_alloc_digits_space",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "md_bitmap_create",
        "SecOp": "md_bitmap_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->md_bitmap_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usb_alloc_urb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 1,
        "API_path": "kmalloc->usb_alloc_urb",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_event_waiters",
        "SecOp": "free_waiters",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_event_waiters",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5dr_ste_htbl_alloc",
        "SecOp": "mlx5dr_ste_htbl_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5dr_ste_htbl_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_usb_get_audioformat_uac12",
        "SecOp": "audioformat_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->audio_format_alloc_init->snd_usb_get_audioformat_uac12",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ib_alloc_cq",
        "SecOp": "ib_free_cq",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->create_cq->__ib_alloc_cq->ib_alloc_cq",
        "var_path": "retval->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_chan_prog",
        "SecOp": "free_chan_prog",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_chan_prog",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sec_alg_alloc_and_fill_el",
        "SecOp": "sec_alg_free_el",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->sec_alloc_and_fill_hw_sgl->sec_alg_alloc_and_fill_el",
        "var_path": "retval->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_cmd_box",
        "SecOp": "free_cmd_box",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->alloc_cmd_box",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nouveau_dmem_page_alloc_locked",
        "SecOp": "nouveau_dmem_page_free_locked",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->nouveau_bo_alloc->nouveau_bo_new->nouveau_dmem_chunk_alloc->nouveau_dmem_page_alloc_locked",
        "var_path": "retval->retval->retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ext4_acl_to_disk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ext4_acl_to_disk",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__a2mp_build",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__a2mp_build",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "setup_kdump_cmdline",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->setup_kdump_cmdline",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xhci_alloc_command_with_ctx",
        "SecOp": "xhci_free_command",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 5,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_alloc_container_ctx->xhci_alloc_command_with_ctx",
        "var_path": "retval->retval->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bitmap_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "udma_prep_slave_sg_tr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->udma_alloc_tr_desc->udma_prep_slave_sg_tr",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "stm32_exti_host_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->stm32_exti_host_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ecryptfs_readlink_lower",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->ecryptfs_parse_tag_70_packet->ecryptfs_decode_and_decrypt_filename->ecryptfs_readlink_lower",
        "var_path": "retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xhci_dbc_alloc_requests",
        "SecOp": "xhci_dbc_free_requests",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->dbc_alloc_request->xhci_dbc_alloc_requests",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "jffs2_write_dirent",
        "SecOp": "jffs2_free_full_dirent",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->jffs2_alloc_full_dirent->jffs2_write_dirent",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_tape_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->new_tape_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "follow_link",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->follow_link",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qcom_mdt_read_metadata",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->qcom_mdt_read_metadata",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bucket_table_alloc",
        "SecOp": "bucket_table_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nested_bucket_table_alloc->bucket_table_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovs_vport_alloc",
        "SecOp": "ovs_vport_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->ovs_vport_set_upcall_portids->ovs_vport_alloc",
        "var_path": "retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zalloc_maybe_bootmem",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->zalloc_maybe_bootmem",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_link_table_buf",
        "SecOp": "free_link_table_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->hns_roce_buf_alloc->alloc_link_table_buf",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fsl_mc_msi_alloc_descs",
        "SecOp": "fsl_mc_msi_free_descs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_msi_entry->fsl_mc_msi_alloc_descs",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfc_digital_allocate_device",
        "SecOp": "nfc_digital_free_device",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfc_digital_allocate_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_sdvo_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->intel_sdvo_get_edid",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dwc2_hcd_urb_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dwc2_hcd_urb_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "scx200_create_iface",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->scx200_create_iface",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_alloc_vif",
        "SecOp": "brcmf_free_vif",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->brcmf_alloc_vif",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bond_verify_device_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bond_verify_device_path",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sky2_alloc_buffers",
        "SecOp": "sky2_free_buffers",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->sky2_alloc_buffers",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_pcie_prepare_fw_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->brcmf_fw_alloc_request->brcmf_pcie_prepare_fw_request",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dr_action_create_generic",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dr_action_create_generic",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_chunk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_chunk",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mock_ring",
        "SecOp": "mock_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mock_ring",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aq_ring_tx_alloc",
        "SecOp": "aq_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->aq_ring_alloc->aq_ring_tx_alloc",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wq_sysfs_prep_attrs",
        "SecOp": "free_workqueue_attrs",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_workqueue_attrs->wq_sysfs_prep_attrs",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "arpc_alloc",
        "SecOp": "arpc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->arpc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "skcipher_edesc_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->talitos_edesc_alloc->skcipher_edesc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rpcrdma_regbuf_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rpcrdma_regbuf_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tomoyo_init_log",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tomoyo_init_log",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn301_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn301_vpg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_decode_mp_ds_addr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nfs4_pnfs_ds_addr_alloc->nfs4_decode_mp_ds_addr",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sk_alloc",
        "SecOp": "sk_free",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "kmalloc->sk_prot_alloc->sk_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nf_ct_tmpl_alloc",
        "SecOp": "nf_ct_tmpl_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nf_ct_tmpl_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "arm_smmu_alloc_shared_cd",
        "SecOp": "arm_smmu_free_shared_cd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->arm_smmu_alloc_shared_cd",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mtk_drm_gem_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mtk_drm_gem_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxfw_mfa2_file_component_get",
        "SecOp": "mlxfw_mfa2_file_component_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->mlxfw_mfa2_file_component_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocfs2_new_path",
        "SecOp": "ocfs2_free_path",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ocfs2_new_path",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dasd_alloc_device",
        "SecOp": "dasd_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dasd_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smc_sock_alloc",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->sk_prot_alloc->sk_alloc->smc_sock_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "exfat_get_dentry_set",
        "SecOp": "exfat_free_dentry_set",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->exfat_get_dentry_set",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_devlink_alloc",
        "SecOp": "mlx5_devlink_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->devlink_alloc_ns->devlink_alloc->mlx5_devlink_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_flex_gd",
        "SecOp": "free_flex_gd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_flex_gd",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_get_edid_switcheroo",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->drm_get_edid_switcheroo",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "it821x_firmware_command",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->it821x_firmware_command",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acomp_request_alloc",
        "SecOp": "acomp_request_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__acomp_request_alloc->acomp_request_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "airspy_alloc_stream_bufs",
        "SecOp": "airspy_free_stream_bufs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->airspy_alloc_stream_bufs",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iotlb_alloc",
        "SecOp": "vhost_iotlb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->vhost_iotlb_alloc->iotlb_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btf_parse_module",
        "SecOp": "btf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btf_parse_module",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xhci_alloc_container_ctx",
        "SecOp": "xhci_free_container_ctx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_alloc_container_ctx",
        "var_path": "retval->retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lpfc_hba_alloc",
        "SecOp": "lpfc_hba_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lpfc_hba_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "blkg_alloc",
        "SecOp": "blkg_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->percpu_ref_init->blkg_alloc",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lpddr_probe_chip",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lpddr_probe_chip",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pcmcia_make_resource",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pcmcia_make_resource",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "clkgen_mux_get_parents",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->clkgen_mux_get_parents",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sample_restore_get",
        "SecOp": "sample_restore_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->mlx5_modify_header_alloc->sample_modify_hdr_get->sample_restore_get",
        "var_path": "retval->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dma_resv_list_alloc",
        "SecOp": "dma_resv_list_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->dma_resv_list_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "TB_TEST_DMA_TUNNEL1",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_dma->TB_TEST_DMA_TUNNEL1",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmz_alloc_mblock",
        "SecOp": "dmz_free_mblock",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->dmz_alloc_mblock",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_jit_binary_alloc",
        "SecOp": "bpf_jit_binary_free",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "kmalloc->module_alloc->bpf_jit_alloc_exec->bpf_jit_binary_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "j1939_priv_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->j1939_priv_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn30_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn30_vpg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "msm_parse_deps",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->msm_parse_deps",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tee_shm_alloc_kernel_buf",
        "SecOp": "tee_shm_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tee_shm_alloc->tee_shm_alloc_kernel_buf",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ssd1307fb_alloc_array",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ssd1307fb_alloc_array",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "objagg_stats_get",
        "SecOp": "objagg_stats_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->objagg_stats_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nft_netdev_hook_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nft_netdev_hook_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mei_cl_alloc_linked",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->mei_cl_allocate->mei_cl_alloc_linked",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpsa_alloc_sas_port",
        "SecOp": "hpsa_free_sas_port",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hpsa_alloc_sas_port",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sf_zone_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sf_zone_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "optee_allocate_pages_list",
        "SecOp": "optee_free_pages_list",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->alloc_pages_exact->optee_allocate_pages_list",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_property_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_property_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cow_malloc",
        "SecOp": "cow_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->uml_kmalloc->cow_malloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_dummy_block_group",
        "SecOp": "btrfs_free_dummy_block_group",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_dummy_block_group",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dbc_alloc_request",
        "SecOp": "dbc_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dbc_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "orangefs_bufmap_alloc",
        "SecOp": "orangefs_bufmap_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->orangefs_bufmap_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "linear_conf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->linear_conf",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hfs_mdb_get",
        "SecOp": "hfs_mdb_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->hfs_part_find->hfs_mdb_get",
        "var_path": "retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_app_alloc",
        "SecOp": "nfp_app_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_app_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svc_rdma_send_ctxt_get",
        "SecOp": "svc_rdma_send_ctxt_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->svc_rdma_send_ctxt_alloc->svc_rdma_send_ctxt_get",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_alloc_fattr_with_label",
        "SecOp": "nfs_free_fattr",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 2,
        "API_path": "kmalloc->nfs_alloc_fattr->nfs_alloc_fattr_with_label",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vxfs_getfsh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vxfs_getfsh",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cxl_context_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cxl_context_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mipi_dsi_device_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mipi_dsi_device_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xsk_map_node_alloc",
        "SecOp": "xsk_map_node_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->bpf_map_kzalloc->xsk_map_node_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "uvc_alloc_urb_buffer",
        "SecOp": "uvc_free_urb_buffers",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->alloc_single_sgt->dma_alloc_noncontiguous->uvc_alloc_urb_buffer",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_tty_struct",
        "SecOp": "free_tty_struct",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_tty_struct",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nilfs_find_or_create_root",
        "SecOp": "nilfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nilfs_find_or_create_root",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath10k_htt_rx_alloc",
        "SecOp": "ath10k_htt_rx_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ath10k_htt_rx_alloc",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "libipw_alloc_txb",
        "SecOp": "libipw_txb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->libipw_alloc_txb",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hl_cs_allocate_job",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hl_cs_allocate_job",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn302_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn302_afmt_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mcb_alloc_dev",
        "SecOp": "mcb_free_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mcb_alloc_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "afs_alloc_operation",
        "SecOp": "afs_put_operation",
        "hasUsage": true,
        "usageCount": 12,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->afs_alloc_operation",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nixge_get_nvmem_address",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read->nixge_get_nvmem_address",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "raid_set_alloc",
        "SecOp": "raid_set_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->raid_set_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnxt_qplib_alloc_rcfw_channel",
        "SecOp": "bnxt_qplib_free_rcfw_channel",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bnxt_qplib_alloc_rcfw_channel",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ip_fib_metrics_init",
        "SecOp": "ip_fib_metrics_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ip_fib_metrics_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hash_alloc_result",
        "SecOp": "hash_free_result",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->sock_kmalloc->hash_alloc_result",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ibmebus_chomp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ibmebus_chomp",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mdiobus_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mdiobus_alloc_size->mdiobus_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "esp_alloc_tmp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->esp_alloc_tmp",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "atari_stram_alloc",
        "SecOp": "atari_stram_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->atari_stram_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_mad_private",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_mad_private",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ftrace_add_rec_direct",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ftrace_add_rec_direct",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "picolcd_send_and_wait",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->picolcd_send_and_wait",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "platform_msi_domain_alloc_irqs",
        "SecOp": "platform_msi_domain_free_irqs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->alloc_msi_entry->platform_msi_alloc_descs_with_irq->platform_msi_alloc_descs->platform_msi_domain_alloc_irqs",
        "var_path": "retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "agp_allocate_memory_wrap",
        "SecOp": "agp_free_memory_wrap",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->agp_create_memory->agp_allocate_memory->agp_allocate_memory_wrap",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pgpath",
        "SecOp": "free_pgpath",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_pgpath",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acpi_alloc_fwnode_static",
        "SecOp": "acpi_free_fwnode_static",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acpi_alloc_fwnode_static",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "str_to_target_ids",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->str_to_target_ids",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_alloc_mtt",
        "SecOp": "mthca_free_mtt",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->__mthca_alloc_mtt->mthca_alloc_mtt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rnbd_srv_create_set_sess_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->rnbd_sess_dev_alloc->rnbd_srv_create_set_sess_dev",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ibmveth_alloc_buffer_pool",
        "SecOp": "ibmveth_free_buffer_pool",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->ibmveth_alloc_buffer_pool",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hns_roce_alloc_cmd_mailbox",
        "SecOp": "hns_roce_free_cmd_mailbox",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 1,
        "API_path": "kmalloc->hns_roce_alloc_cmd_mailbox",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_skcipher_req",
        "SecOp": "skcipher_request_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->skcipher_request_alloc->init_skcipher_req",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "net_dm_hw_reset_per_cpu_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->net_dm_hw_reset_per_cpu_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dma_alloc_noncontiguous",
        "SecOp": "dma_free_noncontiguous",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->alloc_single_sgt->dma_alloc_noncontiguous",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfcsim_link_new",
        "SecOp": "nfcsim_link_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfcsim_link_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_writeback_formats",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->get_writeback_formats",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kobject_get_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->kobject_get_path",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bcm4908_enet_dma_alloc",
        "SecOp": "bcm4908_enet_dma_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bcm4908_dma_alloc_buf_descs->bcm4908_enet_dma_alloc",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ext4_find_extent",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ext4_find_extent",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hinic_devlink_alloc",
        "SecOp": "hinic_devlink_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->devlink_alloc_ns->devlink_alloc->hinic_devlink_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_writedata_direct_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cifs_writedata_direct_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_neigh_entry_alloc",
        "SecOp": "mlxsw_sp_neigh_entry_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_neigh_entry_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "property_entries_dup",
        "SecOp": "property_entries_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->property_entry_copy_data->property_entries_dup",
        "var_path": "retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "audit_data_to_entry",
        "SecOp": "audit_free_rule",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->alloc_tree->audit_make_tree->audit_data_to_entry",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "isert_device_get",
        "SecOp": "isert_device_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->isert_device_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vboxsf_dir_buf_alloc",
        "SecOp": "vboxsf_dir_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vboxsf_dir_buf_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_opal_dev",
        "SecOp": "free_opal_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->init_opal_dev",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "b43legacy_generate_probe_resp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->b43legacy_generate_probe_resp",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_addr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->uml_kmalloc->new_addr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "enetc_alloc_rx_resources",
        "SecOp": "enetc_free_rx_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->__vmalloc->vzalloc->enetc_alloc_rxbdr->enetc_alloc_rx_resources",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "find_or_allocate_block",
        "SecOp": "free_blocked_lock",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->find_or_allocate_block",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_kernel_wrid",
        "SecOp": "free_kernel_wrid",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_kernel_wrid",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_sdvo_connector_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_sdvo_connector_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fs_path_alloc_reversed",
        "SecOp": "fs_path_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->fs_path_alloc->fs_path_alloc_reversed",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xilinx_cdma_alloc_tx_segment",
        "SecOp": "xilinx_dma_free_tx_descriptor",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xilinx_cdma_alloc_tx_segment",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tee_shm_alloc",
        "SecOp": "tee_shm_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tee_shm_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cdns_i3c_master_alloc_xfer",
        "SecOp": "cdns_i3c_master_free_xfer",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cdns_i3c_master_alloc_xfer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iucv_path_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iucv_path_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xilinx_dpdma_chan_alloc_tx_desc",
        "SecOp": "xilinx_dpdma_chan_free_tx_desc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xilinx_dpdma_chan_alloc_tx_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_rsm_map_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_rsm_map_table",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fib_trie_table",
        "SecOp": "fib_trie_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fib_trie_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "scsi_get_vpd_buf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->scsi_get_vpd_buf",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qed_ll2_alloc_if",
        "SecOp": "qed_resc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qed_ll2_alloc_if",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "audit_init_entry",
        "SecOp": "audit_free_rule",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->audit_init_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tomoyo_print_bprm",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tomoyo_print_bprm",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_selem_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->bpf_map_kzalloc->bpf_selem_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_map_area_alloc",
        "SecOp": "bpf_map_area_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node_range->__bpf_map_area_alloc->bpf_map_area_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vme_slave_request",
        "SecOp": "vme_slave_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vme_slave_request",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_fragment",
        "SecOp": "put_fragment",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->new_fragment",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xen_copy_pss_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->xen_copy_pss_data",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_midi_channel_alloc_set",
        "SecOp": "snd_midi_channel_free_set",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->snd_midi_channel_alloc_set",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_alloc_mailbox",
        "SecOp": "mthca_free_mailbox",
        "hasUsage": true,
        "usageCount": 27,
        "depth": 1,
        "API_path": "kmalloc->mthca_alloc_mailbox",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_alloc_fattr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->nfs_alloc_fattr",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "enetc_alloc_si_resources",
        "SecOp": "enetc_free_si_resources",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->enetc_alloc_si_resources",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_workspace",
        "SecOp": "put_workspace",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->lzo_alloc_workspace->alloc_workspace->get_workspace",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_alloc_lock_state",
        "SecOp": "nfs4_free_lock_state",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_alloc_lock_state",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__mlx4_cq_alloc_icm",
        "SecOp": "__mlx4_cq_free_icm",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_cq_alloc_icm",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sst_create_block",
        "SecOp": "sst_free_block",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sst_create_block",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xprt_alloc_bc_req",
        "SecOp": "xprt_free_allocation",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xprt_alloc_bc_req",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cs_dsp_read_algs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cs_dsp_read_algs",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfsd4_cltrack_grace_start",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->nfsd4_cltrack_grace_start",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "led_get_default_pattern",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->led_get_default_pattern",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ti_sci_inta_msi_alloc_descs",
        "SecOp": "ti_sci_inta_msi_free_descs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_msi_entry->ti_sci_inta_msi_alloc_descs",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kzalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6786,
        "depth": 1,
        "API_path": "kmalloc->kzalloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_readdata_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->cifs_readdata_direct_alloc->cifs_readdata_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_watch_adapter",
        "SecOp": "free_watch_adapter",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_watch_adapter",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sctp_unpack_cookie",
        "SecOp": "sctp_association_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->sctp_association_new->sctp_unpack_cookie",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "map_iter_alloc",
        "SecOp": "map_iter_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->map_iter_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tegra_xudc_alloc_ep",
        "SecOp": "tegra_xudc_free_ep",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->tegra_xudc_alloc_ep",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_nvm_alloc",
        "SecOp": "tb_nvm_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_nvm_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sdebug_device_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->sdebug_device_create_zones->sdebug_device_create",
        "var_path": "retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rt2x00soc_alloc_reg",
        "SecOp": "rt2x00soc_free_reg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rt2x00soc_alloc_reg",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "copy_tlv",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->copy_tlv",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dlm_alloc_ctxt",
        "SecOp": "dlm_free_ctxt_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dlm_alloc_ctxt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "parse_lease_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->parse_lease_state",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_property_create_dir",
        "SecOp": "tb_property_free_dir",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_property_create_dir",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_db_alloc_node",
        "SecOp": "mlx5_db_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mlx5_alloc_db_pgdir->mlx5_db_alloc_node",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "convert_allocate_dvs_6axis_config",
        "SecOp": "ia_css_host_data_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->ia_css_host_data_allocate->convert_allocate_dvs_6axis_config",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aq_ring_rx_alloc",
        "SecOp": "aq_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->aq_ring_alloc->aq_ring_rx_alloc",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hid_alloc_report_buf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 1,
        "API_path": "kmalloc->hid_alloc_report_buf",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "b43_bus_dev_ssb_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->b43_bus_dev_ssb_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "memstick_alloc_card",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->memstick_alloc_card",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnxt_qplib_rcfw_alloc_sbuf",
        "SecOp": "bnxt_qplib_rcfw_free_sbuf",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bnxt_qplib_rcfw_alloc_sbuf",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "trace_pid_list_alloc",
        "SecOp": "trace_pid_list_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->trace_pid_list_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qcom_swrm_stream_alloc_ports",
        "SecOp": "qcom_swrm_stream_free_ports",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->sdw_alloc_master_rt->sdw_stream_add_master->qcom_swrm_stream_alloc_ports",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_cache_mr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_cache_mr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gameport_allocate_port",
        "SecOp": "gameport_free_port",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gameport_allocate_port",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__vsock_create",
        "SecOp": "sock_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->sk_prot_alloc->sk_alloc->__vsock_create",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_fid_8021q_get",
        "SecOp": "mlxsw_sp_fid_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_fid_get->mlxsw_sp_fid_8021q_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "devlink_fmsg_alloc",
        "SecOp": "devlink_fmsg_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->devlink_fmsg_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usb_kbd_alloc_mem",
        "SecOp": "usb_kbd_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->usb_kbd_alloc_mem",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cfg80211_beacon_dup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cfg80211_beacon_dup",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wq_entry_get",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->wq_entry_get",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_sf_alloc",
        "SecOp": "mlx5_sf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_sf_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_pages_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_pages_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ext4_li_request_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ext4_li_request_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__rbd_dev_create",
        "SecOp": "rbd_dev_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__rbd_dev_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ap_add_sta",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ap_add_sta",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "debug_info_copy",
        "SecOp": "debug_info_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->debug_info_alloc->debug_info_copy",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_file_alloc",
        "SecOp": "fuse_file_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_file_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "squashfs_page_actor_init_special",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->squashfs_page_actor_init_special",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_vgpu_alloc_resource",
        "SecOp": "intel_vgpu_free_resource",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_resource->intel_vgpu_alloc_resource",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "reiserfs_posix_acl_to_disk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->reiserfs_posix_acl_to_disk",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dwc3_alloc_scratch_buffers",
        "SecOp": "dwc3_free_scratch_buffers",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->dwc3_alloc_scratch_buffers",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pvr2_eeprom_fetch",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pvr2_eeprom_fetch",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnxt_tc_get_tunnel_handle",
        "SecOp": "bnxt_tc_put_tunnel_handle",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->bnxt_tc_get_tunnel_node->bnxt_tc_get_encap_handle->bnxt_tc_get_tunnel_handle",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qp_alloc_queue",
        "SecOp": "qp_free_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vmalloc->qp_alloc_queue",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_writedata_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->cifs_writedata_direct_alloc->cifs_writedata_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "_allocate_server",
        "SecOp": "_free_server",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->_allocate_server",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_icc_get_from_provider",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->of_icc_get_from_provider",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nubus_get_functional_resource",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nubus_get_functional_resource",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_cache_defer_req_alloc",
        "SecOp": "nfs_cache_defer_req_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs_cache_defer_req_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_dev_alloc_install",
        "SecOp": "fuse_dev_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->fuse_dev_alloc->fuse_dev_alloc_install",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "user_engines",
        "SecOp": "free_engines",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_engines->user_engines",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "prepare_copy",
        "SecOp": "free_copy",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->alloc_msg->load_msg->prepare_copy",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocfs2_new_path_from_et",
        "SecOp": "ocfs2_free_path",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ocfs2_new_path->ocfs2_new_path_from_et",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_backref_iter_alloc",
        "SecOp": "btrfs_backref_iter_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_backref_iter_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_l2",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_l2",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rnbd_srv_init_srv_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rnbd_srv_init_srv_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lpfc_alloc_ct_rsp",
        "SecOp": "lpfc_free_ct_rsp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->lpfc_mbuf_alloc->lpfc_alloc_ct_rsp",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_map_kzalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_map_kzalloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qeth_alloc_card",
        "SecOp": "qeth_core_free_card",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qeth_alloc_card",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ccu_div_create_data",
        "SecOp": "ccu_div_free_data",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ccu_div_create_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpsa_alloc_sas_phy",
        "SecOp": "hpsa_free_sas_phy",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hpsa_alloc_sas_phy",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_vmcoreinfo_old",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_vmcoreinfo_old",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "platform_device_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->platform_device_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->init_sg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ar5523_alloc_rx_cmd",
        "SecOp": "ar5523_free_rx_cmd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->ar5523_alloc_rx_cmd",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sid_to_key_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->sid_to_key_str",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnxt_alloc_ring",
        "SecOp": "bnxt_free_ring",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->bnxt_alloc_ring",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_crt_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->intel_crt_get_edid",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "b43_bus_dev_bcma_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->b43_bus_dev_bcma_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ccw_device_get_chp_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->chp_get_chp_desc->ccw_device_get_chp_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn301_afmt_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn301_afmt_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ksmbd_init_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->ksmbd_init_sg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cdnsp_alloc_priv_device",
        "SecOp": "cdnsp_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 7,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->cdnsp_segment_alloc->cdnsp_alloc_segments_for_ring->cdnsp_ring_alloc->cdnsp_alloc_priv_device",
        "var_path": "retval->retval->arg->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_gpio_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_gpio_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "d40_hw_detect_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->d40_hw_detect_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_fid_to_fh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_fid_to_fh",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hwsim_alloc_edge",
        "SecOp": "hwsim_free_edge",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hwsim_alloc_edge",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vmalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->__vmalloc->vmalloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hugepage_new_subpool",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hugepage_new_subpool",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sg_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sg_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "agp_create_memory",
        "SecOp": "agp_free_memory",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->agp_create_memory",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ieee802_11_parse_elems_crc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ieee802_11_parse_elems_crc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dma_fence_chain_alloc",
        "SecOp": "dma_fence_chain_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->dma_fence_chain_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "request_arr_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->request_arr_init",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_p2pmem_alloc_sgl",
        "SecOp": "pci_p2pmem_free_sgl",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->pci_p2pmem_alloc_sgl",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dummy_ops_init_args",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dummy_ops_init_args",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "jffs2_acl_to_medium",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->jffs2_acl_to_medium",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_convert_path_to_utf16",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 2,
        "API_path": "kmalloc->cifs_strndup_to_utf16->cifs_convert_path_to_utf16",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mt7601u_usb_alloc_buf",
        "SecOp": "mt7601u_usb_free_buf",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->mt7601u_usb_alloc_buf",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qede_alloc_arfs",
        "SecOp": "qede_free_fp_array",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->qede_alloc_arfs",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hd44780_common_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hd44780_common_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "octeon_alloc_temp_buffer",
        "SecOp": "octeon_free_temp_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->octeon_alloc_temp_buffer",
        "var_path": "retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_var",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_var",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ldt_struct",
        "SecOp": "free_ldt_struct",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->alloc_ldt_struct",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_alloc_server",
        "SecOp": "nfs_free_server",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs_alloc_server",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rtrs_iu_alloc",
        "SecOp": "rtrs_iu_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->rtrs_iu_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pipe_info",
        "SecOp": "free_pipe_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_pipe_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "audio_format_alloc_init",
        "SecOp": "audioformat_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->audio_format_alloc_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_flower_non_repr_priv_get",
        "SecOp": "__nfp_flower_non_repr_priv_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_flower_non_repr_priv_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "jffs2_alloc_full_dirent",
        "SecOp": "jffs2_free_full_dirent",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->jffs2_alloc_full_dirent",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_sess",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_sess",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "keyring_restriction_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->keyring_restriction_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ksmbd_vfs_make_xattr_posix_acl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ksmbd_vfs_make_xattr_posix_acl",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "v4l2_fwnode_endpoint_alloc_parse",
        "SecOp": "v4l2_fwnode_endpoint_free",
        "hasUsage": true,
        "usageCount": 24,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->v4l2_fwnode_endpoint_alloc_parse",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_engine_coredump_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_engine_coredump_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_cipher_test_sglists",
        "SecOp": "free_cipher_test_sglists",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->alloc_cipher_test_sglists",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "uml_kmalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 1,
        "API_path": "kmalloc->uml_kmalloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "r1bio_pool_alloc",
        "SecOp": "rbio_pool_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->r1bio_pool_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fs_path_alloc",
        "SecOp": "fs_path_free",
        "hasUsage": true,
        "usageCount": 22,
        "depth": 1,
        "API_path": "kmalloc->fs_path_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gnss_serial_allocate",
        "SecOp": "gnss_serial_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gnss_serial_allocate",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smk_parse_smack",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->smk_parse_smack",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_alloc_flow_attr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlx5_alloc_flow_attr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acc_alloc_fw",
        "SecOp": "acc_free_fw",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acc_alloc_fw",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ksmbd_inode_get",
        "SecOp": "ksmbd_inode_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ksmbd_inode_get",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ionic_devlink_alloc",
        "SecOp": "ionic_devlink_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->devlink_alloc_ns->devlink_alloc->ionic_devlink_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_n2cp",
        "SecOp": "free_n2cp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_n2cp",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aq_ring_alloc",
        "SecOp": "aq_ring_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->aq_ring_alloc",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sk_psock_init_link",
        "SecOp": "sk_psock_free_link",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sk_psock_init_link",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_alloc_createdata",
        "SecOp": "nfs_free_createdata",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->nfs_alloc_createdata",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "megasas_alloc_irq_vectors",
        "SecOp": "megasas_free_ctrl_mem",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->irq_create_affinity_masks->pci_alloc_irq_vectors_affinity->__megasas_alloc_irq_vectors->megasas_alloc_irq_vectors",
        "var_path": "retval->retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xfs_alloc_buftarg",
        "SecOp": "xfs_free_buftarg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmem_alloc->kmem_zalloc->xfs_alloc_buftarg",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_parse_eeprom_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iwl_parse_eeprom_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_crtc_state_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->intel_crtc_state_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "metadata_open",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->metadata_open",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_jit_alloc_exec_page",
        "SecOp": "bpf_jit_free_exec",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->module_alloc->bpf_jit_alloc_exec->bpf_jit_alloc_exec_page",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cci_pci_alloc_irq",
        "SecOp": "cci_pci_free_irq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->irq_create_affinity_masks->pci_alloc_irq_vectors_affinity->pci_alloc_irq_vectors->cci_pci_alloc_irq",
        "var_path": "retval->retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvkm_mmu_ptp_get",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvkm_mmu_ptp_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_label_alloc",
        "SecOp": "nfs4_label_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_label_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qmi_encode_message",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qmi_encode_message",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "copy_gadget_strings",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->copy_gadget_strings",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_writepage_args_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_writepage_args_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ionic_bus_alloc_irq_vectors",
        "SecOp": "ionic_bus_free_irq_vectors",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->irq_create_affinity_masks->pci_alloc_irq_vectors_affinity->pci_alloc_irq_vectors->ionic_bus_alloc_irq_vectors",
        "var_path": "retval->retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_alloc_srq",
        "SecOp": "mthca_free_srq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->mthca_alloc_mailbox->mthca_alloc_srq",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vfio_ccw_alloc_private",
        "SecOp": "vfio_ccw_free_private",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vfio_ccw_alloc_private",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rtw89_hex2bin_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->rtw89_hex2bin_user",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_port_alloc",
        "SecOp": "nfp_port_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_port_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ib_alloc_cq_any",
        "SecOp": "ib_free_cq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kzalloc->create_cq->__ib_alloc_cq->__ib_alloc_cq_any->ib_alloc_cq_any",
        "var_path": "retval->retval->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zcrypt_queue_alloc",
        "SecOp": "zcrypt_queue_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->zcrypt_queue_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmem_cell_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 22,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efc_nport_alloc",
        "SecOp": "efc_nport_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->efc_nport_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_temp_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_temp_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "stack_alloc",
        "SecOp": "stack_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node->stack_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_get_fh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_get_fh",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fwnet_frag_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->fwnet_frag_new",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xt_hook_ops_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->xt_hook_ops_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cxl_alloc_afu",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cxl_alloc_afu",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smu_sat_get_sdb_partition",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->smu_sat_get_sdb_partition",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_cq_alloc",
        "SecOp": "mlx4_cq_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->mlx4_alloc_cmd_mailbox->mlx4_cq_alloc",
        "var_path": "retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pfn_array_alloc",
        "SecOp": "pfn_array_unpin_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->pfn_array_alloc",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "make_slot_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->make_slot_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "elf_dump_thread_status",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->elf_dump_thread_status",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_dma_desc_resources",
        "SecOp": "free_dma_desc_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kmalloc_array->kcalloc->__alloc_dma_rx_desc_resources->alloc_dma_rx_desc_resources->alloc_dma_desc_resources",
        "var_path": "retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mmc_blk_ioctl_copy_from_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mmc_blk_ioctl_copy_from_user",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "psbfb_alloc",
        "SecOp": "psb_gtt_free_range",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->psb_gtt_alloc_range->psbfb_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_sdesc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->alloc_sdesc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_crtc_alloc",
        "SecOp": "intel_crtc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_crtc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sti_get_bmode_rom",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->sti_get_bmode_rom",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_backref_alloc_edge",
        "SecOp": "btrfs_backref_free_edge",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_backref_alloc_edge",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_clk",
        "SecOp": "free_clk",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_clk",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_tc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_tc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mousevsc_alloc_device",
        "SecOp": "mousevsc_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mousevsc_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qedf_cmd_mgr_alloc",
        "SecOp": "qedf_cmd_mgr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->qedf_cmd_mgr_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "allocate_flower_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->allocate_flower_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fsl_mc_msi_domain_alloc_irqs",
        "SecOp": "fsl_mc_msi_domain_free_irqs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->alloc_msi_entry->fsl_mc_msi_alloc_descs->fsl_mc_msi_domain_alloc_irqs",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvme_add_user_metadata",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nvme_add_user_metadata",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mesh_path_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mesh_path_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "shadow_alloc",
        "SecOp": "shadow_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->__klp_shadow_get_or_alloc->klp_shadow_alloc->shadow_alloc",
        "var_path": "retval->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rt2x00usb_alloc_reg",
        "SecOp": "rt2x00usb_free_reg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rt2x00usb_alloc_reg",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smb2_get_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->smb_strndup_from_utf16->smb2_get_name",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xhci_alloc_virt_device",
        "SecOp": "xhci_free_virt_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_alloc_container_ctx->xhci_alloc_virt_device",
        "var_path": "retval->retval->arg->arg->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qat_uclo_map_chunk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qat_uclo_map_chunk",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "via_alloc_desc_pages",
        "SecOp": "via_free_sg_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->via_alloc_desc_pages",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "raw3215_alloc_info",
        "SecOp": "raw3215_free_info",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->raw3215_alloc_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "komeda_get_layer_fourcc_list",
        "SecOp": "komeda_put_fourcc_list",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->komeda_get_layer_fourcc_list",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "core_dev_init_initiator_node_lun_acl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->core_dev_init_initiator_node_lun_acl",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tg3_vpd_readblock",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->tg3_vpd_readblock",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_function",
        "SecOp": "free_function",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_function",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "load_elf_phdrs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->load_elf_phdrs",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ldc_alloc",
        "SecOp": "ldc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ldc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_lznt_ctx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_lznt_ctx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_frag_buf_alloc_node",
        "SecOp": "mlx5_db_free",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx5_frag_buf_alloc_node",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tcf_pedit_keys_ex_parse",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->tcf_pedit_keys_ex_parse",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnx2_alloc_mem",
        "SecOp": "bnx2_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->__vmalloc->vzalloc->bnx2_alloc_rx_mem->bnx2_alloc_mem",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "stm32_mdma_alloc_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->stm32_mdma_alloc_desc",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fifo_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fifo_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_bitmap_from_slot",
        "SecOp": "md_bitmap_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->md_bitmap_create->get_bitmap_from_slot",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ip_vs_dest_dst_alloc",
        "SecOp": "ip_vs_dest_dst_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ip_vs_dest_dst_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i915_random_order",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->i915_random_order",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "beiscsi_hba_alloc",
        "SecOp": "beiscsi_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->scsi_host_alloc->iscsi_host_alloc->beiscsi_hba_alloc",
        "var_path": "retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_subpage",
        "SecOp": "btrfs_free_subpage",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_subpage",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tomoyo_get_name",
        "SecOp": "tomoyo_put_name",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tomoyo_get_name",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__alloc_buffer_wait",
        "SecOp": "__free_buffer_wake",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->alloc_buffer_data->alloc_buffer->__alloc_buffer_wait_no_callback->__alloc_buffer_wait",
        "var_path": "retval->retval->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hpsa_alloc_sas_node",
        "SecOp": "hpsa_free_sas_node",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hpsa_alloc_sas_node",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5e_alloc_rq",
        "SecOp": "mlx5e_free_rq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node->kvmalloc_node->kvzalloc_node->mlx5e_alloc_rq",
        "var_path": "retval->retval->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "run_alloc",
        "SecOp": "run_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->run_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_rndis_device",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_rndis_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kcalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1151,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->kcalloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nouveau_pfns_alloc",
        "SecOp": "nouveau_pfns_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nouveau_pfns_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ltree_add_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ltree_add_entry",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_ipath",
        "SecOp": "free_ipath",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->init_ipath",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qxl_ring_create",
        "SecOp": "qxl_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->qxl_ring_create",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_alloc_icm",
        "SecOp": "mlx4_free_icm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->mlx4_alloc_icm",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "track_data_alloc",
        "SecOp": "track_data_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->track_data_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "video_device_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->video_device_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qeth_alloc_pool_entry",
        "SecOp": "qeth_free_pool_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qeth_alloc_pool_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "test_alloc",
        "SecOp": "test_free",
        "hasUsage": true,
        "usageCount": 13,
        "depth": 1,
        "API_path": "kmalloc->test_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "null_alloc_dev",
        "SecOp": "null_free_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->null_alloc_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_do_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "prestera_devlink_alloc",
        "SecOp": "prestera_devlink_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->devlink_alloc_ns->devlink_alloc->prestera_devlink_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "genpd_alloc_dev_data",
        "SecOp": "genpd_free_dev_data",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->genpd_alloc_dev_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fsverity_create_info",
        "SecOp": "fsverity_free_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->fsverity_prepare_hash_state->fsverity_init_merkle_tree_params->fsverity_create_info",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vio_ldc_alloc",
        "SecOp": "vio_ldc_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ldc_alloc->vio_ldc_alloc",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "msm_parse_post_deps",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->msm_parse_post_deps",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfc_hci_allocate_device",
        "SecOp": "nfc_hci_free_device",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfc_hci_allocate_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rtllib_alloc_txb",
        "SecOp": "rtllib_txb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rtllib_alloc_txb",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iio_buffers_alloc_sysfs_and_mask",
        "SecOp": "iio_buffers_free_sysfs_and_mask",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->__iio_buffer_alloc_sysfs_and_mask->iio_buffers_alloc_sysfs_and_mask",
        "var_path": "retval->retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_get_lowerstack",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ovl_alloc_entry->ovl_get_lowerstack",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "megasas_compat_iocpacket_get_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->megasas_compat_iocpacket_get_user",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_indirect_packed",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_indirect_packed",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smc_wr_alloc_link_mem",
        "SecOp": "smc_wr_free_link_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->smc_wr_alloc_link_mem",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "jent_zalloc",
        "SecOp": "jent_zfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->jent_zalloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "uasp_alloc_cmd",
        "SecOp": "uasp_free_cmdreq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->uasp_alloc_cmd",
        "var_path": "retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_usb_get_audioformat_uac3",
        "SecOp": "audioformat_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->audio_format_alloc_init->snd_usb_get_audioformat_uac3",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_path_alloc",
        "SecOp": "tb_path_free",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_path_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnxt_qplib_alloc_res",
        "SecOp": "bnxt_qplib_free_res",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bnxt_qplib_alloc_dpi_tbl->bnxt_qplib_alloc_res",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "inet_alloc_ifa",
        "SecOp": "inet_free_ifa",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->inet_alloc_ifa",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "f2fs_kmalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->f2fs_kmalloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tty3270_alloc_view",
        "SecOp": "tty3270_free_view",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tty3270_alloc_view",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_sk_storage_clone_elem",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->bpf_map_kzalloc->bpf_selem_alloc->bpf_sk_storage_clone_elem",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nouveau_bo_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nouveau_bo_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "input_allocate_device",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->input_allocate_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "akcipher_request_alloc",
        "SecOp": "akcipher_request_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->akcipher_request_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tty_audit_buf_alloc",
        "SecOp": "tty_audit_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->tty_audit_buf_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_table_get",
        "SecOp": "mthca_table_put",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->mthca_alloc_icm->mthca_table_get",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pqi_sas_rphy_alloc",
        "SecOp": "pqi_free_sas_port",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->sas_expander_alloc->pqi_sas_rphy_alloc",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dw_hdmi_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->dw_hdmi_get_edid",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_encode_real_fh",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_encode_real_fh",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hmm_bo_alloc_pages",
        "SecOp": "hmm_bo_free_pages",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->alloc_user_pages->hmm_bo_alloc_pages",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dwc2_desc_list_alloc",
        "SecOp": "dwc2_desc_list_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->dwc2_desc_list_alloc",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vdic_get_ipu_resources",
        "SecOp": "vdic_put_ipu_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ipu_idmac_get->vdic_get_ipu_resources",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "expr_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->expr_str",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mv_u3d_build_trb_one",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mv_u3d_build_trb_one",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "p9_client_stat",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->p9_client_stat",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vzalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->__vmalloc->vzalloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_opinfo",
        "SecOp": "free_opinfo",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_opinfo",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "spi_avmm_bridge_ctx_gen",
        "SecOp": "spi_avmm_bridge_ctx_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->spi_avmm_bridge_ctx_gen",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "siano_media_device_register",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->siano_media_device_register",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_soc_dts",
        "SecOp": "free_soc_dts",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_soc_dts",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zfcp_fsf_alloc",
        "SecOp": "zfcp_fsf_req_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->zfcp_fsf_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qla_edb_node_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla_edb_node_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sdw_port_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sdw_port_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_phy_db_init",
        "SecOp": "iwl_phy_db_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iwl_phy_db_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "debug_info_alloc",
        "SecOp": "debug_info_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->debug_info_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_urbs",
        "SecOp": "free_urbs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_urbs",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipoib_path_iter_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ipoib_path_iter_init",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_tree_mod_elem",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_tree_mod_elem",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__vb2_queue_alloc",
        "SecOp": "__vb2_queue_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__vb2_queue_alloc",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ip6mr_new_table",
        "SecOp": "ip6mr_free_table",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mr_table_alloc->ip6mr_new_table",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnx2x_alloc_rx_data",
        "SecOp": "bnx2x_frag_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->bnx2x_frag_alloc->bnx2x_alloc_rx_data",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_wifidev",
        "SecOp": "free_netdev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->netdev_name_node_alloc->netdev_name_node_head_alloc->register_netdevice->register_netdev->init_wifidev",
        "var_path": "retval->retval->arg->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_engines",
        "SecOp": "free_engines",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_engines",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sctp_make_temp_asoc",
        "SecOp": "sctp_association_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->sctp_association_new->sctp_make_temp_asoc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iscsit_alloc_conn",
        "SecOp": "iscsit_free_conn",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iscsit_alloc_conn",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iscsit_alloc_portal_group",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iscsit_alloc_portal_group",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cpi_prepare_req",
        "SecOp": "cpi_free_req",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cpi_prepare_req",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dup_and_fixup_symbol_prop",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dup_and_fixup_symbol_prop",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_copy",
        "SecOp": "mpi_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->mpi_alloc->mpi_copy",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xhci_ring_alloc",
        "SecOp": "xhci_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_segment_alloc->xhci_alloc_segments_for_ring->xhci_ring_alloc",
        "var_path": "retval->retval->arg->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_map_meta_alloc",
        "SecOp": "bpf_map_meta_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_map_meta_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocfs2_dx_dir_kmalloc_leaves",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->ocfs2_dx_dir_kmalloc_leaves",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_vudc_device",
        "SecOp": "put_vudc_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_vudc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "idal_buffer_alloc",
        "SecOp": "idal_buffer_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->idal_buffer_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fpga_mgr_create",
        "SecOp": "fpga_mgr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fpga_mgr_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sdw_alloc_slave_rt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sdw_alloc_slave_rt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vme_master_request",
        "SecOp": "vme_master_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vme_master_request",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__reuseport_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__reuseport_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "of_iio_channel_get_all",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->of_iio_channel_get_all",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vmalloc_to_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->vmalloc_to_sg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smi_from_recv_msg",
        "SecOp": "ipmi_free_smi_msg",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->ipmi_alloc_smi_msg->smi_from_recv_msg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ieee802_11_parse_elems",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 16,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ieee802_11_parse_elems_crc->ieee802_11_parse_elems",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "enetc_alloc_txbdr",
        "SecOp": "enetc_free_txbdr",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->enetc_alloc_txbdr",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sta_info_alloc",
        "SecOp": "sta_info_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sta_info_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_cpp_area_alloc",
        "SecOp": "nfp_cpp_area_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nfp_cpp_area_alloc_with_name->nfp_cpp_area_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_trampoline_get_progs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bpf_trampoline_get_progs",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "owl_dma_alloc_lli",
        "SecOp": "owl_dma_free_txd",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->owl_dma_alloc_lli",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_pdacf_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->snd_pdacf_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_prog_alloc_no_stats",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->__vmalloc->bpf_prog_alloc_no_stats",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_test_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bpf_test_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ahash_request_alloc",
        "SecOp": "ahash_request_free",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 1,
        "API_path": "kmalloc->ahash_request_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "stub_device_alloc",
        "SecOp": "stub_device_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->stub_device_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "f2fs_kzalloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->f2fs_kmalloc->f2fs_kzalloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__mwl8k_cmd_mac_multicast_adr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__mwl8k_cmd_mac_multicast_adr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "udma_prep_dma_cyclic_pkt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->udma_prep_dma_cyclic_pkt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rio_alloc_net",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rio_alloc_net",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_srq_buf",
        "SecOp": "free_srq_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->alloc_srq_idx->alloc_srq_buf",
        "var_path": "retval->retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gfs2_rlist_alloc",
        "SecOp": "gfs2_rlist_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->gfs2_rlist_alloc",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_pd_alloc",
        "SecOp": "mthca_pd_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->mthca_alloc_mailbox->mthca_mr_alloc->mthca_mr_alloc_notrans->mthca_pd_alloc",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xhci_dbc_ring_alloc",
        "SecOp": "dbc_ring_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xhci_dbc_ring_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "attach_one_i2c",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->attach_one_i2c",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_namespace_io",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->create_namespace_io",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_etr_buf",
        "SecOp": "tmc_free_etr_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tmc_alloc_etr_buf->alloc_etr_buf",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "TB_TEST_DP_TUNNEL1",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_dp->TB_TEST_DP_TUNNEL1",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_alloc_wqe_buf",
        "SecOp": "mthca_free_wqe_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->mthca_alloc_mailbox->mthca_mr_alloc->mthca_mr_alloc_phys->mthca_buf_alloc->mthca_alloc_wqe_buf",
        "var_path": "retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_alloc_like",
        "SecOp": "mpi_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->mpi_alloc->mpi_alloc_like",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "blk_alloc_queue_stats",
        "SecOp": "blk_free_queue_stats",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->blk_alloc_queue_stats",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_strndup_to_utf16",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->cifs_strndup_to_utf16",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_link_dev_register",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_link_dev_register",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ati_remote_alloc_buffers",
        "SecOp": "ati_remote_free_buffers",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->ati_remote_alloc_buffers",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ubifs_info",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ubifs_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_compose_mount_options",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cifs_compose_mount_options",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu",
        "SecOp": "amdgpu_amdkfd_gpuvm_free_memory_of_gpu",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->create_doorbell_sg->amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "psb_intel_sdvo_get_analog_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->psb_intel_sdvo_get_analog_edid",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "read_rds_samples",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->read_rds_samples",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrtl_initialize",
        "SecOp": "btrtl_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrtl_initialize",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "irq_create_affinity_masks",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->irq_create_affinity_masks",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wilc_parse_join_bss_param",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wilc_parse_join_bss_param",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kmem_alloc",
        "SecOp": "kmem_free",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 1,
        "API_path": "kmalloc->kmem_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sk_psock_create_ingress_msg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sk_psock_create_ingress_msg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_priority_group",
        "SecOp": "free_priority_group",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_priority_group",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vring_alloc_queue",
        "SecOp": "vring_free_queue",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->alloc_pages_exact->vring_alloc_queue",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_trace_kprobe",
        "SecOp": "free_trace_kprobe",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_trace_kprobe",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_qp_alloc_icm",
        "SecOp": "mlx4_qp_free_icm",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_qp_alloc_icm->mlx4_qp_alloc_icm",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "metadata_dst_alloc",
        "SecOp": "metadata_dst_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->metadata_dst_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ccu_pll_create_data",
        "SecOp": "ccu_pll_free_data",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ccu_pll_create_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "capi_message2str",
        "SecOp": "cdebbuf_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->cdebbuf_alloc->capi_message2str",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_flow_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_flow_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__nfp_nsp_identify",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__nfp_nsp_identify",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_alloc_open_state",
        "SecOp": "nfs4_free_open_state",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_alloc_open_state",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pcpu_alloc_chunk",
        "SecOp": "pcpu_free_chunk",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->pcpu_mem_zalloc->pcpu_alloc_chunk",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kvm_arch_alloc_vm",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->__vmalloc->kvm_arch_alloc_vm",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qeth_get_adapter_cmd",
        "SecOp": "qeth_put_cmd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->qeth_alloc_cmd->qeth_ipa_alloc_cmd->qeth_get_adapter_cmd",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_wlan",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_wlan",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ncp",
        "SecOp": "free_ncp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ncp",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__tape_3592_enable_crypt",
        "SecOp": "tape_do_io_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tape_alloc_request->__tape_3592_enable_crypt",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "trace_alloc_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->trace_alloc_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ofs_to_block",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->ofs_to_block",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "sugov_policy_alloc",
        "SecOp": "sugov_policy_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->sugov_policy_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_hashentry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_hashentry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "setup_initial_poll",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->uml_kmalloc->setup_initial_poll",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vic_provinfo_alloc",
        "SecOp": "vic_provinfo_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vic_provinfo_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "p9_client_getattr_dotl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->p9_client_getattr_dotl",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_dp_mst_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->drm_dp_mst_get_edid",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ea_get",
        "SecOp": "ea_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ea_get",
        "var_path": "retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfc_mei_phy_alloc",
        "SecOp": "nfc_mei_phy_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfc_mei_phy_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "default_engines",
        "SecOp": "free_engines",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_engines->default_engines",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cas_alloc_rxds",
        "SecOp": "cas_free_rxds",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->cas_page_alloc->cas_alloc_rx_desc->cas_alloc_rxds",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svc_rdma_read_info_alloc",
        "SecOp": "svc_rdma_read_info_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->svc_rdma_read_info_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "prestera_flow_block_get",
        "SecOp": "prestera_flow_block_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->flow_block_cb_alloc->prestera_flow_block_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ap_auth_make_challenge",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ap_auth_make_challenge",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hci_alloc_dev",
        "SecOp": "hci_free_dev",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->hci_alloc_dev_priv->hci_alloc_dev",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_block_rsv",
        "SecOp": "btrfs_free_block_rsv",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->btrfs_alloc_block_rsv",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rxrpc_alloc_connection",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rxrpc_alloc_connection",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "_allocate_lcu",
        "SecOp": "_free_lcu",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->_allocate_lcu",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_alloc_ds_server",
        "SecOp": "nfs4_free_ds_server",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->nfs4_alloc_ds_server",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "build_unc_path_to_root",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->build_unc_path_to_root",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cdebbuf_alloc",
        "SecOp": "cdebbuf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->cdebbuf_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_spt",
        "SecOp": "free_spt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_spt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_tunnel_alloc_dp",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_dp",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "batadv_dat_select_candidates",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->batadv_dat_select_candidates",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ibm_slot_from_id",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ibm_slot_from_id",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_scq",
        "SecOp": "free_scq",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_scq",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qedi_cm_alloc_mem",
        "SecOp": "qedi_free_iscsi_pf_param",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qedi_cm_alloc_mem",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ffs_data_new",
        "SecOp": "ffs_data_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ffs_data_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_file_alloc",
        "SecOp": "drm_file_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->drm_file_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mask_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->mask_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bin_to_hex_dup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bin_to_hex_dup",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnx2x_alloc_mem_bp",
        "SecOp": "bnx2x_free_mem_bp",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bnx2x_alloc_mem_bp",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_pci_alloc_irq_vectors",
        "SecOp": "mlxsw_pci_free_irq_vectors",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->irq_create_affinity_masks->pci_alloc_irq_vectors_affinity->pci_alloc_irq_vectors->mlxsw_pci_alloc_irq_vectors",
        "var_path": "retval->retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vnt_alloc_bufs",
        "SecOp": "vnt_free_int_bufs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vnt_alloc_bufs",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_sglist",
        "SecOp": "free_sglist",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_sglist",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "l2tp_session_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->l2tp_session_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "software_node_alloc",
        "SecOp": "software_node_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->property_entry_copy_data->property_entries_dup->software_node_alloc",
        "var_path": "retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "_tegra_init_pll",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 15,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->_tegra_init_pll",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pg_vec",
        "SecOp": "free_pg_vec",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_pg_vec",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ovl_alloc_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ovl_alloc_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "v4l2_subdev_alloc_state",
        "SecOp": "v4l2_subdev_free_state",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->v4l2_subdev_alloc_state",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_encoder_current_mode",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_encoder_current_mode",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_mhop_hem",
        "SecOp": "free_mhop_hem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->hns_roce_alloc_hem->alloc_mhop_hem",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tomoyo_get_transit_preference",
        "SecOp": "tomoyo_put_name",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tomoyo_get_name->tomoyo_get_transit_preference",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "seq_create_client1",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->seq_create_client1",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acpi_ec_alloc",
        "SecOp": "acpi_ec_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acpi_ec_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "optee_config_dyn_shm",
        "SecOp": "tee_shm_pool_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tee_shm_pool_alloc->optee_config_dyn_shm",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wl1271_rx_filter_alloc",
        "SecOp": "wl1271_rx_filter_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wl1271_rx_filter_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_random_order",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->drm_random_order",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ubi_eba_create_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ubi_eba_create_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qed_dcbnl_get_dcbx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 20,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qed_dcbnl_get_dcbx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnxt_alloc_stats",
        "SecOp": "bnxt_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->bnxt_alloc_stats_mem->bnxt_alloc_stats",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rxe_create_mmap_info",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rxe_create_mmap_info",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svc_rdma_create_xprt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->svc_rdma_create_xprt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_bprm",
        "SecOp": "free_bprm",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_bprm",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipr_alloc_mem",
        "SecOp": "ipr_free_mem",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->ipr_alloc_cmd_blks->ipr_alloc_mem",
        "var_path": "retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_txq_dyn_alloc_dma",
        "SecOp": "iwl_txq_gen2_free_memory",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->iwl_txq_dyn_alloc_dma",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn31_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn31_vpg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wrap_dma_fence",
        "SecOp": "free_fence",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->alloc_fence->wrap_dma_fence",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__alloc_atm_dev",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__alloc_atm_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_tunnel_alloc",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_lightbar_cmd_msg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 1,
        "API_path": "kmalloc->alloc_lightbar_cmd_msg",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acpi_processor_alloc_pdc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->acpi_processor_alloc_pdc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cdev_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cdev_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "generate_dma_contract",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->generate_dma_contract",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bio_alloc_map_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->bio_alloc_map_data",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_indirect_split",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->alloc_indirect_split",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_alloc_state_owner",
        "SecOp": "nfs4_free_state_owner",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_alloc_state_owner",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "afs_alloc_read",
        "SecOp": "afs_put_read",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->afs_alloc_read",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_random_order",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->get_random_order",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efa_alloc_mr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->efa_alloc_mr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "io_mapping_create_wc",
        "SecOp": "io_mapping_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->io_mapping_create_wc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pod_alloc_sysex_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->line6_alloc_sysex_buffer->pod_alloc_sysex_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ubd_alloc_req",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ubd_alloc_req",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "add_orphan_dir_info",
        "SecOp": "free_orphan_dir_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->add_orphan_dir_info",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "samsung_clk_alloc_reg_dump",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->samsung_clk_alloc_reg_dump",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "armpmu_alloc",
        "SecOp": "armpmu_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__armpmu_alloc->armpmu_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "log_create_ra",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->log_create_ra",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "convert_to_unix_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->convert_to_unix_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ubifs_tnc_next_ent",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->ubifs_tnc_next_ent",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "resource_list_create_entry",
        "SecOp": "resource_list_free_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->resource_list_create_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vgic_its_alloc_ite",
        "SecOp": "its_free_ite",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vgic_its_alloc_ite",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "uvesafb_prep",
        "SecOp": "uvesafb_free",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->uvesafb_prep",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "clone_fs_devices",
        "SecOp": "free_fs_devices",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_fs_devices->clone_fs_devices",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "irda_usb_find_class_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->irda_usb_find_class_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnxt_tc_get_tunnel_node",
        "SecOp": "bnxt_tc_put_tunnel_node",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->bnxt_tc_get_tunnel_node",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "audit_unpack_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->audit_unpack_string",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "spi_res_alloc",
        "SecOp": "spi_res_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->spi_res_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_uefi_get_pnvm",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->iwl_uefi_get_pnvm",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "acpiphp_init_context",
        "SecOp": "acpiphp_put_context",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->acpiphp_init_context",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bnad_tx_res_alloc",
        "SecOp": "bnad_tx_res_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->bnad_mem_alloc->bnad_tx_res_alloc",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dev_new",
        "SecOp": "put_dev",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dev_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cifs_build_devname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->cifs_build_devname",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "gelic_eurus_sync_cmd",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->gelic_eurus_sync_cmd",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hci_alloc_xfer",
        "SecOp": "hci_free_xfer",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hci_alloc_xfer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cfv_alloc_and_copy_to_shm",
        "SecOp": "free_buf_info",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->cfv_alloc_and_copy_to_shm",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svc_i3c_master_alloc_xfer",
        "SecOp": "svc_i3c_master_free_xfer",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->svc_i3c_master_alloc_xfer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zfcp_fsf_fcp_task_mgmt",
        "SecOp": "zfcp_fsf_req_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->zfcp_fsf_alloc->zfcp_fsf_req_create->zfcp_fsf_fcp_task_mgmt",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_peer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_peer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_connector_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_connector_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "udma_prep_slave_sg_pkt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->udma_prep_slave_sg_pkt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ax25_create_cb",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ax25_create_cb",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "idma64_alloc_desc",
        "SecOp": "idma64_desc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->idma64_alloc_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "edac_device_alloc_ctl_info",
        "SecOp": "edac_device_free_ctl_info",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->edac_device_alloc_ctl_info",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__renesas_usb3_ep_alloc_request",
        "SecOp": "__renesas_usb3_ep_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__renesas_usb3_ep_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "scan_behind_bridge",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->scan_behind_bridge",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_gem_shmem_get_sg_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->drm_prime_pages_to_sg->drm_gem_shmem_get_sg_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "selinux_ima_collect_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->selinux_ima_collect_state",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ath11k_pci_alloc_msi",
        "SecOp": "ath11k_pci_free_msi",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->kmalloc_array->kcalloc->irq_create_affinity_masks->pci_alloc_irq_vectors_affinity->pci_alloc_irq_vectors->ath11k_pci_alloc_msi",
        "var_path": "retval->retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ftrace_alloc_direct_func",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ftrace_alloc_direct_func",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__of_prop_dup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__of_prop_dup",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ctnetlink_alloc_filter",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ctnetlink_alloc_filter",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__fetch_rtas_last_error",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->__fetch_rtas_last_error",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pqi_alloc_sas_port",
        "SecOp": "pqi_free_sas_port",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pqi_alloc_sas_port",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mi_get",
        "SecOp": "mi_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->mi_init->mi_get",
        "var_path": "retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vrf_map_elem_alloc",
        "SecOp": "vrf_map_elem_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vrf_map_elem_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "arm_lpae_alloc_pgtable",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 1,
        "API_path": "kmalloc->arm_lpae_alloc_pgtable",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cfi_read_pri",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->cfi_read_pri",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_info_create_entry",
        "SecOp": "snd_info_free_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->snd_info_create_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "virtnet_alloc_queues",
        "SecOp": "virtnet_free_queues",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->virtnet_alloc_queues",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfc_llc_allocate",
        "SecOp": "nfc_llc_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfc_llc_allocate",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_alloc_createdata",
        "SecOp": "nfs4_free_createdata",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_alloc_createdata",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipc_mmio_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ipc_mmio_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pl08x_init_txd",
        "SecOp": "pl08x_free_txd",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->pl08x_get_txd->pl08x_init_txd",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nsim_bpf_map_alloc",
        "SecOp": "nsim_bpf_map_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->nsim_map_alloc_elem->nsim_bpf_map_alloc",
        "var_path": "retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lt9611uxc_firmware_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->lt9611uxc_firmware_read",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xilinx_vdma_alloc_tx_segment",
        "SecOp": "xilinx_dma_free_tx_descriptor",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xilinx_vdma_alloc_tx_segment",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_info_create_module_entry",
        "SecOp": "snd_info_free_entry",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->snd_info_create_entry->snd_info_create_module_entry",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wcd_clsh_ctrl_alloc",
        "SecOp": "wcd_clsh_ctrl_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->wcd_clsh_ctrl_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fusb300_alloc_request",
        "SecOp": "fusb300_free_request",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fusb300_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipr_alloc_ucode_buffer",
        "SecOp": "ipr_free_ucode_buffer",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ipr_alloc_ucode_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "debug_get_user_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->debug_get_user_string",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ieee80211_alloc_txb",
        "SecOp": "ieee80211_txb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ieee80211_alloc_txb",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_alloc_dummy_root",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->btrfs_alloc_dummy_root",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvme_rdma_alloc_ring",
        "SecOp": "nvme_rdma_free_ring",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->nvme_rdma_alloc_ring",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "wil_vring_alloc",
        "SecOp": "wil_vring_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->wil_vring_alloc",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "netdev_create_hash",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->netdev_create_hash",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "new_nbp",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->new_nbp",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "flow_resources_alloc",
        "SecOp": "ib_uverbs_flow_resources_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->flow_resources_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "netdev_name_node_head_alloc",
        "SecOp": "netdev_name_node_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->netdev_name_node_alloc->netdev_name_node_head_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vhost_iotlb_alloc",
        "SecOp": "vhost_iotlb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vhost_iotlb_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs3_alloc_createdata",
        "SecOp": "nfs3_free_createdata",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs3_alloc_createdata",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_inout",
        "SecOp": "free_inout",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_inout",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_rndis_request",
        "SecOp": "put_rndis_request",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->get_rndis_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__alloc_pd",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__alloc_pd",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zfcp_fsf_abort_fcp_cmnd",
        "SecOp": "zfcp_fsf_req_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->zfcp_fsf_alloc->zfcp_fsf_req_create->zfcp_fsf_abort_fcp_cmnd",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dasd_alloc_block",
        "SecOp": "dasd_free_block",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dasd_alloc_block",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mei_cl_alloc_cb",
        "SecOp": "mei_io_cb_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mei_io_cb_init->mei_cl_alloc_cb",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efx_alloc_rss_context_entry",
        "SecOp": "efx_free_rss_context_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->efx_alloc_rss_context_entry",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hns3_backup_ringparam",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->hns3_backup_ringparam",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qla24xx_alloc_purex_item",
        "SecOp": "qla24xx_free_purex_item",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qla24xx_alloc_purex_item",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "udma_prep_slave_sg_triggered_tr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->udma_alloc_tr_desc->udma_prep_slave_sg_triggered_tr",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xz_dec_init",
        "SecOp": "xz_dec_end",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kmalloc->xz_dec_init",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "capture_regs",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->capture_regs",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "lpfc_alloc_bsg_buffers",
        "SecOp": "lpfc_free_bsg_buffers",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 4,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->lpfc_mbuf_alloc->lpfc_alloc_bsg_buffers",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_fs_devices",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_fs_devices",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nft_set_elem_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nft_set_elem_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_node_to_cpumask",
        "SecOp": "free_node_to_cpumask",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alloc_node_to_cpumask",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_fw_alloc_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->brcmf_fw_alloc_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_alloc_cq_buf",
        "SecOp": "mthca_free_mailbox",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->mthca_alloc_mailbox->mthca_mr_alloc->mthca_mr_alloc_phys->mthca_buf_alloc->mthca_alloc_cq_buf",
        "var_path": "retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svc_fill_symlink_pathname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->svc_fill_symlink_pathname",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xhci_alloc_segments_for_ring",
        "SecOp": "xhci_segment_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->xhci_segment_alloc->xhci_alloc_segments_for_ring",
        "var_path": "retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ucounts",
        "SecOp": "put_ucounts",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ucounts",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmet_rdma_alloc_queue",
        "SecOp": "nvmet_rdma_free_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->nvmet_rdma_alloc_cmd->nvmet_rdma_alloc_cmds->nvmet_rdma_alloc_queue",
        "var_path": "retval->arg->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tipc_aead_mem_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->tipc_aead_mem_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "udma_prep_dma_cyclic_tr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->udma_alloc_tr_desc->udma_prep_dma_cyclic_tr",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pci_store_saved_state",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pci_store_saved_state",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfsd4_cltrack_client_has_session",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->nfsd4_cltrack_client_has_session",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_create_block_group_cache",
        "SecOp": "btrfs_put_block_group",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->btrfs_create_block_group_cache",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_bitset",
        "SecOp": "free_bitset",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->alloc_bitset",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vpfe_initialize",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vpfe_initialize",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmatest_alloc_test_data",
        "SecOp": "dmatest_free_test_data",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->dmatest_alloc_test_data",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ahc_alloc",
        "SecOp": "ahc_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ahc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_mr_alloc_phys",
        "SecOp": "mthca_free_mailbox",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->mthca_alloc_mailbox->mthca_mr_alloc->mthca_mr_alloc_phys",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usnic_vnic_alloc_res_chunk",
        "SecOp": "usnic_vnic_free_res_chunk",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->usnic_vnic_alloc_res_chunk",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "aa_get_buffer",
        "SecOp": "aa_put_buffer",
        "hasUsage": true,
        "usageCount": 11,
        "depth": 1,
        "API_path": "kmalloc->aa_get_buffer",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__live_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__live_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "b43_calibrate_lo_setting",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->b43_calibrate_lo_setting",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ioasid_alloc_allocator",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ioasid_alloc_allocator",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mdiobus_alloc_size",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mdiobus_alloc_size",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_workqueue_attrs",
        "SecOp": "free_workqueue_attrs",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_workqueue_attrs",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "snd_usb_find_power_domain",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->snd_usb_find_power_domain",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_scanval",
        "SecOp": "mpi_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->mpi_alloc->mpi_scanval",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ar5523_alloc_tx_cmd",
        "SecOp": "ar5523_free_tx_cmd",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->ar5523_alloc_tx_cmd",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_free_dqblk",
        "SecOp": "put_free_dqblk",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->get_free_dqblk",
        "var_path": "retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mthca_alloc_srq_buf",
        "SecOp": "mthca_free_mailbox",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->mthca_alloc_mailbox->mthca_mr_alloc->mthca_mr_alloc_phys->mthca_buf_alloc->mthca_alloc_srq_buf",
        "var_path": "retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xfrm_policy_construct",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->xfrm_policy_alloc->xfrm_policy_construct",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "p54_convert_db",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->p54_convert_db",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "compute_generator_polynomial",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->bch_alloc->compute_generator_polynomial",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "erofs_read_metadata",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->erofs_read_metadata",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_mr_hw_get_mpt",
        "SecOp": "mlx4_mr_hw_put_mpt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kmalloc->pool_alloc_page->dma_pool_alloc->dma_pool_zalloc->mlx4_alloc_cmd_mailbox->mlx4_mr_hw_get_mpt",
        "var_path": "retval->retval->arg->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "efa_vmalloc_buf_to_sg",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->efa_vmalloc_buf_to_sg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_rl_table_get",
        "SecOp": "mlx5_rl_table_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx5_rl_table_get",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_alloc_bfreg",
        "SecOp": "mlx5_free_bfreg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->alloc_uars_page->alloc_bfreg->mlx5_alloc_bfreg",
        "var_path": "retval->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "netlbl_secattr_alloc",
        "SecOp": "netlbl_secattr_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->netlbl_secattr_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipmi_alloc_smi_msg",
        "SecOp": "ipmi_free_smi_msg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ipmi_alloc_smi_msg",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fuse_io_alloc",
        "SecOp": "fuse_io_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fuse_io_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs_alloc_fhandle",
        "SecOp": "nfs_free_fhandle",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 1,
        "API_path": "kmalloc->nfs_alloc_fhandle",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pnfs_alloc_commit_array",
        "SecOp": "pnfs_free_commit_array",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->pnfs_alloc_commit_array",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_multipath",
        "SecOp": "free_multipath",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_multipath",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "atomisp_css_shading_table_alloc",
        "SecOp": "atomisp_css_shading_table_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->ia_css_shading_table_alloc->atomisp_css_shading_table_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "brcmf_alloc_internal_escan_request",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->brcmf_alloc_internal_escan_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "udma_alloc_tr_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->udma_alloc_tr_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ksmbd_convert_dir_info_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ksmbd_convert_dir_info_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "convert_allocate_fpntbl",
        "SecOp": "ia_css_host_data_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->ia_css_host_data_allocate->convert_allocate_fpntbl",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_cld_upcall",
        "SecOp": "free_cld_upcall",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_cld_upcall",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "enetc_alloc_tx_resources",
        "SecOp": "enetc_free_tx_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->__vmalloc->vzalloc->enetc_alloc_txbdr->enetc_alloc_tx_resources",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmem_cell_prepare_write_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nvmem_cell_prepare_write_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xfrm_policy_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->xfrm_policy_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xfrm_hash_alloc",
        "SecOp": "xfrm_hash_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->xfrm_hash_alloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_conn_from_crses",
        "SecOp": "free_conn",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->alloc_conn->alloc_conn_from_crses",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_rif_mac_profile_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_rif_mac_profile_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fnd_get",
        "SecOp": "fnd_put",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fnd_get",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_transport",
        "SecOp": "free_transport",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_transport",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dmabuf_imp_alloc_storage",
        "SecOp": "dmabuf_imp_free_storage",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dmabuf_imp_alloc_storage",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usbtest_alloc_urb",
        "SecOp": "simple_free_urb",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->usbtest_alloc_urb",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_get_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->mpi_get_buffer",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "skcipher_request_alloc",
        "SecOp": "skcipher_request_free",
        "hasUsage": true,
        "usageCount": 21,
        "depth": 1,
        "API_path": "kmalloc->skcipher_request_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "parse_acl_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->parse_acl_data",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ocfs2_new_path_from_path",
        "SecOp": "ocfs2_free_path",
        "hasUsage": true,
        "usageCount": 9,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ocfs2_new_path->ocfs2_new_path_from_path",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hidpp_get_device_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hidpp_get_device_name",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qib_user_sdma_alloc_header",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->qib_user_sdma_alloc_header",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ddw_list_new_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ddw_list_new_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_mvm_update_mcc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iwl_mvm_update_mcc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qfprom_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read->qfprom_read",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_rfi_get_freq_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->iwl_rfi_get_freq_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_rsttbl",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->init_rsttbl",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ccwchain_alloc",
        "SecOp": "ccwchain_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ccwchain_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_irq_cpu_rmap",
        "SecOp": "free_irq_cpu_rmap",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_cpu_rmap->alloc_irq_cpu_rmap",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svc_rdma_recv_ctxt_get",
        "SecOp": "svc_rdma_recv_ctxt_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->svc_rdma_recv_ctxt_alloc->svc_rdma_recv_ctxt_get",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "pmcraid_alloc_sglist",
        "SecOp": "pmcraid_free_sglist",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->pmcraid_alloc_sglist",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_reloc_control",
        "SecOp": "free_reloc_control",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_reloc_control",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "fib_info_hash_alloc",
        "SecOp": "fib_info_hash_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->fib_info_hash_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i3c_master_alloc_i3c_dev",
        "SecOp": "i3c_master_free_i3c_dev",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i3c_master_alloc_i3c_dev",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rvt_mcast_qp_alloc",
        "SecOp": "rvt_mcast_qp_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->rvt_mcast_qp_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xfs_defer_ops_capture",
        "SecOp": "xfs_defer_ops_capture_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmem_alloc->kmem_zalloc->xfs_defer_ops_capture",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "svm_range_new",
        "SecOp": "svm_range_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->svm_range_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_tunnel_alloc_pci",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_pci",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_smp_req",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_smp_req",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cci_pci_create_irq_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->cci_pci_create_irq_table",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dw_edma_alloc_desc",
        "SecOp": "dw_edma_free_desc",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dw_edma_alloc_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "core_tpg_alloc_lun",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->core_tpg_alloc_lun",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_read_raw_from_sgl",
        "SecOp": "mpi_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->mpi_alloc->mpi_read_raw_from_sgl",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "csi_idmac_get_ipu_resources",
        "SecOp": "csi_idmac_put_ipu_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->ipu_idmac_get->csi_idmac_get_ipu_resources",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vgic_its_alloc_device",
        "SecOp": "vgic_its_free_device",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vgic_its_alloc_device",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nft_trans_elem_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->nft_trans_alloc_gfp->nft_trans_alloc->nft_trans_elem_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "psb_mmu_alloc_pt",
        "SecOp": "psb_mmu_free_pt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->psb_mmu_alloc_pt",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "build_fu_desc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->build_fu_desc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_dca_provider",
        "SecOp": "free_dca_provider",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_dca_provider",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_vblank_event",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_vblank_event",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "kmem_zalloc",
        "SecOp": "kmem_free",
        "hasUsage": true,
        "usageCount": 21,
        "depth": 2,
        "API_path": "kmalloc->kmem_alloc->kmem_zalloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ip6addrlbl_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ip6addrlbl_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ql_alloc_buffer_queues",
        "SecOp": "ql_free_buffer_queues",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kmalloc_array->ql_alloc_buffer_queues",
        "var_path": "retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "audit_krule_to_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->audit_krule_to_data",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_rq_shampo_alloc",
        "SecOp": "mlx5e_rq_free_shampo",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kmalloc->__vmalloc->__vmalloc_node->kvmalloc_node->kvzalloc_node->mlx5e_rq_shampo_hd_alloc->mlx5_rq_shampo_alloc",
        "var_path": "retval->retval->retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qp_host_alloc_queue",
        "SecOp": "qp_host_free_queue",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qp_host_alloc_queue",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "TB_TEST_PCIE_TUNNEL",
        "SecOp": "tb_tunnel_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->tb_tunnel_alloc->tb_tunnel_alloc_pci->TB_TEST_PCIE_TUNNEL",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "load_msg",
        "SecOp": "free_msg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->alloc_msg->load_msg",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usnic_fwd_dev_alloc",
        "SecOp": "usnic_fwd_dev_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->usnic_fwd_dev_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx4_cq_alloc_icm",
        "SecOp": "mlx4_cq_free_icm",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->mlx4_alloc_icm->mlx4_table_get->__mlx4_cq_alloc_icm->mlx4_cq_alloc_icm",
        "var_path": "retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_srq_idx",
        "SecOp": "free_srq_idx",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->bitmap_alloc->bitmap_zalloc->alloc_srq_idx",
        "var_path": "retval->retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "smb2_lock_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->smb2_lock_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_and_copy_ftrace_hash",
        "SecOp": "free_ftrace_hash",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_ftrace_hash->alloc_and_copy_ftrace_hash",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "intel_plane_alloc",
        "SecOp": "intel_plane_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->intel_plane_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmem_cell_read_variable_common",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->nvmem_cell_read->nvmem_cell_read_variable_common",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_create_tree",
        "SecOp": "btrfs_put_root",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->btrfs_alloc_root->btrfs_create_tree",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "simple_alloc_urb",
        "SecOp": "simple_free_urb",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 4,
        "API_path": "kmalloc->hcd_buffer_alloc->usb_alloc_coherent->usbtest_alloc_urb->simple_alloc_urb",
        "var_path": "retval->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iopf_queue_alloc",
        "SecOp": "iopf_queue_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->alloc_workqueue->iopf_queue_alloc",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ahash_edesc_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kmalloc->talitos_edesc_alloc->ahash_edesc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_i2c",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->create_i2c",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alx_alloc_rings",
        "SecOp": "alx_free_rings",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->alx_alloc_rx_ring->alx_alloc_rings",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "landlock_create_object",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->landlock_create_object",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "axi_desc_alloc",
        "SecOp": "axi_desc_put",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->axi_desc_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "usbip_alloc_iso_desc_pdu",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->usbip_alloc_iso_desc_pdu",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_async",
        "SecOp": "free_async",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_async",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mpi_alloc_set_ui",
        "SecOp": "mpi_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->mpi_alloc->mpi_alloc_set_ui",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vhost_vsock_alloc_pkt",
        "SecOp": "virtio_transport_free_pkt",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->vhost_vsock_alloc_pkt",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "umem_frag_buf_alloc",
        "SecOp": "umem_frag_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kmalloc_array->kcalloc->mlx5_frag_buf_alloc_node->umem_frag_buf_alloc",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlx5_chains_get_chain_mapping",
        "SecOp": "mlx5_chains_put_chain_mapping",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mapping_add->mlx5_chains_get_chain_mapping",
        "var_path": "retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "cfmuxl_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->cfmuxl_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "claim_region",
        "SecOp": "free_region",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->pcmcia_make_resource->claim_region",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "rnbd_get_iu",
        "SecOp": "rnbd_put_iu",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->rnbd_get_iu",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dln2_prep_buf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->dln2_prep_buf",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "create_entry",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->create_entry",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bpf_jit_alloc",
        "SecOp": "bpf_jit_binary_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->module_alloc->bpf_jit_alloc_exec->bpf_jit_binary_alloc->bpf_jit_alloc",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_mnt_ns",
        "SecOp": "free_mnt_ns",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_mnt_ns",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ima_alloc_key_entry",
        "SecOp": "ima_free_key_entry",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ima_alloc_key_entry",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfs4_pnfs_ds_addr_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfs4_pnfs_ds_addr_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__alloc_dma_rx_desc_resources",
        "SecOp": "__free_dma_rx_desc_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->__alloc_dma_rx_desc_resources",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ddw_property_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ddw_property_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_cmd_mbox_alloc",
        "SecOp": "mlxsw_cmd_mbox_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mlxsw_cmd_mbox_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "dcn303_vpg_create",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->dcn303_vpg_create",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "xfs_efi_init",
        "SecOp": "xfs_efi_item_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmem_alloc->kmem_zalloc->xfs_efi_init",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "getname",
        "SecOp": "putname",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->getname_flags->getname",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_cpp_from_nfp6000_pcie",
        "SecOp": "nfp_cpp_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nfp_cpp_from_nfp6000_pcie",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "drm_do_get_edid_base_block",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->drm_do_get_edid_base_block",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "attr_create_nonres_log",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->attr_create_nonres_log",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "hns_roce_buf_alloc",
        "SecOp": "hns_roce_buf_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->hns_roce_buf_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tb_property_copy_dir",
        "SecOp": "tb_property_free_dir",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->tb_property_create_dir->tb_property_copy_dir",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipoib_mcast_iter_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ipoib_mcast_iter_init",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "i3c_generic_ibi_alloc_pool",
        "SecOp": "i3c_generic_ibi_free_pool",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->i3c_generic_ibi_alloc_pool",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__alloc_irq_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->__alloc_irq_table",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nfp_eth_read_ports",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->__nfp_eth_read_ports->nfp_eth_read_ports",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "iwl_pcie_tx_alloc",
        "SecOp": "iwl_pcie_tx_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->iwl_pcie_tx_alloc",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "__alloc_dma_tx_desc_resources",
        "SecOp": "__free_dma_tx_desc_resources",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->__alloc_dma_tx_desc_resources",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ntfs_create_reparse_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ntfs_create_reparse_buffer",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tc_get_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->drm_do_get_edid_base_block->drm_do_get_edid->drm_get_edid->tc_get_edid",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "btrfs_printable_features",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->btrfs_printable_features",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mei_msg_hdr_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mei_msg_hdr_init",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mtd_kmalloc_up_to",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->mtd_kmalloc_up_to",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_pvd",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_pvd",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_ws",
        "SecOp": "free_ws",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->alloc_ws",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "genl_dumpit_info_alloc",
        "SecOp": "genl_dumpit_info_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->genl_dumpit_info_alloc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ext2_acl_to_disk",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->ext2_acl_to_disk",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "_opp_allocate",
        "SecOp": "_opp_free",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->_opp_allocate",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nilfs_segctor_new",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nilfs_segctor_new",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qdisc_get_rtab",
        "SecOp": "qdisc_put_rtab",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->qdisc_get_rtab",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tomoyo_print_header",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->tomoyo_print_header",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nl80211_parse_sched_scan",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->nl80211_parse_sched_scan",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "extract_hostname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 1,
        "API_path": "kmalloc->extract_hostname",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ieee80211_alloc_chanctx",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->ieee80211_alloc_chanctx",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "platform_msi_alloc_descs",
        "SecOp": "platform_msi_free_descs",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kmalloc->kzalloc->alloc_msi_entry->platform_msi_alloc_descs_with_irq->platform_msi_alloc_descs",
        "var_path": "retval->retval->retval->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vmalloc_to_sgt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vmalloc_to_sgt",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "tegra_mipi_request",
        "SecOp": "tegra_mipi_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->tegra_mipi_request",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "nvmet_rdma_alloc_cmds",
        "SecOp": "nvmet_rdma_free_cmds",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->nvmet_rdma_alloc_cmd->nvmet_rdma_alloc_cmds",
        "var_path": "retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ib_cq_pool_get",
        "SecOp": "ib_cq_pool_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 6,
        "API_path": "kmalloc->kzalloc->create_cq->__ib_alloc_cq->ib_alloc_cq->ib_alloc_cqs->ib_cq_pool_get",
        "var_path": "retval->retval->arg->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_crush_name",
        "SecOp": "free_crush_name",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->alloc_crush_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mctp_key_alloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->mctp_key_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "init_seen",
        "SecOp": "free_seen",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kmalloc_array->kcalloc->init_seen",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "vmxnet3_copy_mc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->vmxnet3_copy_mc",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "ipmi_alloc_recv_msg",
        "SecOp": "ipmi_free_recv_msg",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kmalloc->ipmi_alloc_recv_msg",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "mlxsw_sp_fid_dummy_get",
        "SecOp": "mlxsw_sp_fid_put",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->mlxsw_sp_fid_get->mlxsw_sp_fid_dummy_get",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "txx9dmac_desc_get",
        "SecOp": "txx9dmac_desc_put",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kmalloc->kzalloc->txx9dmac_desc_alloc->txx9dmac_desc_get",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_sg_table",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 7,
        "API_path": "kmalloc->kmalloc_array->sg_kmalloc->get_next_sg->sg_alloc_append_table_from_pages->sg_alloc_table_from_pages_segment->sg_alloc_table_from_pages->get_sg_table",
        "var_path": "retval->retval->retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "zcrypt_card_alloc",
        "SecOp": "zcrypt_card_free",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->zcrypt_card_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "alloc_test_dev_kmod",
        "SecOp": "free_test_dev_kmod",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->__vmalloc->vzalloc->alloc_test_dev_kmod",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "get_decomp_stream",
        "SecOp": "put_decomp_stream",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kmalloc->get_decomp_stream",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "qm_ctx_alloc",
        "SecOp": "qm_ctx_free",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 2,
        "API_path": "kmalloc->kzalloc->qm_ctx_alloc",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "bch_init",
        "SecOp": "bch_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kmalloc->bch_alloc->compute_generator_polynomial->bch_init",
        "var_path": "retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kmalloc"
    },
    {
        "API": "join",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->join",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "memdup_sockptr_nul",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 2,
        "API_path": "kstrdup->kmalloc_track_caller->memdup_sockptr_nul",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "dup_iter",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->dup_iter",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "cm_copy_private_data",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->cm_copy_private_data",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "copy_dev_ioctl",
        "SecOp": "free_dev_ioctl",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->memdup_user->copy_dev_ioctl",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "memdup_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 167,
        "depth": 2,
        "API_path": "kstrdup->kmalloc_track_caller->memdup_user",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "rpc_sockaddr2uaddr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kstrdup->rpc_sockaddr2uaddr",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "bpf_insn_prepare_dump",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->bpf_insn_prepare_dump",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "safe_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->safe_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "uclogic_rdesc_template_apply",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->uclogic_rdesc_template_apply",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "xenbus_directory",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 7,
        "depth": 5,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->join->xenbus_directory",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "psp_copy_user_blob",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 6,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->memdup_user->psp_copy_user_blob",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "convert_to_nt_pathname",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->convert_to_nt_pathname",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "krealloc",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 10,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->__do_krealloc->krealloc",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "meson_nand_op_get_dma_safe_output_buf",
        "SecOp": "meson_nand_op_put_dma_safe_output_buf",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->meson_nand_op_get_dma_safe_output_buf",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "nfp_bpf_relo_for_vnic",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->nfp_bpf_relo_for_vnic",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "hda_hstream_dbg_get_stream_info_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->hda_hstream_dbg_get_stream_info_str",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "mlx5e_dup_tun_info",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->mlx5e_dup_tun_info",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "scsi_bios_ptable",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 4,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->scsi_bios_ptable",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "xenbus_read",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 5,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->join->xenbus_read",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "brcm_alt_fw_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kstrdup->brcm_alt_fw_path",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "usb_get_gadget_udc_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->usb_get_gadget_udc_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "memdup_to_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->memdup_to_str",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "dapm_cnew_widget",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->dapm_cnew_widget",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "kstrndup_noeol",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kstrndup->kstrndup_noeol",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "event_fmt",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->event_fmt",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "kmemdup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 321,
        "depth": 2,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "kstrdup_const",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->kstrdup_const",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "kmalloc_track_caller",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 1,
        "API_path": "kstrdup->kmalloc_track_caller",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "strndup_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 17,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->memdup_user->strndup_user",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "brcmf_cfg80211_get_ops",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->brcmf_cfg80211_get_ops",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "kstrdup_quotable_file",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->kstrdup_quotable_file",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "_copy_key_from_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->memdup_user->_copy_key_from_user",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "ns_get_partition_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->ns_get_partition_name",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "dup_token",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->dup_token",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "kvasprintf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 5,
        "depth": 2,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "nfs_get_client",
        "SecOp": "nfs_put_client",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->xdr_netobj_dup->alloc_client->nfs_get_client",
        "var_path": "retval->retval->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "memdup_sockptr",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 8,
        "depth": 2,
        "API_path": "kstrdup->kmalloc_track_caller->memdup_sockptr",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "create_client",
        "SecOp": "free_client",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->xdr_netobj_dup->alloc_client->create_client",
        "var_path": "retval->retval->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "alloc_trial_cpuset",
        "SecOp": "free_cpuset",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->alloc_trial_cpuset",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "ipaq_micro_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->ipaq_micro_str",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "_copy_apqns_from_user",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->memdup_user->_copy_apqns_from_user",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "snd_soc_dapm_new_control",
        "SecOp": "snd_soc_dapm_free_widget",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->dapm_cnew_widget->snd_soc_dapm_new_control_unlocked->snd_soc_dapm_new_control",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "alloc_client",
        "SecOp": "free_client",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->xdr_netobj_dup->alloc_client",
        "var_path": "retval->retval->retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "memdup_user_nul",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 67,
        "depth": 2,
        "API_path": "kstrdup->kmalloc_track_caller->memdup_user_nul",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "dfs_cache_canonical_path",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kstrdup->dfs_cache_canonical_path",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "nf_queue_entry_dup",
        "SecOp": "nf_queue_entry_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->nf_queue_entry_dup",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "get_defined_signals",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 5,
        "API_path": "kstrdup->kmalloc_track_caller->__do_krealloc->krealloc->get_defined_attribute->get_defined_signals",
        "var_path": "retval->retval->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "ffs_prepare_buffer",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->memdup_user->ffs_prepare_buffer",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "match_strdup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 24,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup_nul->match_strdup",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "kmemdup_nul",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 23,
        "depth": 2,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup_nul",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "make_driver_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->make_driver_name",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "drm_get_override_edid",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->drm_edid_duplicate->drm_get_override_edid",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "nfs4_set_ds_client",
        "SecOp": "nfs_put_client",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 6,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->xdr_netobj_dup->alloc_client->nfs_get_client->nfs4_set_ds_client",
        "var_path": "retval->retval->retval->arg->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "ipv6_route_sysctl_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->ipv6_route_sysctl_init",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "drm_edid_duplicate",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->drm_edid_duplicate",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "nla_memdup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->nla_memdup",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "nfs_readdir_copy_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup_nul->nfs_readdir_copy_name",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "phy_attached_info_irq",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->phy_attached_info_irq",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "mxs_get_revision",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->mxs_get_revision",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "ksmbd_extract_sharename",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->ksmbd_extract_sharename",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "copyin_string",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 3,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->memdup_user_nul->copyin_string",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "ep93xx_get_machine_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->ep93xx_get_machine_name",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "spidev_get_ioc_message",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->memdup_user->spidev_get_ioc_message",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "extract_sharename",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 1,
        "API_path": "kstrdup->extract_sharename",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "clkctrl_get_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->clkctrl_get_name",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "get_link_target",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->link_target->get_link_target",
        "var_path": "retval->retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "ocxl_afu_irq_alloc",
        "SecOp": "ocxl_afu_irq_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->setup_afu_irq->ocxl_afu_irq_alloc",
        "var_path": "retval->retval->retval->arg->arg->arg",
        "var_role": "arg0",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "ipv6_icmp_sysctl_init",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->ipv6_icmp_sysctl_init",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "snd_soc_dapm_new_control_unlocked",
        "SecOp": "snd_soc_dapm_free_widget",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->dapm_cnew_widget->snd_soc_dapm_new_control_unlocked",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "target_ts_to_str",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 2,
        "API_path": "kstrdup->target_append_str->target_ts_to_str",
        "var_path": "retval->arg->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "get_defined_functions",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 5,
        "API_path": "kstrdup->kmalloc_track_caller->__do_krealloc->krealloc->get_defined_attribute->get_defined_functions",
        "var_path": "retval->retval->retval->arg->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "kasprintf",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 221,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf",
        "var_path": "retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "clkctrl_get_clock_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 2,
        "depth": 4,
        "API_path": "kstrdup->kmalloc_track_caller->kvasprintf->kasprintf->clkctrl_get_clock_name",
        "var_path": "retval->retval->retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "wl1271_rx_filter_alloc_field",
        "SecOp": "wl1271_rx_filter_free",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 3,
        "API_path": "kstrdup->kmalloc_track_caller->kmemdup->wl1271_rx_filter_alloc_field",
        "var_path": "retval->retval->retval->arg",
        "var_role": "arg0",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "scsi_dh_attached_handler_name",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 1,
        "depth": 1,
        "API_path": "kstrdup->scsi_dh_attached_handler_name",
        "var_path": "retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    },
    {
        "API": "kstrndup",
        "SecOp": "kfree",
        "hasUsage": true,
        "usageCount": 47,
        "depth": 2,
        "API_path": "kstrdup->kmalloc_track_caller->kstrndup",
        "var_path": "retval->retval->retval",
        "var_role": "retval",
        "SeedAPI": "kstrdup"
    }
]